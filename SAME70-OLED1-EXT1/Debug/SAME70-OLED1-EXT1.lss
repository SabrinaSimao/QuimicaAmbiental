
SAME70-OLED1-EXT1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000076a4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004076a4  004076a4  000176a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  004076ac  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000310  204009d0  0040807c  000209d0  2**2
                  ALLOC
  4 .stack        00002000  20400ce0  0040838c  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402ce0  0040a38c  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   0001925e  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003913  00000000  00000000  00039cb5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000065a3  00000000  00000000  0003d5c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000a00  00000000  00000000  00043b6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a20  00000000  00000000  0004456b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0002182d  00000000  00000000  00044f8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000f223  00000000  00000000  000667b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00092c55  00000000  00000000  000759db  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002274  00000000  00000000  00108630  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	e0 2c 40 20 dd 11 40 00 d9 11 40 00 d9 11 40 00     .,@ ..@...@...@.
  400010:	d9 11 40 00 d9 11 40 00 d9 11 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	d9 11 40 00 d9 11 40 00 00 00 00 00 d9 11 40 00     ..@...@.......@.
  40003c:	d9 11 40 00 d9 11 40 00 d9 11 40 00 51 18 40 00     ..@...@...@.Q.@.
  40004c:	d9 11 40 00 d9 11 40 00 d9 11 40 00 d9 11 40 00     ..@...@...@...@.
  40005c:	d9 11 40 00 d9 11 40 00 00 00 00 00 ad 0f 40 00     ..@...@.......@.
  40006c:	c1 0f 40 00 d5 0f 40 00 d9 11 40 00 d9 11 40 00     ..@...@...@...@.
  40007c:	d9 11 40 00 e9 0f 40 00 fd 0f 40 00 d9 11 40 00     ..@...@...@...@.
  40008c:	d9 11 40 00 d9 11 40 00 d9 11 40 00 d9 11 40 00     ..@...@...@...@.
  40009c:	d9 11 40 00 29 15 40 00 d9 11 40 00 d9 11 40 00     ..@.).@...@...@.
  4000ac:	d9 11 40 00 d9 11 40 00 d9 11 40 00 d9 11 40 00     ..@...@...@...@.
  4000bc:	d9 11 40 00 d9 11 40 00 d9 11 40 00 d9 11 40 00     ..@...@...@...@.
  4000cc:	d9 11 40 00 00 00 00 00 d9 11 40 00 00 00 00 00     ..@.......@.....
  4000dc:	d9 11 40 00 d9 11 40 00 d9 11 40 00 d9 11 40 00     ..@...@...@...@.
  4000ec:	d9 11 40 00 d9 11 40 00 d9 11 40 00 d9 11 40 00     ..@...@...@...@.
  4000fc:	d9 11 40 00 d9 11 40 00 d9 11 40 00 d9 11 40 00     ..@...@...@...@.
  40010c:	d9 11 40 00 d9 11 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 d9 11 40 00 d9 11 40 00 d9 11 40 00     ......@...@...@.
  40012c:	d9 11 40 00 d9 11 40 00 00 00 00 00 d9 11 40 00     ..@...@.......@.
  40013c:	d9 11 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	004076ac 	.word	0x004076ac

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	004076ac 	.word	0x004076ac
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	004076ac 	.word	0x004076ac
  4001a8:	00000000 	.word	0x00000000

004001ac <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
  4001ac:	b921      	cbnz	r1, 4001b8 <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
  4001ae:	6843      	ldr	r3, [r0, #4]
  4001b0:	f023 0301 	bic.w	r3, r3, #1
  4001b4:	6043      	str	r3, [r0, #4]
  4001b6:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
  4001b8:	6843      	ldr	r3, [r0, #4]
  4001ba:	f043 0301 	orr.w	r3, r3, #1
  4001be:	6043      	str	r3, [r0, #4]
  4001c0:	4770      	bx	lr

004001c2 <rtc_enable_interrupt>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void rtc_enable_interrupt(Rtc *p_rtc, uint32_t ul_sources)
{
	p_rtc->RTC_IER = ul_sources;
  4001c2:	6201      	str	r1, [r0, #32]
  4001c4:	4770      	bx	lr
	...

004001c8 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
  4001c8:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  4001ca:	6844      	ldr	r4, [r0, #4]
		if (ul_hour > 12) {
  4001cc:	f014 0f01 	tst.w	r4, #1
  4001d0:	d005      	beq.n	4001de <rtc_set_time+0x16>
  4001d2:	290c      	cmp	r1, #12
  4001d4:	d903      	bls.n	4001de <rtc_set_time+0x16>
			ul_hour -= 12;
  4001d6:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
  4001d8:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
  4001dc:	e000      	b.n	4001e0 <rtc_set_time+0x18>
	uint32_t ul_time = 0;
  4001de:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  4001e0:	4c1c      	ldr	r4, [pc, #112]	; (400254 <rtc_set_time+0x8c>)
  4001e2:	fba4 5603 	umull	r5, r6, r4, r3
  4001e6:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  4001e8:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  4001ec:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
  4001f0:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  4001f4:	fba4 6502 	umull	r6, r5, r4, r2
  4001f8:	08ed      	lsrs	r5, r5, #3
  4001fa:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  4001fe:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  400202:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
  400206:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
  40020a:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  40020c:	fba4 4201 	umull	r4, r2, r4, r1
  400210:	08d2      	lsrs	r2, r2, #3
  400212:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  400216:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  40021a:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  40021e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  400222:	6983      	ldr	r3, [r0, #24]
  400224:	f013 0f04 	tst.w	r3, #4
  400228:	d0fb      	beq.n	400222 <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
  40022a:	6803      	ldr	r3, [r0, #0]
  40022c:	f043 0301 	orr.w	r3, r3, #1
  400230:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  400232:	6983      	ldr	r3, [r0, #24]
  400234:	f013 0f01 	tst.w	r3, #1
  400238:	d0fb      	beq.n	400232 <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  40023a:	2301      	movs	r3, #1
  40023c:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
  40023e:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
  400240:	6803      	ldr	r3, [r0, #0]
  400242:	f023 0301 	bic.w	r3, r3, #1
  400246:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
  400248:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  40024a:	f000 0001 	and.w	r0, r0, #1
  40024e:	bcf0      	pop	{r4, r5, r6, r7}
  400250:	4770      	bx	lr
  400252:	bf00      	nop
  400254:	cccccccd 	.word	0xcccccccd

00400258 <rtc_set_time_alarm>:
 */
uint32_t rtc_set_time_alarm(Rtc *p_rtc,
		uint32_t ul_hour_flag, uint32_t ul_hour,
		uint32_t ul_minute_flag, uint32_t ul_minute,
		uint32_t ul_second_flag, uint32_t ul_second)
{
  400258:	b5f0      	push	{r4, r5, r6, r7, lr}
  40025a:	9c05      	ldr	r4, [sp, #20]
  40025c:	9d06      	ldr	r5, [sp, #24]
  40025e:	9f07      	ldr	r7, [sp, #28]
	uint32_t ul_alarm = 0;

	/* Hour alarm setting */
	if (ul_hour_flag) {
  400260:	460e      	mov	r6, r1
  400262:	b1b1      	cbz	r1, 400292 <rtc_set_time_alarm+0x3a>
		/* If 12-hour mode, set AMPM bit */
		if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  400264:	6841      	ldr	r1, [r0, #4]
			if (ul_hour > 12) {
  400266:	f011 0f01 	tst.w	r1, #1
  40026a:	d005      	beq.n	400278 <rtc_set_time_alarm+0x20>
  40026c:	2a0c      	cmp	r2, #12
  40026e:	d903      	bls.n	400278 <rtc_set_time_alarm+0x20>
				ul_hour -= 12;
  400270:	3a0c      	subs	r2, #12
				ul_alarm |= RTC_TIMR_AMPM;
  400272:	f44f 0680 	mov.w	r6, #4194304	; 0x400000
  400276:	e000      	b.n	40027a <rtc_set_time_alarm+0x22>
	uint32_t ul_alarm = 0;
  400278:	2600      	movs	r6, #0
			}
		}

		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  40027a:	4919      	ldr	r1, [pc, #100]	; (4002e0 <rtc_set_time_alarm+0x88>)
  40027c:	fba1 e102 	umull	lr, r1, r1, r2
  400280:	08c9      	lsrs	r1, r1, #3
				((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  400282:	eb01 0e81 	add.w	lr, r1, r1, lsl #2
  400286:	eba2 024e 	sub.w	r2, r2, lr, lsl #1
  40028a:	0412      	lsls	r2, r2, #16
		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  40028c:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
  400290:	4316      	orrs	r6, r2
	}

	/* Minute alarm setting */
	if (ul_minute_flag) {
  400292:	b15b      	cbz	r3, 4002ac <rtc_set_time_alarm+0x54>
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  400294:	4b12      	ldr	r3, [pc, #72]	; (4002e0 <rtc_set_time_alarm+0x88>)
  400296:	fba3 2304 	umull	r2, r3, r3, r4
  40029a:	08db      	lsrs	r3, r3, #3
				((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  40029c:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  4002a0:	eba4 0442 	sub.w	r4, r4, r2, lsl #1
  4002a4:	0224      	lsls	r4, r4, #8
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  4002a6:	ea44 3403 	orr.w	r4, r4, r3, lsl #12
  4002aa:	4326      	orrs	r6, r4
	}

	/* Second alarm setting */
	if (ul_second_flag) {
  4002ac:	b155      	cbz	r5, 4002c4 <rtc_set_time_alarm+0x6c>
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  4002ae:	4b0c      	ldr	r3, [pc, #48]	; (4002e0 <rtc_set_time_alarm+0x88>)
  4002b0:	fba3 2307 	umull	r2, r3, r3, r7
  4002b4:	08db      	lsrs	r3, r3, #3
				((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  4002b6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  4002ba:	eba7 0742 	sub.w	r7, r7, r2, lsl #1
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  4002be:	ea47 1303 	orr.w	r3, r7, r3, lsl #4
  4002c2:	431e      	orrs	r6, r3
	}

	p_rtc->RTC_TIMALR &= ~(RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  4002c4:	6902      	ldr	r2, [r0, #16]
  4002c6:	4b07      	ldr	r3, [pc, #28]	; (4002e4 <rtc_set_time_alarm+0x8c>)
  4002c8:	4013      	ands	r3, r2
  4002ca:	6103      	str	r3, [r0, #16]
	p_rtc->RTC_TIMALR = ul_alarm;
  4002cc:	6106      	str	r6, [r0, #16]
	p_rtc->RTC_TIMALR |= (RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  4002ce:	6902      	ldr	r2, [r0, #16]
  4002d0:	4b05      	ldr	r3, [pc, #20]	; (4002e8 <rtc_set_time_alarm+0x90>)
  4002d2:	4313      	orrs	r3, r2
  4002d4:	6103      	str	r3, [r0, #16]

	return (p_rtc->RTC_VER & RTC_VER_NVTIMALR);
  4002d6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  4002d8:	f000 0004 	and.w	r0, r0, #4
  4002dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4002de:	bf00      	nop
  4002e0:	cccccccd 	.word	0xcccccccd
  4002e4:	ff7f7f7f 	.word	0xff7f7f7f
  4002e8:	00808080 	.word	0x00808080

004002ec <rtc_set_date>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date(Rtc *p_rtc, uint32_t ul_year, uint32_t ul_month,
		uint32_t ul_day, uint32_t ul_week)
{
  4002ec:	b470      	push	{r4, r5, r6}

	/* Week */
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);

	/* Day */
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002ee:	4d2a      	ldr	r5, [pc, #168]	; (400398 <rtc_set_date+0xac>)
  4002f0:	fba5 4603 	umull	r4, r6, r5, r3
  4002f4:	08f6      	lsrs	r6, r6, #3
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);
  4002f6:	9c03      	ldr	r4, [sp, #12]
  4002f8:	0564      	lsls	r4, r4, #21
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002fa:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
			((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
  4002fe:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  400302:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400306:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
	ul_date |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  40030a:	fba5 6402 	umull	r6, r4, r5, r2
  40030e:	08e4      	lsrs	r4, r4, #3
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400310:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
			((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
  400314:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  400318:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40031c:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
	ul_date |= ((ul_year / BCD_FACTOR / BCD_FACTOR / BCD_FACTOR) <<
  400320:	4b1e      	ldr	r3, [pc, #120]	; (40039c <rtc_set_date+0xb0>)
  400322:	fba3 4301 	umull	r4, r3, r3, r1
  400326:	099b      	lsrs	r3, r3, #6
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400328:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
			((ul_year / BCD_FACTOR / BCD_FACTOR) % BCD_FACTOR) <<  RTC_CALR_CENT_Pos);
  40032c:	4b1c      	ldr	r3, [pc, #112]	; (4003a0 <rtc_set_date+0xb4>)
  40032e:	fba3 4301 	umull	r4, r3, r3, r1
  400332:	095b      	lsrs	r3, r3, #5
  400334:	fba5 6403 	umull	r6, r4, r5, r3
  400338:	08e4      	lsrs	r4, r4, #3
  40033a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40033e:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400342:	431a      	orrs	r2, r3
			((ul_year % BCD_FACTOR) << RTC_CALR_YEAR_Pos);
  400344:	fba5 4301 	umull	r4, r3, r5, r1
  400348:	08db      	lsrs	r3, r3, #3
  40034a:	eb03 0483 	add.w	r4, r3, r3, lsl #2
  40034e:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400352:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	ul_date |= (((ul_year / BCD_FACTOR) % BCD_FACTOR) <<
  400356:	fba5 1503 	umull	r1, r5, r5, r3
  40035a:	08ed      	lsrs	r5, r5, #3
  40035c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  400360:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400364:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

	/* Update calendar register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  400368:	6983      	ldr	r3, [r0, #24]
  40036a:	f013 0f04 	tst.w	r3, #4
  40036e:	d0fb      	beq.n	400368 <rtc_set_date+0x7c>
	p_rtc->RTC_CR |= RTC_CR_UPDCAL;
  400370:	6803      	ldr	r3, [r0, #0]
  400372:	f043 0302 	orr.w	r3, r3, #2
  400376:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  400378:	6983      	ldr	r3, [r0, #24]
  40037a:	f013 0f01 	tst.w	r3, #1
  40037e:	d0fb      	beq.n	400378 <rtc_set_date+0x8c>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  400380:	2301      	movs	r3, #1
  400382:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_CALR = ul_date;
  400384:	60c2      	str	r2, [r0, #12]
	p_rtc->RTC_CR &= (~RTC_CR_UPDCAL);
  400386:	6803      	ldr	r3, [r0, #0]
  400388:	f023 0302 	bic.w	r3, r3, #2
  40038c:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVCAL);
  40038e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  400390:	f000 0002 	and.w	r0, r0, #2
  400394:	bc70      	pop	{r4, r5, r6}
  400396:	4770      	bx	lr
  400398:	cccccccd 	.word	0xcccccccd
  40039c:	10624dd3 	.word	0x10624dd3
  4003a0:	51eb851f 	.word	0x51eb851f

004003a4 <rtc_get_status>:
 *
 * \return Status of the RTC.
 */
uint32_t rtc_get_status(Rtc *p_rtc)
{
	return (p_rtc->RTC_SR);
  4003a4:	6980      	ldr	r0, [r0, #24]
}
  4003a6:	4770      	bx	lr

004003a8 <rtc_clear_status>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_clear Some flag bits which will be cleared.
 */
void rtc_clear_status(Rtc *p_rtc, uint32_t ul_clear)
{
	p_rtc->RTC_SCCR = ul_clear;
  4003a8:	61c1      	str	r1, [r0, #28]
  4003aa:	4770      	bx	lr

004003ac <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  4003ac:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  4003ae:	4b07      	ldr	r3, [pc, #28]	; (4003cc <spi_enable_clock+0x20>)
  4003b0:	4298      	cmp	r0, r3
  4003b2:	d003      	beq.n	4003bc <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  4003b4:	4b06      	ldr	r3, [pc, #24]	; (4003d0 <spi_enable_clock+0x24>)
  4003b6:	4298      	cmp	r0, r3
  4003b8:	d004      	beq.n	4003c4 <spi_enable_clock+0x18>
  4003ba:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4003bc:	2015      	movs	r0, #21
  4003be:	4b05      	ldr	r3, [pc, #20]	; (4003d4 <spi_enable_clock+0x28>)
  4003c0:	4798      	blx	r3
  4003c2:	bd08      	pop	{r3, pc}
  4003c4:	202a      	movs	r0, #42	; 0x2a
  4003c6:	4b03      	ldr	r3, [pc, #12]	; (4003d4 <spi_enable_clock+0x28>)
  4003c8:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  4003ca:	e7f6      	b.n	4003ba <spi_enable_clock+0xe>
  4003cc:	40008000 	.word	0x40008000
  4003d0:	40058000 	.word	0x40058000
  4003d4:	00401131 	.word	0x00401131

004003d8 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4003d8:	6843      	ldr	r3, [r0, #4]
  4003da:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4003de:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4003e0:	6843      	ldr	r3, [r0, #4]
  4003e2:	0409      	lsls	r1, r1, #16
  4003e4:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4003e8:	4319      	orrs	r1, r3
  4003ea:	6041      	str	r1, [r0, #4]
  4003ec:	4770      	bx	lr

004003ee <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4003ee:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4003f0:	f643 2499 	movw	r4, #15001	; 0x3a99
  4003f4:	6905      	ldr	r5, [r0, #16]
  4003f6:	f015 0f02 	tst.w	r5, #2
  4003fa:	d103      	bne.n	400404 <spi_write+0x16>
		if (!timeout--) {
  4003fc:	3c01      	subs	r4, #1
  4003fe:	d1f9      	bne.n	4003f4 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400400:	2001      	movs	r0, #1
  400402:	e00c      	b.n	40041e <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400404:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400406:	f014 0f02 	tst.w	r4, #2
  40040a:	d006      	beq.n	40041a <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  40040c:	0412      	lsls	r2, r2, #16
  40040e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400412:	4311      	orrs	r1, r2
		if (uc_last) {
  400414:	b10b      	cbz	r3, 40041a <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400416:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  40041a:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  40041c:	2000      	movs	r0, #0
}
  40041e:	bc30      	pop	{r4, r5}
  400420:	4770      	bx	lr

00400422 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400422:	b932      	cbnz	r2, 400432 <spi_set_clock_polarity+0x10>
  400424:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400428:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40042a:	f023 0301 	bic.w	r3, r3, #1
  40042e:	6303      	str	r3, [r0, #48]	; 0x30
  400430:	4770      	bx	lr
  400432:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400436:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400438:	f043 0301 	orr.w	r3, r3, #1
  40043c:	6303      	str	r3, [r0, #48]	; 0x30
  40043e:	4770      	bx	lr

00400440 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400440:	b932      	cbnz	r2, 400450 <spi_set_clock_phase+0x10>
  400442:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400446:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400448:	f023 0302 	bic.w	r3, r3, #2
  40044c:	6303      	str	r3, [r0, #48]	; 0x30
  40044e:	4770      	bx	lr
  400450:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400454:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400456:	f043 0302 	orr.w	r3, r3, #2
  40045a:	6303      	str	r3, [r0, #48]	; 0x30
  40045c:	4770      	bx	lr

0040045e <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40045e:	2a04      	cmp	r2, #4
  400460:	d003      	beq.n	40046a <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400462:	b16a      	cbz	r2, 400480 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400464:	2a08      	cmp	r2, #8
  400466:	d016      	beq.n	400496 <spi_configure_cs_behavior+0x38>
  400468:	4770      	bx	lr
  40046a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40046e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400470:	f023 0308 	bic.w	r3, r3, #8
  400474:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  400476:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400478:	f043 0304 	orr.w	r3, r3, #4
  40047c:	6303      	str	r3, [r0, #48]	; 0x30
  40047e:	4770      	bx	lr
  400480:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400484:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400486:	f023 0308 	bic.w	r3, r3, #8
  40048a:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  40048c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40048e:	f023 0304 	bic.w	r3, r3, #4
  400492:	6303      	str	r3, [r0, #48]	; 0x30
  400494:	4770      	bx	lr
  400496:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40049a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40049c:	f043 0308 	orr.w	r3, r3, #8
  4004a0:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4004a2:	e7e1      	b.n	400468 <spi_configure_cs_behavior+0xa>

004004a4 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4004a4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  4004a8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4004aa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4004ae:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  4004b0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4004b2:	431a      	orrs	r2, r3
  4004b4:	630a      	str	r2, [r1, #48]	; 0x30
  4004b6:	4770      	bx	lr

004004b8 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  4004b8:	1e43      	subs	r3, r0, #1
  4004ba:	4419      	add	r1, r3
  4004bc:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  4004c0:	1e43      	subs	r3, r0, #1
  4004c2:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  4004c4:	bf94      	ite	ls
  4004c6:	b200      	sxthls	r0, r0
		return -1;
  4004c8:	f04f 30ff 	movhi.w	r0, #4294967295
}
  4004cc:	4770      	bx	lr

004004ce <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  4004ce:	b17a      	cbz	r2, 4004f0 <spi_set_baudrate_div+0x22>
{
  4004d0:	b410      	push	{r4}
  4004d2:	4614      	mov	r4, r2
  4004d4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  4004d8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4004da:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4004de:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4004e0:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4004e2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4004e6:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4004e8:	2000      	movs	r0, #0
}
  4004ea:	f85d 4b04 	ldr.w	r4, [sp], #4
  4004ee:	4770      	bx	lr
        return -1;
  4004f0:	f04f 30ff 	mov.w	r0, #4294967295
  4004f4:	4770      	bx	lr

004004f6 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4004f6:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4004f8:	0189      	lsls	r1, r1, #6
  4004fa:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4004fc:	2402      	movs	r4, #2
  4004fe:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400500:	f04f 31ff 	mov.w	r1, #4294967295
  400504:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400506:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400508:	605a      	str	r2, [r3, #4]
}
  40050a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40050e:	4770      	bx	lr

00400510 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400510:	0189      	lsls	r1, r1, #6
  400512:	2305      	movs	r3, #5
  400514:	5043      	str	r3, [r0, r1]
  400516:	4770      	bx	lr

00400518 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400518:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  40051c:	61ca      	str	r2, [r1, #28]
  40051e:	4770      	bx	lr

00400520 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400520:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  400524:	624a      	str	r2, [r1, #36]	; 0x24
  400526:	4770      	bx	lr

00400528 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400528:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  40052c:	6a08      	ldr	r0, [r1, #32]
}
  40052e:	4770      	bx	lr

00400530 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  400530:	b4f0      	push	{r4, r5, r6, r7}
  400532:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400534:	2402      	movs	r4, #2
  400536:	9401      	str	r4, [sp, #4]
  400538:	2408      	movs	r4, #8
  40053a:	9402      	str	r4, [sp, #8]
  40053c:	2420      	movs	r4, #32
  40053e:	9403      	str	r4, [sp, #12]
  400540:	2480      	movs	r4, #128	; 0x80
  400542:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  400544:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  400546:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400548:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  40054a:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  40054e:	d814      	bhi.n	40057a <tc_find_mck_divisor+0x4a>
  400550:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  400552:	42a0      	cmp	r0, r4
  400554:	d217      	bcs.n	400586 <tc_find_mck_divisor+0x56>
  400556:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400558:	af01      	add	r7, sp, #4
  40055a:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  40055e:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  400562:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  400564:	4284      	cmp	r4, r0
  400566:	d30a      	bcc.n	40057e <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400568:	4286      	cmp	r6, r0
  40056a:	d90d      	bls.n	400588 <tc_find_mck_divisor+0x58>
			ul_index++) {
  40056c:	3501      	adds	r5, #1
	for (ul_index = 0;
  40056e:	2d05      	cmp	r5, #5
  400570:	d1f3      	bne.n	40055a <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  400572:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400574:	b006      	add	sp, #24
  400576:	bcf0      	pop	{r4, r5, r6, r7}
  400578:	4770      	bx	lr
			return 0;
  40057a:	2000      	movs	r0, #0
  40057c:	e7fa      	b.n	400574 <tc_find_mck_divisor+0x44>
  40057e:	2000      	movs	r0, #0
  400580:	e7f8      	b.n	400574 <tc_find_mck_divisor+0x44>
	return 1;
  400582:	2001      	movs	r0, #1
  400584:	e7f6      	b.n	400574 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  400586:	2500      	movs	r5, #0
	if (p_uldiv) {
  400588:	b12a      	cbz	r2, 400596 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  40058a:	a906      	add	r1, sp, #24
  40058c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  400590:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400594:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  400596:	2b00      	cmp	r3, #0
  400598:	d0f3      	beq.n	400582 <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  40059a:	601d      	str	r5, [r3, #0]
	return 1;
  40059c:	2001      	movs	r0, #1
  40059e:	e7e9      	b.n	400574 <tc_find_mck_divisor+0x44>

004005a0 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4005a0:	4b01      	ldr	r3, [pc, #4]	; (4005a8 <gfx_mono_set_framebuffer+0x8>)
  4005a2:	6018      	str	r0, [r3, #0]
  4005a4:	4770      	bx	lr
  4005a6:	bf00      	nop
  4005a8:	204009ec 	.word	0x204009ec

004005ac <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  4005ac:	4b02      	ldr	r3, [pc, #8]	; (4005b8 <gfx_mono_framebuffer_put_byte+0xc>)
  4005ae:	681b      	ldr	r3, [r3, #0]
  4005b0:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  4005b4:	5442      	strb	r2, [r0, r1]
  4005b6:	4770      	bx	lr
  4005b8:	204009ec 	.word	0x204009ec

004005bc <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  4005bc:	4b02      	ldr	r3, [pc, #8]	; (4005c8 <gfx_mono_framebuffer_get_byte+0xc>)
  4005be:	681b      	ldr	r3, [r3, #0]
  4005c0:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  4005c4:	5c40      	ldrb	r0, [r0, r1]
  4005c6:	4770      	bx	lr
  4005c8:	204009ec 	.word	0x204009ec

004005cc <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  4005cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  4005d0:	1884      	adds	r4, r0, r2
  4005d2:	2c80      	cmp	r4, #128	; 0x80
  4005d4:	dd02      	ble.n	4005dc <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  4005d6:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  4005da:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4005dc:	b322      	cbz	r2, 400628 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4005de:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  4005e0:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  4005e4:	2601      	movs	r6, #1
  4005e6:	fa06 f101 	lsl.w	r1, r6, r1
  4005ea:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  4005ec:	2b01      	cmp	r3, #1
  4005ee:	d01d      	beq.n	40062c <gfx_mono_generic_draw_horizontal_line+0x60>
  4005f0:	2b00      	cmp	r3, #0
  4005f2:	d035      	beq.n	400660 <gfx_mono_generic_draw_horizontal_line+0x94>
  4005f4:	2b02      	cmp	r3, #2
  4005f6:	d117      	bne.n	400628 <gfx_mono_generic_draw_horizontal_line+0x5c>
  4005f8:	3801      	subs	r0, #1
  4005fa:	b2c7      	uxtb	r7, r0
  4005fc:	19d4      	adds	r4, r2, r7
  4005fe:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400600:	f8df a090 	ldr.w	sl, [pc, #144]	; 400694 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  400604:	f04f 0900 	mov.w	r9, #0
  400608:	f8df 808c 	ldr.w	r8, [pc, #140]	; 400698 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40060c:	4621      	mov	r1, r4
  40060e:	4628      	mov	r0, r5
  400610:	47d0      	blx	sl
			temp ^= pixelmask;
  400612:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400616:	464b      	mov	r3, r9
  400618:	b2d2      	uxtb	r2, r2
  40061a:	4621      	mov	r1, r4
  40061c:	4628      	mov	r0, r5
  40061e:	47c0      	blx	r8
  400620:	3c01      	subs	r4, #1
  400622:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400624:	42bc      	cmp	r4, r7
  400626:	d1f1      	bne.n	40060c <gfx_mono_generic_draw_horizontal_line+0x40>
  400628:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40062c:	3801      	subs	r0, #1
  40062e:	b2c7      	uxtb	r7, r0
  400630:	19d4      	adds	r4, r2, r7
  400632:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400634:	f8df a05c 	ldr.w	sl, [pc, #92]	; 400694 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400638:	f04f 0900 	mov.w	r9, #0
  40063c:	f8df 8058 	ldr.w	r8, [pc, #88]	; 400698 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400640:	4621      	mov	r1, r4
  400642:	4628      	mov	r0, r5
  400644:	47d0      	blx	sl
			temp |= pixelmask;
  400646:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40064a:	464b      	mov	r3, r9
  40064c:	b2d2      	uxtb	r2, r2
  40064e:	4621      	mov	r1, r4
  400650:	4628      	mov	r0, r5
  400652:	47c0      	blx	r8
  400654:	3c01      	subs	r4, #1
  400656:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400658:	42bc      	cmp	r4, r7
  40065a:	d1f1      	bne.n	400640 <gfx_mono_generic_draw_horizontal_line+0x74>
  40065c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400660:	3801      	subs	r0, #1
  400662:	b2c7      	uxtb	r7, r0
  400664:	19d4      	adds	r4, r2, r7
  400666:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400668:	f8df 8028 	ldr.w	r8, [pc, #40]	; 400694 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  40066c:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  40066e:	f8df 9028 	ldr.w	r9, [pc, #40]	; 400698 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400672:	4621      	mov	r1, r4
  400674:	4628      	mov	r0, r5
  400676:	47c0      	blx	r8
			temp &= ~pixelmask;
  400678:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40067c:	2300      	movs	r3, #0
  40067e:	b2d2      	uxtb	r2, r2
  400680:	4621      	mov	r1, r4
  400682:	4628      	mov	r0, r5
  400684:	47c8      	blx	r9
  400686:	3c01      	subs	r4, #1
  400688:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40068a:	42bc      	cmp	r4, r7
  40068c:	d1f1      	bne.n	400672 <gfx_mono_generic_draw_horizontal_line+0xa6>
  40068e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400692:	bf00      	nop
  400694:	004008e1 	.word	0x004008e1
  400698:	004007c9 	.word	0x004007c9

0040069c <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  40069c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4006a0:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4006a4:	b18b      	cbz	r3, 4006ca <gfx_mono_generic_draw_filled_rect+0x2e>
  4006a6:	461c      	mov	r4, r3
  4006a8:	4690      	mov	r8, r2
  4006aa:	4606      	mov	r6, r0
  4006ac:	1e4d      	subs	r5, r1, #1
  4006ae:	b2ed      	uxtb	r5, r5
  4006b0:	442c      	add	r4, r5
  4006b2:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4006b4:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4006d0 <gfx_mono_generic_draw_filled_rect+0x34>
  4006b8:	463b      	mov	r3, r7
  4006ba:	4642      	mov	r2, r8
  4006bc:	4621      	mov	r1, r4
  4006be:	4630      	mov	r0, r6
  4006c0:	47c8      	blx	r9
  4006c2:	3c01      	subs	r4, #1
  4006c4:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4006c6:	42ac      	cmp	r4, r5
  4006c8:	d1f6      	bne.n	4006b8 <gfx_mono_generic_draw_filled_rect+0x1c>
  4006ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4006ce:	bf00      	nop
  4006d0:	004005cd 	.word	0x004005cd

004006d4 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4006d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4006d8:	b083      	sub	sp, #12
  4006da:	4604      	mov	r4, r0
  4006dc:	4688      	mov	r8, r1
  4006de:	4691      	mov	r9, r2
  4006e0:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4006e2:	7a5b      	ldrb	r3, [r3, #9]
  4006e4:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4006e8:	2100      	movs	r1, #0
  4006ea:	9100      	str	r1, [sp, #0]
  4006ec:	4649      	mov	r1, r9
  4006ee:	4640      	mov	r0, r8
  4006f0:	4d21      	ldr	r5, [pc, #132]	; (400778 <gfx_mono_draw_char+0xa4>)
  4006f2:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  4006f4:	f89b 3000 	ldrb.w	r3, [fp]
  4006f8:	b113      	cbz	r3, 400700 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  4006fa:	b003      	add	sp, #12
  4006fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400700:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400704:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  400706:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  40070a:	bf18      	it	ne
  40070c:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  40070e:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  400712:	f89b 700a 	ldrb.w	r7, [fp, #10]
  400716:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400718:	fb17 f70a 	smulbb	r7, r7, sl
  40071c:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400720:	f8db 3004 	ldr.w	r3, [fp, #4]
  400724:	fa13 f787 	uxtah	r7, r3, r7
  400728:	e01f      	b.n	40076a <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  40072a:	0064      	lsls	r4, r4, #1
  40072c:	b2e4      	uxtb	r4, r4
  40072e:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400730:	b2eb      	uxtb	r3, r5
  400732:	429e      	cmp	r6, r3
  400734:	d910      	bls.n	400758 <gfx_mono_draw_char+0x84>
  400736:	b2eb      	uxtb	r3, r5
  400738:	eb08 0003 	add.w	r0, r8, r3
  40073c:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  40073e:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  400742:	bf08      	it	eq
  400744:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400748:	f014 0f80 	tst.w	r4, #128	; 0x80
  40074c:	d0ed      	beq.n	40072a <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  40074e:	2201      	movs	r2, #1
  400750:	4649      	mov	r1, r9
  400752:	4b0a      	ldr	r3, [pc, #40]	; (40077c <gfx_mono_draw_char+0xa8>)
  400754:	4798      	blx	r3
  400756:	e7e8      	b.n	40072a <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400758:	f109 0901 	add.w	r9, r9, #1
  40075c:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400760:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400764:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400768:	d0c7      	beq.n	4006fa <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  40076a:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  40076e:	2e00      	cmp	r6, #0
  400770:	d0f2      	beq.n	400758 <gfx_mono_draw_char+0x84>
  400772:	2500      	movs	r5, #0
  400774:	462c      	mov	r4, r5
  400776:	e7de      	b.n	400736 <gfx_mono_draw_char+0x62>
  400778:	0040069d 	.word	0x0040069d
  40077c:	00400869 	.word	0x00400869

00400780 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400780:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400784:	4604      	mov	r4, r0
  400786:	4690      	mov	r8, r2
  400788:	461d      	mov	r5, r3
  40078a:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  40078c:	4f0d      	ldr	r7, [pc, #52]	; (4007c4 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  40078e:	460e      	mov	r6, r1
  400790:	e008      	b.n	4007a4 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  400792:	7a6a      	ldrb	r2, [r5, #9]
  400794:	3201      	adds	r2, #1
  400796:	4442      	add	r2, r8
  400798:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  40079c:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  40079e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4007a2:	b16b      	cbz	r3, 4007c0 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4007a4:	7820      	ldrb	r0, [r4, #0]
  4007a6:	280a      	cmp	r0, #10
  4007a8:	d0f3      	beq.n	400792 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4007aa:	280d      	cmp	r0, #13
  4007ac:	d0f7      	beq.n	40079e <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4007ae:	462b      	mov	r3, r5
  4007b0:	4642      	mov	r2, r8
  4007b2:	4649      	mov	r1, r9
  4007b4:	47b8      	blx	r7
			x += font->width;
  4007b6:	7a2b      	ldrb	r3, [r5, #8]
  4007b8:	4499      	add	r9, r3
  4007ba:	fa5f f989 	uxtb.w	r9, r9
  4007be:	e7ee      	b.n	40079e <gfx_mono_draw_string+0x1e>
}
  4007c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4007c4:	004006d5 	.word	0x004006d5

004007c8 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4007c8:	b570      	push	{r4, r5, r6, lr}
  4007ca:	4604      	mov	r4, r0
  4007cc:	460d      	mov	r5, r1
  4007ce:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4007d0:	b91b      	cbnz	r3, 4007da <gfx_mono_ssd1306_put_byte+0x12>
  4007d2:	4b0d      	ldr	r3, [pc, #52]	; (400808 <gfx_mono_ssd1306_put_byte+0x40>)
  4007d4:	4798      	blx	r3
  4007d6:	42b0      	cmp	r0, r6
  4007d8:	d015      	beq.n	400806 <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4007da:	4632      	mov	r2, r6
  4007dc:	4629      	mov	r1, r5
  4007de:	4620      	mov	r0, r4
  4007e0:	4b0a      	ldr	r3, [pc, #40]	; (40080c <gfx_mono_ssd1306_put_byte+0x44>)
  4007e2:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  4007e4:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4007e8:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  4007ec:	4c08      	ldr	r4, [pc, #32]	; (400810 <gfx_mono_ssd1306_put_byte+0x48>)
  4007ee:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  4007f0:	f3c5 1002 	ubfx	r0, r5, #4, #3
  4007f4:	f040 0010 	orr.w	r0, r0, #16
  4007f8:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  4007fa:	f005 000f 	and.w	r0, r5, #15
  4007fe:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400800:	4630      	mov	r0, r6
  400802:	4b04      	ldr	r3, [pc, #16]	; (400814 <gfx_mono_ssd1306_put_byte+0x4c>)
  400804:	4798      	blx	r3
  400806:	bd70      	pop	{r4, r5, r6, pc}
  400808:	004005bd 	.word	0x004005bd
  40080c:	004005ad 	.word	0x004005ad
  400810:	004008ed 	.word	0x004008ed
  400814:	00400b0d 	.word	0x00400b0d

00400818 <gfx_mono_ssd1306_init>:
{
  400818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  40081c:	480d      	ldr	r0, [pc, #52]	; (400854 <gfx_mono_ssd1306_init+0x3c>)
  40081e:	4b0e      	ldr	r3, [pc, #56]	; (400858 <gfx_mono_ssd1306_init+0x40>)
  400820:	4798      	blx	r3
	ssd1306_init();
  400822:	4b0e      	ldr	r3, [pc, #56]	; (40085c <gfx_mono_ssd1306_init+0x44>)
  400824:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  400826:	2040      	movs	r0, #64	; 0x40
  400828:	4b0d      	ldr	r3, [pc, #52]	; (400860 <gfx_mono_ssd1306_init+0x48>)
  40082a:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  40082c:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  40082e:	f04f 0801 	mov.w	r8, #1
  400832:	462f      	mov	r7, r5
  400834:	4e0b      	ldr	r6, [pc, #44]	; (400864 <gfx_mono_ssd1306_init+0x4c>)
{
  400836:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400838:	4643      	mov	r3, r8
  40083a:	463a      	mov	r2, r7
  40083c:	b2e1      	uxtb	r1, r4
  40083e:	4628      	mov	r0, r5
  400840:	47b0      	blx	r6
  400842:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400844:	2c80      	cmp	r4, #128	; 0x80
  400846:	d1f7      	bne.n	400838 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400848:	3501      	adds	r5, #1
  40084a:	b2ed      	uxtb	r5, r5
  40084c:	2d04      	cmp	r5, #4
  40084e:	d1f2      	bne.n	400836 <gfx_mono_ssd1306_init+0x1e>
  400850:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400854:	204009f0 	.word	0x204009f0
  400858:	004005a1 	.word	0x004005a1
  40085c:	0040092d 	.word	0x0040092d
  400860:	004008ed 	.word	0x004008ed
  400864:	004007c9 	.word	0x004007c9

00400868 <gfx_mono_ssd1306_draw_pixel>:
{
  400868:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  40086c:	09c3      	lsrs	r3, r0, #7
  40086e:	d123      	bne.n	4008b8 <gfx_mono_ssd1306_draw_pixel+0x50>
  400870:	291f      	cmp	r1, #31
  400872:	d821      	bhi.n	4008b8 <gfx_mono_ssd1306_draw_pixel+0x50>
  400874:	4614      	mov	r4, r2
  400876:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400878:	08cf      	lsrs	r7, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  40087a:	eba1 01c7 	sub.w	r1, r1, r7, lsl #3
  40087e:	2601      	movs	r6, #1
  400880:	fa06 f801 	lsl.w	r8, r6, r1
  400884:	fa5f f988 	uxtb.w	r9, r8
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  400888:	4601      	mov	r1, r0
  40088a:	4638      	mov	r0, r7
  40088c:	4b11      	ldr	r3, [pc, #68]	; (4008d4 <gfx_mono_ssd1306_draw_pixel+0x6c>)
  40088e:	4798      	blx	r3
  400890:	4606      	mov	r6, r0
    delay_us(500);
  400892:	f246 20c7 	movw	r0, #25287	; 0x62c7
  400896:	4b10      	ldr	r3, [pc, #64]	; (4008d8 <gfx_mono_ssd1306_draw_pixel+0x70>)
  400898:	4798      	blx	r3
	switch (color) {
  40089a:	2c01      	cmp	r4, #1
  40089c:	d00e      	beq.n	4008bc <gfx_mono_ssd1306_draw_pixel+0x54>
  40089e:	b18c      	cbz	r4, 4008c4 <gfx_mono_ssd1306_draw_pixel+0x5c>
  4008a0:	2c02      	cmp	r4, #2
  4008a2:	d013      	beq.n	4008cc <gfx_mono_ssd1306_draw_pixel+0x64>
	gfx_mono_put_byte(page, x, pixel_value);
  4008a4:	2300      	movs	r3, #0
  4008a6:	4632      	mov	r2, r6
  4008a8:	4629      	mov	r1, r5
  4008aa:	4638      	mov	r0, r7
  4008ac:	4c0b      	ldr	r4, [pc, #44]	; (4008dc <gfx_mono_ssd1306_draw_pixel+0x74>)
  4008ae:	47a0      	blx	r4
	 delay_us(500);
  4008b0:	f246 20c7 	movw	r0, #25287	; 0x62c7
  4008b4:	4b08      	ldr	r3, [pc, #32]	; (4008d8 <gfx_mono_ssd1306_draw_pixel+0x70>)
  4008b6:	4798      	blx	r3
  4008b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pixel_value |= pixel_mask;
  4008bc:	ea49 0606 	orr.w	r6, r9, r6
  4008c0:	b2f6      	uxtb	r6, r6
		break;
  4008c2:	e7ef      	b.n	4008a4 <gfx_mono_ssd1306_draw_pixel+0x3c>
		pixel_value &= ~pixel_mask;
  4008c4:	ea26 0608 	bic.w	r6, r6, r8
  4008c8:	b2f6      	uxtb	r6, r6
		break;
  4008ca:	e7eb      	b.n	4008a4 <gfx_mono_ssd1306_draw_pixel+0x3c>
		pixel_value ^= pixel_mask;
  4008cc:	ea89 0606 	eor.w	r6, r9, r6
  4008d0:	b2f6      	uxtb	r6, r6
		break;
  4008d2:	e7e7      	b.n	4008a4 <gfx_mono_ssd1306_draw_pixel+0x3c>
  4008d4:	004005bd 	.word	0x004005bd
  4008d8:	20400001 	.word	0x20400001
  4008dc:	004007c9 	.word	0x004007c9

004008e0 <gfx_mono_ssd1306_get_byte>:
{
  4008e0:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  4008e2:	4b01      	ldr	r3, [pc, #4]	; (4008e8 <gfx_mono_ssd1306_get_byte+0x8>)
  4008e4:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4008e6:	bd08      	pop	{r3, pc}
  4008e8:	004005bd 	.word	0x004005bd

004008ec <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  4008ec:	b538      	push	{r3, r4, r5, lr}
  4008ee:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4008f0:	2208      	movs	r2, #8
  4008f2:	4b09      	ldr	r3, [pc, #36]	; (400918 <ssd1306_write_command+0x2c>)
  4008f4:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4008f6:	4c09      	ldr	r4, [pc, #36]	; (40091c <ssd1306_write_command+0x30>)
  4008f8:	2101      	movs	r1, #1
  4008fa:	4620      	mov	r0, r4
  4008fc:	4b08      	ldr	r3, [pc, #32]	; (400920 <ssd1306_write_command+0x34>)
  4008fe:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400900:	2301      	movs	r3, #1
  400902:	461a      	mov	r2, r3
  400904:	4629      	mov	r1, r5
  400906:	4620      	mov	r0, r4
  400908:	4c06      	ldr	r4, [pc, #24]	; (400924 <ssd1306_write_command+0x38>)
  40090a:	47a0      	blx	r4
	delay_us(10);
  40090c:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400910:	4b05      	ldr	r3, [pc, #20]	; (400928 <ssd1306_write_command+0x3c>)
  400912:	4798      	blx	r3
  400914:	bd38      	pop	{r3, r4, r5, pc}
  400916:	bf00      	nop
  400918:	400e1000 	.word	0x400e1000
  40091c:	40008000 	.word	0x40008000
  400920:	004003d9 	.word	0x004003d9
  400924:	004003ef 	.word	0x004003ef
  400928:	20400001 	.word	0x20400001

0040092c <ssd1306_init>:
{
  40092c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400930:	4d66      	ldr	r5, [pc, #408]	; (400acc <ssd1306_init+0x1a0>)
  400932:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  400936:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400938:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40093c:	4b64      	ldr	r3, [pc, #400]	; (400ad0 <ssd1306_init+0x1a4>)
  40093e:	2708      	movs	r7, #8
  400940:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400942:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400946:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400948:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  40094c:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  40094e:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400950:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400954:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  400956:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40095a:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40095c:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  40095e:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400962:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400964:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400966:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40096a:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40096c:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40096e:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400972:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400974:	f022 0208 	bic.w	r2, r2, #8
  400978:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40097a:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40097c:	f022 0208 	bic.w	r2, r2, #8
  400980:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  400982:	601f      	str	r7, [r3, #0]
  400984:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400986:	631f      	str	r7, [r3, #48]	; 0x30
  400988:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  40098a:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400b08 <ssd1306_init+0x1dc>
  40098e:	2300      	movs	r3, #0
  400990:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400994:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400998:	4640      	mov	r0, r8
  40099a:	4c4e      	ldr	r4, [pc, #312]	; (400ad4 <ssd1306_init+0x1a8>)
  40099c:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  40099e:	2300      	movs	r3, #0
  4009a0:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4009a4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009a8:	4640      	mov	r0, r8
  4009aa:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4009ac:	2300      	movs	r3, #0
  4009ae:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4009b2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009b6:	4640      	mov	r0, r8
  4009b8:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4009ba:	2300      	movs	r3, #0
  4009bc:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4009c0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009c4:	4640      	mov	r0, r8
  4009c6:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4009c8:	2300      	movs	r3, #0
  4009ca:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4009ce:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009d2:	4640      	mov	r0, r8
  4009d4:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4009d6:	2300      	movs	r3, #0
  4009d8:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4009dc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009e0:	4640      	mov	r0, r8
  4009e2:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4009e4:	4c3c      	ldr	r4, [pc, #240]	; (400ad8 <ssd1306_init+0x1ac>)
  4009e6:	f04f 0902 	mov.w	r9, #2
  4009ea:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4009ee:	f04f 0880 	mov.w	r8, #128	; 0x80
  4009f2:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4009f6:	6863      	ldr	r3, [r4, #4]
  4009f8:	f043 0301 	orr.w	r3, r3, #1
  4009fc:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  4009fe:	463a      	mov	r2, r7
  400a00:	2101      	movs	r1, #1
  400a02:	4620      	mov	r0, r4
  400a04:	4b35      	ldr	r3, [pc, #212]	; (400adc <ssd1306_init+0x1b0>)
  400a06:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400a08:	2200      	movs	r2, #0
  400a0a:	2101      	movs	r1, #1
  400a0c:	4620      	mov	r0, r4
  400a0e:	4b34      	ldr	r3, [pc, #208]	; (400ae0 <ssd1306_init+0x1b4>)
  400a10:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400a12:	2200      	movs	r2, #0
  400a14:	2101      	movs	r1, #1
  400a16:	4620      	mov	r0, r4
  400a18:	4b32      	ldr	r3, [pc, #200]	; (400ae4 <ssd1306_init+0x1b8>)
  400a1a:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400a1c:	6863      	ldr	r3, [r4, #4]
  400a1e:	f023 0302 	bic.w	r3, r3, #2
  400a22:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400a24:	2200      	movs	r2, #0
  400a26:	2101      	movs	r1, #1
  400a28:	4620      	mov	r0, r4
  400a2a:	4b2f      	ldr	r3, [pc, #188]	; (400ae8 <ssd1306_init+0x1bc>)
  400a2c:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400a2e:	6863      	ldr	r3, [r4, #4]
  400a30:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400a34:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400a36:	6863      	ldr	r3, [r4, #4]
  400a38:	f043 0310 	orr.w	r3, r3, #16
  400a3c:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  400a3e:	492b      	ldr	r1, [pc, #172]	; (400aec <ssd1306_init+0x1c0>)
  400a40:	482b      	ldr	r0, [pc, #172]	; (400af0 <ssd1306_init+0x1c4>)
  400a42:	4b2c      	ldr	r3, [pc, #176]	; (400af4 <ssd1306_init+0x1c8>)
  400a44:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  400a46:	b2c2      	uxtb	r2, r0
  400a48:	2101      	movs	r1, #1
  400a4a:	4620      	mov	r0, r4
  400a4c:	4b2a      	ldr	r3, [pc, #168]	; (400af8 <ssd1306_init+0x1cc>)
  400a4e:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400a50:	4620      	mov	r0, r4
  400a52:	4b2a      	ldr	r3, [pc, #168]	; (400afc <ssd1306_init+0x1d0>)
  400a54:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400a56:	2301      	movs	r3, #1
  400a58:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400a5a:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400a5c:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400a60:	4c27      	ldr	r4, [pc, #156]	; (400b00 <ssd1306_init+0x1d4>)
  400a62:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400a64:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400a66:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400a6a:	47a0      	blx	r4
  400a6c:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400a6e:	20a8      	movs	r0, #168	; 0xa8
  400a70:	4c24      	ldr	r4, [pc, #144]	; (400b04 <ssd1306_init+0x1d8>)
  400a72:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400a74:	201f      	movs	r0, #31
  400a76:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400a78:	20d3      	movs	r0, #211	; 0xd3
  400a7a:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400a7c:	2000      	movs	r0, #0
  400a7e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400a80:	2040      	movs	r0, #64	; 0x40
  400a82:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400a84:	20a1      	movs	r0, #161	; 0xa1
  400a86:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400a88:	20c8      	movs	r0, #200	; 0xc8
  400a8a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400a8c:	20da      	movs	r0, #218	; 0xda
  400a8e:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400a90:	4648      	mov	r0, r9
  400a92:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400a94:	2081      	movs	r0, #129	; 0x81
  400a96:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400a98:	208f      	movs	r0, #143	; 0x8f
  400a9a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400a9c:	20a4      	movs	r0, #164	; 0xa4
  400a9e:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400aa0:	20a6      	movs	r0, #166	; 0xa6
  400aa2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400aa4:	20d5      	movs	r0, #213	; 0xd5
  400aa6:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400aa8:	4640      	mov	r0, r8
  400aaa:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400aac:	208d      	movs	r0, #141	; 0x8d
  400aae:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400ab0:	2014      	movs	r0, #20
  400ab2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400ab4:	20db      	movs	r0, #219	; 0xdb
  400ab6:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400ab8:	2040      	movs	r0, #64	; 0x40
  400aba:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400abc:	20d9      	movs	r0, #217	; 0xd9
  400abe:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400ac0:	20f1      	movs	r0, #241	; 0xf1
  400ac2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400ac4:	20af      	movs	r0, #175	; 0xaf
  400ac6:	47a0      	blx	r4
  400ac8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400acc:	400e1200 	.word	0x400e1200
  400ad0:	400e1000 	.word	0x400e1000
  400ad4:	00400e11 	.word	0x00400e11
  400ad8:	40008000 	.word	0x40008000
  400adc:	0040045f 	.word	0x0040045f
  400ae0:	00400423 	.word	0x00400423
  400ae4:	00400441 	.word	0x00400441
  400ae8:	004004a5 	.word	0x004004a5
  400aec:	08f0d180 	.word	0x08f0d180
  400af0:	000f4240 	.word	0x000f4240
  400af4:	004004b9 	.word	0x004004b9
  400af8:	004004cf 	.word	0x004004cf
  400afc:	004003ad 	.word	0x004003ad
  400b00:	20400001 	.word	0x20400001
  400b04:	004008ed 	.word	0x004008ed
  400b08:	400e1400 	.word	0x400e1400

00400b0c <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400b0c:	b538      	push	{r3, r4, r5, lr}
  400b0e:	4605      	mov	r5, r0
  400b10:	2208      	movs	r2, #8
  400b12:	4b09      	ldr	r3, [pc, #36]	; (400b38 <ssd1306_write_data+0x2c>)
  400b14:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400b16:	4c09      	ldr	r4, [pc, #36]	; (400b3c <ssd1306_write_data+0x30>)
  400b18:	2101      	movs	r1, #1
  400b1a:	4620      	mov	r0, r4
  400b1c:	4b08      	ldr	r3, [pc, #32]	; (400b40 <ssd1306_write_data+0x34>)
  400b1e:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400b20:	2301      	movs	r3, #1
  400b22:	461a      	mov	r2, r3
  400b24:	4629      	mov	r1, r5
  400b26:	4620      	mov	r0, r4
  400b28:	4c06      	ldr	r4, [pc, #24]	; (400b44 <ssd1306_write_data+0x38>)
  400b2a:	47a0      	blx	r4
	delay_us(10);
  400b2c:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400b30:	4b05      	ldr	r3, [pc, #20]	; (400b48 <ssd1306_write_data+0x3c>)
  400b32:	4798      	blx	r3
  400b34:	bd38      	pop	{r3, r4, r5, pc}
  400b36:	bf00      	nop
  400b38:	400e1000 	.word	0x400e1000
  400b3c:	40008000 	.word	0x40008000
  400b40:	004003d9 	.word	0x004003d9
  400b44:	004003ef 	.word	0x004003ef
  400b48:	20400001 	.word	0x20400001

00400b4c <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400b4c:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400b4e:	4810      	ldr	r0, [pc, #64]	; (400b90 <sysclk_init+0x44>)
  400b50:	4b10      	ldr	r3, [pc, #64]	; (400b94 <sysclk_init+0x48>)
  400b52:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400b54:	213e      	movs	r1, #62	; 0x3e
  400b56:	2000      	movs	r0, #0
  400b58:	4b0f      	ldr	r3, [pc, #60]	; (400b98 <sysclk_init+0x4c>)
  400b5a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400b5c:	4c0f      	ldr	r4, [pc, #60]	; (400b9c <sysclk_init+0x50>)
  400b5e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400b60:	2800      	cmp	r0, #0
  400b62:	d0fc      	beq.n	400b5e <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400b64:	4b0e      	ldr	r3, [pc, #56]	; (400ba0 <sysclk_init+0x54>)
  400b66:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400b68:	4a0e      	ldr	r2, [pc, #56]	; (400ba4 <sysclk_init+0x58>)
  400b6a:	4b0f      	ldr	r3, [pc, #60]	; (400ba8 <sysclk_init+0x5c>)
  400b6c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400b6e:	4c0f      	ldr	r4, [pc, #60]	; (400bac <sysclk_init+0x60>)
  400b70:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400b72:	2800      	cmp	r0, #0
  400b74:	d0fc      	beq.n	400b70 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400b76:	2002      	movs	r0, #2
  400b78:	4b0d      	ldr	r3, [pc, #52]	; (400bb0 <sysclk_init+0x64>)
  400b7a:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400b7c:	2000      	movs	r0, #0
  400b7e:	4b0d      	ldr	r3, [pc, #52]	; (400bb4 <sysclk_init+0x68>)
  400b80:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400b82:	4b0d      	ldr	r3, [pc, #52]	; (400bb8 <sysclk_init+0x6c>)
  400b84:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400b86:	4802      	ldr	r0, [pc, #8]	; (400b90 <sysclk_init+0x44>)
  400b88:	4b02      	ldr	r3, [pc, #8]	; (400b94 <sysclk_init+0x48>)
  400b8a:	4798      	blx	r3
  400b8c:	bd10      	pop	{r4, pc}
  400b8e:	bf00      	nop
  400b90:	11e1a300 	.word	0x11e1a300
  400b94:	004013b1 	.word	0x004013b1
  400b98:	004010ad 	.word	0x004010ad
  400b9c:	00401101 	.word	0x00401101
  400ba0:	00401111 	.word	0x00401111
  400ba4:	20183f01 	.word	0x20183f01
  400ba8:	400e0600 	.word	0x400e0600
  400bac:	00401121 	.word	0x00401121
  400bb0:	00401011 	.word	0x00401011
  400bb4:	00401049 	.word	0x00401049
  400bb8:	004012a5 	.word	0x004012a5

00400bbc <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400bbe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400bc2:	4b48      	ldr	r3, [pc, #288]	; (400ce4 <board_init+0x128>)
  400bc4:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400bc6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400bca:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400bce:	4b46      	ldr	r3, [pc, #280]	; (400ce8 <board_init+0x12c>)
  400bd0:	2200      	movs	r2, #0
  400bd2:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400bd6:	695a      	ldr	r2, [r3, #20]
  400bd8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400bdc:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400bde:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400be2:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400be6:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400bea:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400bee:	f007 0007 	and.w	r0, r7, #7
  400bf2:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400bf4:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400bf8:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400bfc:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400c00:	f3bf 8f4f 	dsb	sy
  400c04:	f04f 34ff 	mov.w	r4, #4294967295
  400c08:	fa04 fc00 	lsl.w	ip, r4, r0
  400c0c:	fa06 f000 	lsl.w	r0, r6, r0
  400c10:	fa04 f40e 	lsl.w	r4, r4, lr
  400c14:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400c18:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400c1a:	463a      	mov	r2, r7
  400c1c:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400c1e:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400c22:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400c26:	3a01      	subs	r2, #1
  400c28:	4423      	add	r3, r4
  400c2a:	f1b2 3fff 	cmp.w	r2, #4294967295
  400c2e:	d1f6      	bne.n	400c1e <board_init+0x62>
        } while(sets--);
  400c30:	3e01      	subs	r6, #1
  400c32:	4460      	add	r0, ip
  400c34:	f1b6 3fff 	cmp.w	r6, #4294967295
  400c38:	d1ef      	bne.n	400c1a <board_init+0x5e>
  400c3a:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400c3e:	4b2a      	ldr	r3, [pc, #168]	; (400ce8 <board_init+0x12c>)
  400c40:	695a      	ldr	r2, [r3, #20]
  400c42:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400c46:	615a      	str	r2, [r3, #20]
  400c48:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c4c:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400c50:	4a26      	ldr	r2, [pc, #152]	; (400cec <board_init+0x130>)
  400c52:	4927      	ldr	r1, [pc, #156]	; (400cf0 <board_init+0x134>)
  400c54:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400c56:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400c5a:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400c5c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c60:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400c64:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400c68:	f022 0201 	bic.w	r2, r2, #1
  400c6c:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400c70:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400c74:	f022 0201 	bic.w	r2, r2, #1
  400c78:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400c7c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c80:	f3bf 8f6f 	isb	sy
  400c84:	200a      	movs	r0, #10
  400c86:	4c1b      	ldr	r4, [pc, #108]	; (400cf4 <board_init+0x138>)
  400c88:	47a0      	blx	r4
  400c8a:	200b      	movs	r0, #11
  400c8c:	47a0      	blx	r4
  400c8e:	200c      	movs	r0, #12
  400c90:	47a0      	blx	r4
  400c92:	2010      	movs	r0, #16
  400c94:	47a0      	blx	r4
  400c96:	2011      	movs	r0, #17
  400c98:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400c9a:	4b17      	ldr	r3, [pc, #92]	; (400cf8 <board_init+0x13c>)
  400c9c:	f44f 7280 	mov.w	r2, #256	; 0x100
  400ca0:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400ca2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400ca6:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400ca8:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400cac:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400cb0:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400cb2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400cb6:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400cb8:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400cbc:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400cbe:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400cc0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400cc4:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400cc6:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400cca:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400ccc:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400cce:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400cd2:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400cd4:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400cd8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400cdc:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400ce0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400ce2:	bf00      	nop
  400ce4:	400e1850 	.word	0x400e1850
  400ce8:	e000ed00 	.word	0xe000ed00
  400cec:	400e0c00 	.word	0x400e0c00
  400cf0:	5a00080c 	.word	0x5a00080c
  400cf4:	00401131 	.word	0x00401131
  400cf8:	400e1200 	.word	0x400e1200

00400cfc <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400cfc:	6301      	str	r1, [r0, #48]	; 0x30
  400cfe:	4770      	bx	lr

00400d00 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400d00:	6341      	str	r1, [r0, #52]	; 0x34
  400d02:	4770      	bx	lr

00400d04 <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400d04:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400d08:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d0c:	d105      	bne.n	400d1a <pio_get+0x16>
		ul_reg = p_pio->PIO_ODSR;
  400d0e:	6b83      	ldr	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
	}

	if ((ul_reg & ul_mask) == 0) {
  400d10:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400d12:	bf14      	ite	ne
  400d14:	2001      	movne	r0, #1
  400d16:	2000      	moveq	r0, #0
  400d18:	4770      	bx	lr
		ul_reg = p_pio->PIO_PDSR;
  400d1a:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  400d1c:	e7f8      	b.n	400d10 <pio_get+0xc>

00400d1e <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400d1e:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400d20:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400d24:	d03a      	beq.n	400d9c <pio_set_peripheral+0x7e>
  400d26:	d813      	bhi.n	400d50 <pio_set_peripheral+0x32>
  400d28:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400d2c:	d025      	beq.n	400d7a <pio_set_peripheral+0x5c>
  400d2e:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400d32:	d10a      	bne.n	400d4a <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d34:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400d36:	4313      	orrs	r3, r2
  400d38:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400d3a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400d3c:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400d3e:	400b      	ands	r3, r1
  400d40:	ea23 0302 	bic.w	r3, r3, r2
  400d44:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400d46:	6042      	str	r2, [r0, #4]
  400d48:	4770      	bx	lr
	switch (ul_type) {
  400d4a:	2900      	cmp	r1, #0
  400d4c:	d1fb      	bne.n	400d46 <pio_set_peripheral+0x28>
  400d4e:	4770      	bx	lr
  400d50:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400d54:	d021      	beq.n	400d9a <pio_set_peripheral+0x7c>
  400d56:	d809      	bhi.n	400d6c <pio_set_peripheral+0x4e>
  400d58:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d5c:	d1f3      	bne.n	400d46 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d5e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400d60:	4313      	orrs	r3, r2
  400d62:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d64:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400d66:	4313      	orrs	r3, r2
  400d68:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d6a:	e7ec      	b.n	400d46 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400d6c:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d70:	d013      	beq.n	400d9a <pio_set_peripheral+0x7c>
  400d72:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d76:	d010      	beq.n	400d9a <pio_set_peripheral+0x7c>
  400d78:	e7e5      	b.n	400d46 <pio_set_peripheral+0x28>
{
  400d7a:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d7c:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d7e:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400d80:	43d3      	mvns	r3, r2
  400d82:	4021      	ands	r1, r4
  400d84:	461c      	mov	r4, r3
  400d86:	4019      	ands	r1, r3
  400d88:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d8a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400d8c:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400d8e:	400b      	ands	r3, r1
  400d90:	4023      	ands	r3, r4
  400d92:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400d94:	6042      	str	r2, [r0, #4]
}
  400d96:	f85d 4b04 	ldr.w	r4, [sp], #4
  400d9a:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d9c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d9e:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400da0:	400b      	ands	r3, r1
  400da2:	ea23 0302 	bic.w	r3, r3, r2
  400da6:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400da8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400daa:	4313      	orrs	r3, r2
  400dac:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400dae:	e7ca      	b.n	400d46 <pio_set_peripheral+0x28>

00400db0 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400db0:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400db2:	f012 0f01 	tst.w	r2, #1
  400db6:	d10d      	bne.n	400dd4 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400db8:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400dba:	f012 0f0a 	tst.w	r2, #10
  400dbe:	d00b      	beq.n	400dd8 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400dc0:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400dc2:	f012 0f02 	tst.w	r2, #2
  400dc6:	d109      	bne.n	400ddc <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400dc8:	f012 0f08 	tst.w	r2, #8
  400dcc:	d008      	beq.n	400de0 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400dce:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400dd2:	e005      	b.n	400de0 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400dd4:	6641      	str	r1, [r0, #100]	; 0x64
  400dd6:	e7f0      	b.n	400dba <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400dd8:	6241      	str	r1, [r0, #36]	; 0x24
  400dda:	e7f2      	b.n	400dc2 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400ddc:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400de0:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400de2:	6001      	str	r1, [r0, #0]
  400de4:	4770      	bx	lr

00400de6 <pio_set_output>:
{
  400de6:	b410      	push	{r4}
  400de8:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400dea:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400dec:	b94c      	cbnz	r4, 400e02 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400dee:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400df0:	b14b      	cbz	r3, 400e06 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400df2:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400df4:	b94a      	cbnz	r2, 400e0a <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400df6:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400df8:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400dfa:	6001      	str	r1, [r0, #0]
}
  400dfc:	f85d 4b04 	ldr.w	r4, [sp], #4
  400e00:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400e02:	6641      	str	r1, [r0, #100]	; 0x64
  400e04:	e7f4      	b.n	400df0 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400e06:	6541      	str	r1, [r0, #84]	; 0x54
  400e08:	e7f4      	b.n	400df4 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400e0a:	6301      	str	r1, [r0, #48]	; 0x30
  400e0c:	e7f4      	b.n	400df8 <pio_set_output+0x12>
	...

00400e10 <pio_configure>:
{
  400e10:	b570      	push	{r4, r5, r6, lr}
  400e12:	b082      	sub	sp, #8
  400e14:	4605      	mov	r5, r0
  400e16:	4616      	mov	r6, r2
  400e18:	461c      	mov	r4, r3
	switch (ul_type) {
  400e1a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400e1e:	d014      	beq.n	400e4a <pio_configure+0x3a>
  400e20:	d90a      	bls.n	400e38 <pio_configure+0x28>
  400e22:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400e26:	d024      	beq.n	400e72 <pio_configure+0x62>
  400e28:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400e2c:	d021      	beq.n	400e72 <pio_configure+0x62>
  400e2e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400e32:	d017      	beq.n	400e64 <pio_configure+0x54>
		return 0;
  400e34:	2000      	movs	r0, #0
  400e36:	e01a      	b.n	400e6e <pio_configure+0x5e>
	switch (ul_type) {
  400e38:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400e3c:	d005      	beq.n	400e4a <pio_configure+0x3a>
  400e3e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400e42:	d002      	beq.n	400e4a <pio_configure+0x3a>
  400e44:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400e48:	d1f4      	bne.n	400e34 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400e4a:	4632      	mov	r2, r6
  400e4c:	4628      	mov	r0, r5
  400e4e:	4b11      	ldr	r3, [pc, #68]	; (400e94 <pio_configure+0x84>)
  400e50:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e52:	f014 0f01 	tst.w	r4, #1
  400e56:	d102      	bne.n	400e5e <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400e58:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400e5a:	2001      	movs	r0, #1
  400e5c:	e007      	b.n	400e6e <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400e5e:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400e60:	2001      	movs	r0, #1
  400e62:	e004      	b.n	400e6e <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400e64:	461a      	mov	r2, r3
  400e66:	4631      	mov	r1, r6
  400e68:	4b0b      	ldr	r3, [pc, #44]	; (400e98 <pio_configure+0x88>)
  400e6a:	4798      	blx	r3
	return 1;
  400e6c:	2001      	movs	r0, #1
}
  400e6e:	b002      	add	sp, #8
  400e70:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400e72:	f004 0301 	and.w	r3, r4, #1
  400e76:	9300      	str	r3, [sp, #0]
  400e78:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400e7c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400e80:	bf14      	ite	ne
  400e82:	2200      	movne	r2, #0
  400e84:	2201      	moveq	r2, #1
  400e86:	4631      	mov	r1, r6
  400e88:	4628      	mov	r0, r5
  400e8a:	4c04      	ldr	r4, [pc, #16]	; (400e9c <pio_configure+0x8c>)
  400e8c:	47a0      	blx	r4
	return 1;
  400e8e:	2001      	movs	r0, #1
		break;
  400e90:	e7ed      	b.n	400e6e <pio_configure+0x5e>
  400e92:	bf00      	nop
  400e94:	00400d1f 	.word	0x00400d1f
  400e98:	00400db1 	.word	0x00400db1
  400e9c:	00400de7 	.word	0x00400de7

00400ea0 <pio_get_output_data_status>:
	if ((p_pio->PIO_ODSR & ul_mask) == 0) {
  400ea0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400ea2:	420b      	tst	r3, r1
}
  400ea4:	bf14      	ite	ne
  400ea6:	2001      	movne	r0, #1
  400ea8:	2000      	moveq	r0, #0
  400eaa:	4770      	bx	lr

00400eac <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400eac:	f012 0f10 	tst.w	r2, #16
  400eb0:	d012      	beq.n	400ed8 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400eb2:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400eb6:	f012 0f20 	tst.w	r2, #32
  400eba:	d007      	beq.n	400ecc <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400ebc:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400ec0:	f012 0f40 	tst.w	r2, #64	; 0x40
  400ec4:	d005      	beq.n	400ed2 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400ec6:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400eca:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400ecc:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400ed0:	e7f6      	b.n	400ec0 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400ed2:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400ed6:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400ed8:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400edc:	4770      	bx	lr

00400ede <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400ede:	6401      	str	r1, [r0, #64]	; 0x40
  400ee0:	4770      	bx	lr

00400ee2 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400ee2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400ee4:	4770      	bx	lr

00400ee6 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400ee6:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400ee8:	4770      	bx	lr
	...

00400eec <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400eec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400ef0:	4604      	mov	r4, r0
  400ef2:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400ef4:	4b0e      	ldr	r3, [pc, #56]	; (400f30 <pio_handler_process+0x44>)
  400ef6:	4798      	blx	r3
  400ef8:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400efa:	4620      	mov	r0, r4
  400efc:	4b0d      	ldr	r3, [pc, #52]	; (400f34 <pio_handler_process+0x48>)
  400efe:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400f00:	4005      	ands	r5, r0
  400f02:	d013      	beq.n	400f2c <pio_handler_process+0x40>
  400f04:	4c0c      	ldr	r4, [pc, #48]	; (400f38 <pio_handler_process+0x4c>)
  400f06:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400f0a:	e003      	b.n	400f14 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400f0c:	42b4      	cmp	r4, r6
  400f0e:	d00d      	beq.n	400f2c <pio_handler_process+0x40>
  400f10:	3410      	adds	r4, #16
		while (status != 0) {
  400f12:	b15d      	cbz	r5, 400f2c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400f14:	6820      	ldr	r0, [r4, #0]
  400f16:	4540      	cmp	r0, r8
  400f18:	d1f8      	bne.n	400f0c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400f1a:	6861      	ldr	r1, [r4, #4]
  400f1c:	4229      	tst	r1, r5
  400f1e:	d0f5      	beq.n	400f0c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400f20:	68e3      	ldr	r3, [r4, #12]
  400f22:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400f24:	6863      	ldr	r3, [r4, #4]
  400f26:	ea25 0503 	bic.w	r5, r5, r3
  400f2a:	e7ef      	b.n	400f0c <pio_handler_process+0x20>
  400f2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400f30:	00400ee3 	.word	0x00400ee3
  400f34:	00400ee7 	.word	0x00400ee7
  400f38:	20400bf0 	.word	0x20400bf0

00400f3c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400f3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400f3e:	4c18      	ldr	r4, [pc, #96]	; (400fa0 <pio_handler_set+0x64>)
  400f40:	6826      	ldr	r6, [r4, #0]
  400f42:	2e06      	cmp	r6, #6
  400f44:	d82a      	bhi.n	400f9c <pio_handler_set+0x60>
  400f46:	f04f 0c00 	mov.w	ip, #0
  400f4a:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f4c:	4f15      	ldr	r7, [pc, #84]	; (400fa4 <pio_handler_set+0x68>)
  400f4e:	e004      	b.n	400f5a <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400f50:	3401      	adds	r4, #1
  400f52:	b2e4      	uxtb	r4, r4
  400f54:	46a4      	mov	ip, r4
  400f56:	42a6      	cmp	r6, r4
  400f58:	d309      	bcc.n	400f6e <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400f5a:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f5c:	0125      	lsls	r5, r4, #4
  400f5e:	597d      	ldr	r5, [r7, r5]
  400f60:	428d      	cmp	r5, r1
  400f62:	d1f5      	bne.n	400f50 <pio_handler_set+0x14>
  400f64:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400f68:	686d      	ldr	r5, [r5, #4]
  400f6a:	4295      	cmp	r5, r2
  400f6c:	d1f0      	bne.n	400f50 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400f6e:	4d0d      	ldr	r5, [pc, #52]	; (400fa4 <pio_handler_set+0x68>)
  400f70:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400f74:	eb05 040e 	add.w	r4, r5, lr
  400f78:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400f7c:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400f7e:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400f80:	9906      	ldr	r1, [sp, #24]
  400f82:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400f84:	3601      	adds	r6, #1
  400f86:	4566      	cmp	r6, ip
  400f88:	d005      	beq.n	400f96 <pio_handler_set+0x5a>
  400f8a:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400f8c:	461a      	mov	r2, r3
  400f8e:	4b06      	ldr	r3, [pc, #24]	; (400fa8 <pio_handler_set+0x6c>)
  400f90:	4798      	blx	r3

	return 0;
  400f92:	2000      	movs	r0, #0
  400f94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400f96:	4902      	ldr	r1, [pc, #8]	; (400fa0 <pio_handler_set+0x64>)
  400f98:	600e      	str	r6, [r1, #0]
  400f9a:	e7f6      	b.n	400f8a <pio_handler_set+0x4e>
		return 1;
  400f9c:	2001      	movs	r0, #1
}
  400f9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400fa0:	20400c60 	.word	0x20400c60
  400fa4:	20400bf0 	.word	0x20400bf0
  400fa8:	00400ead 	.word	0x00400ead

00400fac <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400fac:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400fae:	210a      	movs	r1, #10
  400fb0:	4801      	ldr	r0, [pc, #4]	; (400fb8 <PIOA_Handler+0xc>)
  400fb2:	4b02      	ldr	r3, [pc, #8]	; (400fbc <PIOA_Handler+0x10>)
  400fb4:	4798      	blx	r3
  400fb6:	bd08      	pop	{r3, pc}
  400fb8:	400e0e00 	.word	0x400e0e00
  400fbc:	00400eed 	.word	0x00400eed

00400fc0 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400fc0:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400fc2:	210b      	movs	r1, #11
  400fc4:	4801      	ldr	r0, [pc, #4]	; (400fcc <PIOB_Handler+0xc>)
  400fc6:	4b02      	ldr	r3, [pc, #8]	; (400fd0 <PIOB_Handler+0x10>)
  400fc8:	4798      	blx	r3
  400fca:	bd08      	pop	{r3, pc}
  400fcc:	400e1000 	.word	0x400e1000
  400fd0:	00400eed 	.word	0x00400eed

00400fd4 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400fd4:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400fd6:	210c      	movs	r1, #12
  400fd8:	4801      	ldr	r0, [pc, #4]	; (400fe0 <PIOC_Handler+0xc>)
  400fda:	4b02      	ldr	r3, [pc, #8]	; (400fe4 <PIOC_Handler+0x10>)
  400fdc:	4798      	blx	r3
  400fde:	bd08      	pop	{r3, pc}
  400fe0:	400e1200 	.word	0x400e1200
  400fe4:	00400eed 	.word	0x00400eed

00400fe8 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400fe8:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400fea:	2110      	movs	r1, #16
  400fec:	4801      	ldr	r0, [pc, #4]	; (400ff4 <PIOD_Handler+0xc>)
  400fee:	4b02      	ldr	r3, [pc, #8]	; (400ff8 <PIOD_Handler+0x10>)
  400ff0:	4798      	blx	r3
  400ff2:	bd08      	pop	{r3, pc}
  400ff4:	400e1400 	.word	0x400e1400
  400ff8:	00400eed 	.word	0x00400eed

00400ffc <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400ffc:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400ffe:	2111      	movs	r1, #17
  401000:	4801      	ldr	r0, [pc, #4]	; (401008 <PIOE_Handler+0xc>)
  401002:	4b02      	ldr	r3, [pc, #8]	; (40100c <PIOE_Handler+0x10>)
  401004:	4798      	blx	r3
  401006:	bd08      	pop	{r3, pc}
  401008:	400e1600 	.word	0x400e1600
  40100c:	00400eed 	.word	0x00400eed

00401010 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  401010:	2803      	cmp	r0, #3
  401012:	d011      	beq.n	401038 <pmc_mck_set_division+0x28>
  401014:	2804      	cmp	r0, #4
  401016:	d012      	beq.n	40103e <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  401018:	2802      	cmp	r0, #2
  40101a:	bf0c      	ite	eq
  40101c:	f44f 7180 	moveq.w	r1, #256	; 0x100
  401020:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  401022:	4a08      	ldr	r2, [pc, #32]	; (401044 <pmc_mck_set_division+0x34>)
  401024:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401026:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  40102a:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  40102c:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40102e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401030:	f013 0f08 	tst.w	r3, #8
  401034:	d0fb      	beq.n	40102e <pmc_mck_set_division+0x1e>
}
  401036:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  401038:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  40103c:	e7f1      	b.n	401022 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  40103e:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  401042:	e7ee      	b.n	401022 <pmc_mck_set_division+0x12>
  401044:	400e0600 	.word	0x400e0600

00401048 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  401048:	4a17      	ldr	r2, [pc, #92]	; (4010a8 <pmc_switch_mck_to_pllack+0x60>)
  40104a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40104c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  401050:	4318      	orrs	r0, r3
  401052:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401054:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401056:	f013 0f08 	tst.w	r3, #8
  40105a:	d10a      	bne.n	401072 <pmc_switch_mck_to_pllack+0x2a>
  40105c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401060:	4911      	ldr	r1, [pc, #68]	; (4010a8 <pmc_switch_mck_to_pllack+0x60>)
  401062:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401064:	f012 0f08 	tst.w	r2, #8
  401068:	d103      	bne.n	401072 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40106a:	3b01      	subs	r3, #1
  40106c:	d1f9      	bne.n	401062 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40106e:	2001      	movs	r0, #1
  401070:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  401072:	4a0d      	ldr	r2, [pc, #52]	; (4010a8 <pmc_switch_mck_to_pllack+0x60>)
  401074:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401076:	f023 0303 	bic.w	r3, r3, #3
  40107a:	f043 0302 	orr.w	r3, r3, #2
  40107e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401080:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401082:	f013 0f08 	tst.w	r3, #8
  401086:	d10a      	bne.n	40109e <pmc_switch_mck_to_pllack+0x56>
  401088:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  40108c:	4906      	ldr	r1, [pc, #24]	; (4010a8 <pmc_switch_mck_to_pllack+0x60>)
  40108e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401090:	f012 0f08 	tst.w	r2, #8
  401094:	d105      	bne.n	4010a2 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  401096:	3b01      	subs	r3, #1
  401098:	d1f9      	bne.n	40108e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40109a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  40109c:	4770      	bx	lr
	return 0;
  40109e:	2000      	movs	r0, #0
  4010a0:	4770      	bx	lr
  4010a2:	2000      	movs	r0, #0
  4010a4:	4770      	bx	lr
  4010a6:	bf00      	nop
  4010a8:	400e0600 	.word	0x400e0600

004010ac <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4010ac:	b9a0      	cbnz	r0, 4010d8 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4010ae:	480e      	ldr	r0, [pc, #56]	; (4010e8 <pmc_switch_mainck_to_xtal+0x3c>)
  4010b0:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4010b2:	0209      	lsls	r1, r1, #8
  4010b4:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4010b6:	4a0d      	ldr	r2, [pc, #52]	; (4010ec <pmc_switch_mainck_to_xtal+0x40>)
  4010b8:	401a      	ands	r2, r3
  4010ba:	4b0d      	ldr	r3, [pc, #52]	; (4010f0 <pmc_switch_mainck_to_xtal+0x44>)
  4010bc:	4313      	orrs	r3, r2
  4010be:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4010c0:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4010c2:	4602      	mov	r2, r0
  4010c4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010c6:	f013 0f01 	tst.w	r3, #1
  4010ca:	d0fb      	beq.n	4010c4 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4010cc:	4a06      	ldr	r2, [pc, #24]	; (4010e8 <pmc_switch_mainck_to_xtal+0x3c>)
  4010ce:	6a11      	ldr	r1, [r2, #32]
  4010d0:	4b08      	ldr	r3, [pc, #32]	; (4010f4 <pmc_switch_mainck_to_xtal+0x48>)
  4010d2:	430b      	orrs	r3, r1
  4010d4:	6213      	str	r3, [r2, #32]
  4010d6:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4010d8:	4903      	ldr	r1, [pc, #12]	; (4010e8 <pmc_switch_mainck_to_xtal+0x3c>)
  4010da:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4010dc:	4a06      	ldr	r2, [pc, #24]	; (4010f8 <pmc_switch_mainck_to_xtal+0x4c>)
  4010de:	401a      	ands	r2, r3
  4010e0:	4b06      	ldr	r3, [pc, #24]	; (4010fc <pmc_switch_mainck_to_xtal+0x50>)
  4010e2:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4010e4:	620b      	str	r3, [r1, #32]
  4010e6:	4770      	bx	lr
  4010e8:	400e0600 	.word	0x400e0600
  4010ec:	ffc8fffc 	.word	0xffc8fffc
  4010f0:	00370001 	.word	0x00370001
  4010f4:	01370000 	.word	0x01370000
  4010f8:	fec8fffc 	.word	0xfec8fffc
  4010fc:	01370002 	.word	0x01370002

00401100 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  401100:	4b02      	ldr	r3, [pc, #8]	; (40110c <pmc_osc_is_ready_mainck+0xc>)
  401102:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401104:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  401108:	4770      	bx	lr
  40110a:	bf00      	nop
  40110c:	400e0600 	.word	0x400e0600

00401110 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  401110:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401114:	4b01      	ldr	r3, [pc, #4]	; (40111c <pmc_disable_pllack+0xc>)
  401116:	629a      	str	r2, [r3, #40]	; 0x28
  401118:	4770      	bx	lr
  40111a:	bf00      	nop
  40111c:	400e0600 	.word	0x400e0600

00401120 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401120:	4b02      	ldr	r3, [pc, #8]	; (40112c <pmc_is_locked_pllack+0xc>)
  401122:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401124:	f000 0002 	and.w	r0, r0, #2
  401128:	4770      	bx	lr
  40112a:	bf00      	nop
  40112c:	400e0600 	.word	0x400e0600

00401130 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401130:	283f      	cmp	r0, #63	; 0x3f
  401132:	d81e      	bhi.n	401172 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401134:	281f      	cmp	r0, #31
  401136:	d80c      	bhi.n	401152 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401138:	4b11      	ldr	r3, [pc, #68]	; (401180 <pmc_enable_periph_clk+0x50>)
  40113a:	699a      	ldr	r2, [r3, #24]
  40113c:	2301      	movs	r3, #1
  40113e:	4083      	lsls	r3, r0
  401140:	4393      	bics	r3, r2
  401142:	d018      	beq.n	401176 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  401144:	2301      	movs	r3, #1
  401146:	fa03 f000 	lsl.w	r0, r3, r0
  40114a:	4b0d      	ldr	r3, [pc, #52]	; (401180 <pmc_enable_periph_clk+0x50>)
  40114c:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40114e:	2000      	movs	r0, #0
  401150:	4770      	bx	lr
		ul_id -= 32;
  401152:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401154:	4b0a      	ldr	r3, [pc, #40]	; (401180 <pmc_enable_periph_clk+0x50>)
  401156:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40115a:	2301      	movs	r3, #1
  40115c:	4083      	lsls	r3, r0
  40115e:	4393      	bics	r3, r2
  401160:	d00b      	beq.n	40117a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  401162:	2301      	movs	r3, #1
  401164:	fa03 f000 	lsl.w	r0, r3, r0
  401168:	4b05      	ldr	r3, [pc, #20]	; (401180 <pmc_enable_periph_clk+0x50>)
  40116a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40116e:	2000      	movs	r0, #0
  401170:	4770      	bx	lr
		return 1;
  401172:	2001      	movs	r0, #1
  401174:	4770      	bx	lr
	return 0;
  401176:	2000      	movs	r0, #0
  401178:	4770      	bx	lr
  40117a:	2000      	movs	r0, #0
}
  40117c:	4770      	bx	lr
  40117e:	bf00      	nop
  401180:	400e0600 	.word	0x400e0600

00401184 <pmc_disable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_disable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401184:	283f      	cmp	r0, #63	; 0x3f
  401186:	d822      	bhi.n	4011ce <pmc_disable_periph_clk+0x4a>
		return 1;
	}

	if (ul_id < 32) {
  401188:	281f      	cmp	r0, #31
  40118a:	d80e      	bhi.n	4011aa <pmc_disable_periph_clk+0x26>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
  40118c:	4b11      	ldr	r3, [pc, #68]	; (4011d4 <pmc_disable_periph_clk+0x50>)
  40118e:	699a      	ldr	r2, [r3, #24]
  401190:	2301      	movs	r3, #1
  401192:	4083      	lsls	r3, r0
  401194:	4393      	bics	r3, r2
  401196:	d001      	beq.n	40119c <pmc_disable_periph_clk+0x18>
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
			PMC->PMC_PCDR1 = 1 << ul_id;
		}
#endif
	}
	return 0;
  401198:	2000      	movs	r0, #0
  40119a:	4770      	bx	lr
			PMC->PMC_PCDR0 = 1 << ul_id;
  40119c:	2301      	movs	r3, #1
  40119e:	fa03 f000 	lsl.w	r0, r3, r0
  4011a2:	4b0c      	ldr	r3, [pc, #48]	; (4011d4 <pmc_disable_periph_clk+0x50>)
  4011a4:	6158      	str	r0, [r3, #20]
	return 0;
  4011a6:	2000      	movs	r0, #0
  4011a8:	4770      	bx	lr
		ul_id -= 32;
  4011aa:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
  4011ac:	4b09      	ldr	r3, [pc, #36]	; (4011d4 <pmc_disable_periph_clk+0x50>)
  4011ae:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4011b2:	2301      	movs	r3, #1
  4011b4:	4083      	lsls	r3, r0
  4011b6:	4393      	bics	r3, r2
  4011b8:	d001      	beq.n	4011be <pmc_disable_periph_clk+0x3a>
	return 0;
  4011ba:	2000      	movs	r0, #0
}
  4011bc:	4770      	bx	lr
			PMC->PMC_PCDR1 = 1 << ul_id;
  4011be:	2301      	movs	r3, #1
  4011c0:	fa03 f000 	lsl.w	r0, r3, r0
  4011c4:	4b03      	ldr	r3, [pc, #12]	; (4011d4 <pmc_disable_periph_clk+0x50>)
  4011c6:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
	return 0;
  4011ca:	2000      	movs	r0, #0
  4011cc:	4770      	bx	lr
		return 1;
  4011ce:	2001      	movs	r0, #1
  4011d0:	4770      	bx	lr
  4011d2:	bf00      	nop
  4011d4:	400e0600 	.word	0x400e0600

004011d8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4011d8:	e7fe      	b.n	4011d8 <Dummy_Handler>
	...

004011dc <Reset_Handler>:
{
  4011dc:	b500      	push	{lr}
  4011de:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  4011e0:	4b25      	ldr	r3, [pc, #148]	; (401278 <Reset_Handler+0x9c>)
  4011e2:	4a26      	ldr	r2, [pc, #152]	; (40127c <Reset_Handler+0xa0>)
  4011e4:	429a      	cmp	r2, r3
  4011e6:	d010      	beq.n	40120a <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  4011e8:	4b25      	ldr	r3, [pc, #148]	; (401280 <Reset_Handler+0xa4>)
  4011ea:	4a23      	ldr	r2, [pc, #140]	; (401278 <Reset_Handler+0x9c>)
  4011ec:	429a      	cmp	r2, r3
  4011ee:	d20c      	bcs.n	40120a <Reset_Handler+0x2e>
  4011f0:	3b01      	subs	r3, #1
  4011f2:	1a9b      	subs	r3, r3, r2
  4011f4:	f023 0303 	bic.w	r3, r3, #3
  4011f8:	3304      	adds	r3, #4
  4011fa:	4413      	add	r3, r2
  4011fc:	491f      	ldr	r1, [pc, #124]	; (40127c <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4011fe:	f851 0b04 	ldr.w	r0, [r1], #4
  401202:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401206:	429a      	cmp	r2, r3
  401208:	d1f9      	bne.n	4011fe <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  40120a:	4b1e      	ldr	r3, [pc, #120]	; (401284 <Reset_Handler+0xa8>)
  40120c:	4a1e      	ldr	r2, [pc, #120]	; (401288 <Reset_Handler+0xac>)
  40120e:	429a      	cmp	r2, r3
  401210:	d20a      	bcs.n	401228 <Reset_Handler+0x4c>
  401212:	3b01      	subs	r3, #1
  401214:	1a9b      	subs	r3, r3, r2
  401216:	f023 0303 	bic.w	r3, r3, #3
  40121a:	3304      	adds	r3, #4
  40121c:	4413      	add	r3, r2
                *pDest++ = 0;
  40121e:	2100      	movs	r1, #0
  401220:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401224:	4293      	cmp	r3, r2
  401226:	d1fb      	bne.n	401220 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401228:	4a18      	ldr	r2, [pc, #96]	; (40128c <Reset_Handler+0xb0>)
  40122a:	4b19      	ldr	r3, [pc, #100]	; (401290 <Reset_Handler+0xb4>)
  40122c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401230:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401232:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401236:	fab3 f383 	clz	r3, r3
  40123a:	095b      	lsrs	r3, r3, #5
  40123c:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  40123e:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401240:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401244:	2200      	movs	r2, #0
  401246:	4b13      	ldr	r3, [pc, #76]	; (401294 <Reset_Handler+0xb8>)
  401248:	701a      	strb	r2, [r3, #0]
	return flags;
  40124a:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  40124c:	4a12      	ldr	r2, [pc, #72]	; (401298 <Reset_Handler+0xbc>)
  40124e:	6813      	ldr	r3, [r2, #0]
  401250:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401254:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401256:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40125a:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40125e:	b129      	cbz	r1, 40126c <Reset_Handler+0x90>
		cpu_irq_enable();
  401260:	2201      	movs	r2, #1
  401262:	4b0c      	ldr	r3, [pc, #48]	; (401294 <Reset_Handler+0xb8>)
  401264:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401266:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40126a:	b662      	cpsie	i
        __libc_init_array();
  40126c:	4b0b      	ldr	r3, [pc, #44]	; (40129c <Reset_Handler+0xc0>)
  40126e:	4798      	blx	r3
        main();
  401270:	4b0b      	ldr	r3, [pc, #44]	; (4012a0 <Reset_Handler+0xc4>)
  401272:	4798      	blx	r3
  401274:	e7fe      	b.n	401274 <Reset_Handler+0x98>
  401276:	bf00      	nop
  401278:	20400000 	.word	0x20400000
  40127c:	004076ac 	.word	0x004076ac
  401280:	204009d0 	.word	0x204009d0
  401284:	20400ce0 	.word	0x20400ce0
  401288:	204009d0 	.word	0x204009d0
  40128c:	e000ed00 	.word	0xe000ed00
  401290:	00400000 	.word	0x00400000
  401294:	20400018 	.word	0x20400018
  401298:	e000ed88 	.word	0xe000ed88
  40129c:	00401a3d 	.word	0x00401a3d
  4012a0:	004019b9 	.word	0x004019b9

004012a4 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  4012a4:	4b3b      	ldr	r3, [pc, #236]	; (401394 <SystemCoreClockUpdate+0xf0>)
  4012a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4012a8:	f003 0303 	and.w	r3, r3, #3
  4012ac:	2b01      	cmp	r3, #1
  4012ae:	d01d      	beq.n	4012ec <SystemCoreClockUpdate+0x48>
  4012b0:	b183      	cbz	r3, 4012d4 <SystemCoreClockUpdate+0x30>
  4012b2:	2b02      	cmp	r3, #2
  4012b4:	d036      	beq.n	401324 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4012b6:	4b37      	ldr	r3, [pc, #220]	; (401394 <SystemCoreClockUpdate+0xf0>)
  4012b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4012ba:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4012be:	2b70      	cmp	r3, #112	; 0x70
  4012c0:	d05f      	beq.n	401382 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4012c2:	4b34      	ldr	r3, [pc, #208]	; (401394 <SystemCoreClockUpdate+0xf0>)
  4012c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4012c6:	4934      	ldr	r1, [pc, #208]	; (401398 <SystemCoreClockUpdate+0xf4>)
  4012c8:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4012cc:	680b      	ldr	r3, [r1, #0]
  4012ce:	40d3      	lsrs	r3, r2
  4012d0:	600b      	str	r3, [r1, #0]
  4012d2:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4012d4:	4b31      	ldr	r3, [pc, #196]	; (40139c <SystemCoreClockUpdate+0xf8>)
  4012d6:	695b      	ldr	r3, [r3, #20]
  4012d8:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4012dc:	bf14      	ite	ne
  4012de:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4012e2:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4012e6:	4b2c      	ldr	r3, [pc, #176]	; (401398 <SystemCoreClockUpdate+0xf4>)
  4012e8:	601a      	str	r2, [r3, #0]
  4012ea:	e7e4      	b.n	4012b6 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4012ec:	4b29      	ldr	r3, [pc, #164]	; (401394 <SystemCoreClockUpdate+0xf0>)
  4012ee:	6a1b      	ldr	r3, [r3, #32]
  4012f0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4012f4:	d003      	beq.n	4012fe <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4012f6:	4a2a      	ldr	r2, [pc, #168]	; (4013a0 <SystemCoreClockUpdate+0xfc>)
  4012f8:	4b27      	ldr	r3, [pc, #156]	; (401398 <SystemCoreClockUpdate+0xf4>)
  4012fa:	601a      	str	r2, [r3, #0]
  4012fc:	e7db      	b.n	4012b6 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4012fe:	4a29      	ldr	r2, [pc, #164]	; (4013a4 <SystemCoreClockUpdate+0x100>)
  401300:	4b25      	ldr	r3, [pc, #148]	; (401398 <SystemCoreClockUpdate+0xf4>)
  401302:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401304:	4b23      	ldr	r3, [pc, #140]	; (401394 <SystemCoreClockUpdate+0xf0>)
  401306:	6a1b      	ldr	r3, [r3, #32]
  401308:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40130c:	2b10      	cmp	r3, #16
  40130e:	d005      	beq.n	40131c <SystemCoreClockUpdate+0x78>
  401310:	2b20      	cmp	r3, #32
  401312:	d1d0      	bne.n	4012b6 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401314:	4a22      	ldr	r2, [pc, #136]	; (4013a0 <SystemCoreClockUpdate+0xfc>)
  401316:	4b20      	ldr	r3, [pc, #128]	; (401398 <SystemCoreClockUpdate+0xf4>)
  401318:	601a      	str	r2, [r3, #0]
          break;
  40131a:	e7cc      	b.n	4012b6 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  40131c:	4a22      	ldr	r2, [pc, #136]	; (4013a8 <SystemCoreClockUpdate+0x104>)
  40131e:	4b1e      	ldr	r3, [pc, #120]	; (401398 <SystemCoreClockUpdate+0xf4>)
  401320:	601a      	str	r2, [r3, #0]
          break;
  401322:	e7c8      	b.n	4012b6 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401324:	4b1b      	ldr	r3, [pc, #108]	; (401394 <SystemCoreClockUpdate+0xf0>)
  401326:	6a1b      	ldr	r3, [r3, #32]
  401328:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40132c:	d016      	beq.n	40135c <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  40132e:	4a1c      	ldr	r2, [pc, #112]	; (4013a0 <SystemCoreClockUpdate+0xfc>)
  401330:	4b19      	ldr	r3, [pc, #100]	; (401398 <SystemCoreClockUpdate+0xf4>)
  401332:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401334:	4b17      	ldr	r3, [pc, #92]	; (401394 <SystemCoreClockUpdate+0xf0>)
  401336:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401338:	f003 0303 	and.w	r3, r3, #3
  40133c:	2b02      	cmp	r3, #2
  40133e:	d1ba      	bne.n	4012b6 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401340:	4a14      	ldr	r2, [pc, #80]	; (401394 <SystemCoreClockUpdate+0xf0>)
  401342:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401344:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401346:	4814      	ldr	r0, [pc, #80]	; (401398 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401348:	f3c1 410a 	ubfx	r1, r1, #16, #11
  40134c:	6803      	ldr	r3, [r0, #0]
  40134e:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401352:	b2d2      	uxtb	r2, r2
  401354:	fbb3 f3f2 	udiv	r3, r3, r2
  401358:	6003      	str	r3, [r0, #0]
  40135a:	e7ac      	b.n	4012b6 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40135c:	4a11      	ldr	r2, [pc, #68]	; (4013a4 <SystemCoreClockUpdate+0x100>)
  40135e:	4b0e      	ldr	r3, [pc, #56]	; (401398 <SystemCoreClockUpdate+0xf4>)
  401360:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401362:	4b0c      	ldr	r3, [pc, #48]	; (401394 <SystemCoreClockUpdate+0xf0>)
  401364:	6a1b      	ldr	r3, [r3, #32]
  401366:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40136a:	2b10      	cmp	r3, #16
  40136c:	d005      	beq.n	40137a <SystemCoreClockUpdate+0xd6>
  40136e:	2b20      	cmp	r3, #32
  401370:	d1e0      	bne.n	401334 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401372:	4a0b      	ldr	r2, [pc, #44]	; (4013a0 <SystemCoreClockUpdate+0xfc>)
  401374:	4b08      	ldr	r3, [pc, #32]	; (401398 <SystemCoreClockUpdate+0xf4>)
  401376:	601a      	str	r2, [r3, #0]
          break;
  401378:	e7dc      	b.n	401334 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  40137a:	4a0b      	ldr	r2, [pc, #44]	; (4013a8 <SystemCoreClockUpdate+0x104>)
  40137c:	4b06      	ldr	r3, [pc, #24]	; (401398 <SystemCoreClockUpdate+0xf4>)
  40137e:	601a      	str	r2, [r3, #0]
          break;
  401380:	e7d8      	b.n	401334 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401382:	4a05      	ldr	r2, [pc, #20]	; (401398 <SystemCoreClockUpdate+0xf4>)
  401384:	6813      	ldr	r3, [r2, #0]
  401386:	4909      	ldr	r1, [pc, #36]	; (4013ac <SystemCoreClockUpdate+0x108>)
  401388:	fba1 1303 	umull	r1, r3, r1, r3
  40138c:	085b      	lsrs	r3, r3, #1
  40138e:	6013      	str	r3, [r2, #0]
  401390:	4770      	bx	lr
  401392:	bf00      	nop
  401394:	400e0600 	.word	0x400e0600
  401398:	2040001c 	.word	0x2040001c
  40139c:	400e1810 	.word	0x400e1810
  4013a0:	00b71b00 	.word	0x00b71b00
  4013a4:	003d0900 	.word	0x003d0900
  4013a8:	007a1200 	.word	0x007a1200
  4013ac:	aaaaaaab 	.word	0xaaaaaaab

004013b0 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  4013b0:	4b16      	ldr	r3, [pc, #88]	; (40140c <system_init_flash+0x5c>)
  4013b2:	4298      	cmp	r0, r3
  4013b4:	d913      	bls.n	4013de <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  4013b6:	4b16      	ldr	r3, [pc, #88]	; (401410 <system_init_flash+0x60>)
  4013b8:	4298      	cmp	r0, r3
  4013ba:	d915      	bls.n	4013e8 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  4013bc:	4b15      	ldr	r3, [pc, #84]	; (401414 <system_init_flash+0x64>)
  4013be:	4298      	cmp	r0, r3
  4013c0:	d916      	bls.n	4013f0 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  4013c2:	4b15      	ldr	r3, [pc, #84]	; (401418 <system_init_flash+0x68>)
  4013c4:	4298      	cmp	r0, r3
  4013c6:	d917      	bls.n	4013f8 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  4013c8:	4b14      	ldr	r3, [pc, #80]	; (40141c <system_init_flash+0x6c>)
  4013ca:	4298      	cmp	r0, r3
  4013cc:	d918      	bls.n	401400 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  4013ce:	4b14      	ldr	r3, [pc, #80]	; (401420 <system_init_flash+0x70>)
  4013d0:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4013d2:	bf94      	ite	ls
  4013d4:	4a13      	ldrls	r2, [pc, #76]	; (401424 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  4013d6:	4a14      	ldrhi	r2, [pc, #80]	; (401428 <system_init_flash+0x78>)
  4013d8:	4b14      	ldr	r3, [pc, #80]	; (40142c <system_init_flash+0x7c>)
  4013da:	601a      	str	r2, [r3, #0]
  4013dc:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4013de:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4013e2:	4b12      	ldr	r3, [pc, #72]	; (40142c <system_init_flash+0x7c>)
  4013e4:	601a      	str	r2, [r3, #0]
  4013e6:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4013e8:	4a11      	ldr	r2, [pc, #68]	; (401430 <system_init_flash+0x80>)
  4013ea:	4b10      	ldr	r3, [pc, #64]	; (40142c <system_init_flash+0x7c>)
  4013ec:	601a      	str	r2, [r3, #0]
  4013ee:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4013f0:	4a10      	ldr	r2, [pc, #64]	; (401434 <system_init_flash+0x84>)
  4013f2:	4b0e      	ldr	r3, [pc, #56]	; (40142c <system_init_flash+0x7c>)
  4013f4:	601a      	str	r2, [r3, #0]
  4013f6:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4013f8:	4a0f      	ldr	r2, [pc, #60]	; (401438 <system_init_flash+0x88>)
  4013fa:	4b0c      	ldr	r3, [pc, #48]	; (40142c <system_init_flash+0x7c>)
  4013fc:	601a      	str	r2, [r3, #0]
  4013fe:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401400:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401404:	4b09      	ldr	r3, [pc, #36]	; (40142c <system_init_flash+0x7c>)
  401406:	601a      	str	r2, [r3, #0]
  401408:	4770      	bx	lr
  40140a:	bf00      	nop
  40140c:	015ef3bf 	.word	0x015ef3bf
  401410:	02bde77f 	.word	0x02bde77f
  401414:	041cdb3f 	.word	0x041cdb3f
  401418:	057bceff 	.word	0x057bceff
  40141c:	06dac2bf 	.word	0x06dac2bf
  401420:	0839b67f 	.word	0x0839b67f
  401424:	04000500 	.word	0x04000500
  401428:	04000600 	.word	0x04000600
  40142c:	400e0c00 	.word	0x400e0c00
  401430:	04000100 	.word	0x04000100
  401434:	04000200 	.word	0x04000200
  401438:	04000300 	.word	0x04000300

0040143c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  40143c:	4b0a      	ldr	r3, [pc, #40]	; (401468 <_sbrk+0x2c>)
  40143e:	681b      	ldr	r3, [r3, #0]
  401440:	b153      	cbz	r3, 401458 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401442:	4b09      	ldr	r3, [pc, #36]	; (401468 <_sbrk+0x2c>)
  401444:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401446:	181a      	adds	r2, r3, r0
  401448:	4908      	ldr	r1, [pc, #32]	; (40146c <_sbrk+0x30>)
  40144a:	4291      	cmp	r1, r2
  40144c:	db08      	blt.n	401460 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40144e:	4610      	mov	r0, r2
  401450:	4a05      	ldr	r2, [pc, #20]	; (401468 <_sbrk+0x2c>)
  401452:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401454:	4618      	mov	r0, r3
  401456:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401458:	4a05      	ldr	r2, [pc, #20]	; (401470 <_sbrk+0x34>)
  40145a:	4b03      	ldr	r3, [pc, #12]	; (401468 <_sbrk+0x2c>)
  40145c:	601a      	str	r2, [r3, #0]
  40145e:	e7f0      	b.n	401442 <_sbrk+0x6>
		return (caddr_t) -1;	
  401460:	f04f 30ff 	mov.w	r0, #4294967295
}
  401464:	4770      	bx	lr
  401466:	bf00      	nop
  401468:	20400c64 	.word	0x20400c64
  40146c:	2045fffc 	.word	0x2045fffc
  401470:	20402ee0 	.word	0x20402ee0

00401474 <Button_0_Handler>:
	sprintf(stringLCD, "Al%02d:%02d", minuto_alarme, 0);
	gfx_mono_draw_string(stringLCD, 0, 0, &sysfont);
	
}

static void Button_0_Handler(uint32_t id, uint32_t mask){
  401474:	b508      	push	{r3, lr}
		flag_led0=0;
  401476:	2200      	movs	r2, #0
  401478:	4b02      	ldr	r3, [pc, #8]	; (401484 <Button_0_Handler+0x10>)
  40147a:	701a      	strb	r2, [r3, #0]
		pmc_disable_periph_clk(ID_TC1);
  40147c:	2018      	movs	r0, #24
  40147e:	4b02      	ldr	r3, [pc, #8]	; (401488 <Button_0_Handler+0x14>)
  401480:	4798      	blx	r3
  401482:	bd08      	pop	{r3, pc}
  401484:	20400c71 	.word	0x20400c71
  401488:	00401185 	.word	0x00401185

0040148c <Button_2_Handler>:
static void Button_2_Handler(uint32_t id, uint32_t mask){
  40148c:	b510      	push	{r4, lr}
  40148e:	b0c0      	sub	sp, #256	; 0x100
	minuto_alarme = 1;
  401490:	2201      	movs	r2, #1
  401492:	4b07      	ldr	r3, [pc, #28]	; (4014b0 <Button_2_Handler+0x24>)
  401494:	601a      	str	r2, [r3, #0]
	sprintf(stringLCD, "Al%02d:%02d", minuto_alarme, 0);
  401496:	2300      	movs	r3, #0
  401498:	4906      	ldr	r1, [pc, #24]	; (4014b4 <Button_2_Handler+0x28>)
  40149a:	4668      	mov	r0, sp
  40149c:	4c06      	ldr	r4, [pc, #24]	; (4014b8 <Button_2_Handler+0x2c>)
  40149e:	47a0      	blx	r4
	gfx_mono_draw_string(stringLCD, 0, 0, &sysfont);
  4014a0:	4b06      	ldr	r3, [pc, #24]	; (4014bc <Button_2_Handler+0x30>)
  4014a2:	2200      	movs	r2, #0
  4014a4:	4611      	mov	r1, r2
  4014a6:	4668      	mov	r0, sp
  4014a8:	4c05      	ldr	r4, [pc, #20]	; (4014c0 <Button_2_Handler+0x34>)
  4014aa:	47a0      	blx	r4
}
  4014ac:	b040      	add	sp, #256	; 0x100
  4014ae:	bd10      	pop	{r4, pc}
  4014b0:	20400c7c 	.word	0x20400c7c
  4014b4:	004073e0 	.word	0x004073e0
  4014b8:	00401b29 	.word	0x00401b29
  4014bc:	2040000c 	.word	0x2040000c
  4014c0:	00400781 	.word	0x00400781

004014c4 <Button_3_Handler>:
static void Button_3_Handler(uint32_t id, uint32_t mask){
  4014c4:	b510      	push	{r4, lr}
  4014c6:	b0c0      	sub	sp, #256	; 0x100
	minuto_alarme = 2;
  4014c8:	2202      	movs	r2, #2
  4014ca:	4b07      	ldr	r3, [pc, #28]	; (4014e8 <Button_3_Handler+0x24>)
  4014cc:	601a      	str	r2, [r3, #0]
	sprintf(stringLCD, "Al%02d:%02d", minuto_alarme, 0);
  4014ce:	2300      	movs	r3, #0
  4014d0:	4906      	ldr	r1, [pc, #24]	; (4014ec <Button_3_Handler+0x28>)
  4014d2:	4668      	mov	r0, sp
  4014d4:	4c06      	ldr	r4, [pc, #24]	; (4014f0 <Button_3_Handler+0x2c>)
  4014d6:	47a0      	blx	r4
	gfx_mono_draw_string(stringLCD, 0, 0, &sysfont);
  4014d8:	4b06      	ldr	r3, [pc, #24]	; (4014f4 <Button_3_Handler+0x30>)
  4014da:	2200      	movs	r2, #0
  4014dc:	4611      	mov	r1, r2
  4014de:	4668      	mov	r0, sp
  4014e0:	4c05      	ldr	r4, [pc, #20]	; (4014f8 <Button_3_Handler+0x34>)
  4014e2:	47a0      	blx	r4
}
  4014e4:	b040      	add	sp, #256	; 0x100
  4014e6:	bd10      	pop	{r4, pc}
  4014e8:	20400c7c 	.word	0x20400c7c
  4014ec:	004073e0 	.word	0x004073e0
  4014f0:	00401b29 	.word	0x00401b29
  4014f4:	2040000c 	.word	0x2040000c
  4014f8:	00400781 	.word	0x00400781

004014fc <pin_toggle>:
}

/**
*  Toggle pin controlado pelo PIO (out)
*/
void pin_toggle(Pio *pio, uint32_t mask){
  4014fc:	b538      	push	{r3, r4, r5, lr}
  4014fe:	4604      	mov	r4, r0
  401500:	460d      	mov	r5, r1
	if(pio_get_output_data_status(pio, mask))
  401502:	4b06      	ldr	r3, [pc, #24]	; (40151c <pin_toggle+0x20>)
  401504:	4798      	blx	r3
  401506:	b920      	cbnz	r0, 401512 <pin_toggle+0x16>
	pio_clear(pio, mask);
	else
	pio_set(pio,mask);
  401508:	4629      	mov	r1, r5
  40150a:	4620      	mov	r0, r4
  40150c:	4b04      	ldr	r3, [pc, #16]	; (401520 <pin_toggle+0x24>)
  40150e:	4798      	blx	r3
  401510:	bd38      	pop	{r3, r4, r5, pc}
	pio_clear(pio, mask);
  401512:	4629      	mov	r1, r5
  401514:	4620      	mov	r0, r4
  401516:	4b03      	ldr	r3, [pc, #12]	; (401524 <pin_toggle+0x28>)
  401518:	4798      	blx	r3
  40151a:	bd38      	pop	{r3, r4, r5, pc}
  40151c:	00400ea1 	.word	0x00400ea1
  401520:	00400cfd 	.word	0x00400cfd
  401524:	00400d01 	.word	0x00400d01

00401528 <TC1_Handler>:
void TC1_Handler(void){
  401528:	b500      	push	{lr}
  40152a:	b083      	sub	sp, #12
	ul_dummy = tc_get_status(TC0, 1);
  40152c:	2101      	movs	r1, #1
  40152e:	4808      	ldr	r0, [pc, #32]	; (401550 <TC1_Handler+0x28>)
  401530:	4b08      	ldr	r3, [pc, #32]	; (401554 <TC1_Handler+0x2c>)
  401532:	4798      	blx	r3
  401534:	9001      	str	r0, [sp, #4]
	UNUSED(ul_dummy);
  401536:	9b01      	ldr	r3, [sp, #4]
	if(flag_led0)
  401538:	4b07      	ldr	r3, [pc, #28]	; (401558 <TC1_Handler+0x30>)
  40153a:	781b      	ldrb	r3, [r3, #0]
  40153c:	b913      	cbnz	r3, 401544 <TC1_Handler+0x1c>
}
  40153e:	b003      	add	sp, #12
  401540:	f85d fb04 	ldr.w	pc, [sp], #4
		pin_toggle(LED_PIO, LED_PIN_MASK);
  401544:	2101      	movs	r1, #1
  401546:	4805      	ldr	r0, [pc, #20]	; (40155c <TC1_Handler+0x34>)
  401548:	4b05      	ldr	r3, [pc, #20]	; (401560 <TC1_Handler+0x38>)
  40154a:	4798      	blx	r3
}
  40154c:	e7f7      	b.n	40153e <TC1_Handler+0x16>
  40154e:	bf00      	nop
  401550:	4000c000 	.word	0x4000c000
  401554:	00400529 	.word	0x00400529
  401558:	20400c71 	.word	0x20400c71
  40155c:	400e0e00 	.word	0x400e0e00
  401560:	004014fd 	.word	0x004014fd

00401564 <RTC_init>:
}

/**
* Configura o RTC para funcionar com interrupcao de alarme
*/
void RTC_init(){
  401564:	b570      	push	{r4, r5, r6, lr}
  401566:	b082      	sub	sp, #8
	/* Configura o PMC */
	pmc_enable_periph_clk(ID_RTC);
  401568:	2002      	movs	r0, #2
  40156a:	4b12      	ldr	r3, [pc, #72]	; (4015b4 <RTC_init+0x50>)
  40156c:	4798      	blx	r3

	/* Default RTC configuration, 24-hour mode */
	rtc_set_hour_mode(RTC, 0);
  40156e:	4d12      	ldr	r5, [pc, #72]	; (4015b8 <RTC_init+0x54>)
  401570:	2100      	movs	r1, #0
  401572:	4628      	mov	r0, r5
  401574:	4b11      	ldr	r3, [pc, #68]	; (4015bc <RTC_init+0x58>)
  401576:	4798      	blx	r3

	/* Configura data e hora manualmente */
	rtc_set_date(RTC, YEAR, MOUNTH, DAY, WEEK);
  401578:	2400      	movs	r4, #0
  40157a:	9400      	str	r4, [sp, #0]
  40157c:	4623      	mov	r3, r4
  40157e:	4622      	mov	r2, r4
  401580:	4621      	mov	r1, r4
  401582:	4628      	mov	r0, r5
  401584:	4e0e      	ldr	r6, [pc, #56]	; (4015c0 <RTC_init+0x5c>)
  401586:	47b0      	blx	r6
	rtc_set_time(RTC, HOUR, MINUTE, SECOND);
  401588:	4623      	mov	r3, r4
  40158a:	4622      	mov	r2, r4
  40158c:	4621      	mov	r1, r4
  40158e:	4628      	mov	r0, r5
  401590:	4e0c      	ldr	r6, [pc, #48]	; (4015c4 <RTC_init+0x60>)
  401592:	47b0      	blx	r6

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401594:	4b0c      	ldr	r3, [pc, #48]	; (4015c8 <RTC_init+0x64>)
  401596:	2204      	movs	r2, #4
  401598:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  40159c:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4015a0:	f883 4302 	strb.w	r4, [r3, #770]	; 0x302
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4015a4:	601a      	str	r2, [r3, #0]
	NVIC_ClearPendingIRQ(RTC_IRQn);
	NVIC_SetPriority(RTC_IRQn, 0);
	NVIC_EnableIRQ(RTC_IRQn);

	/* Ativa interrupcao via alarme */
	rtc_enable_interrupt(RTC,  RTC_IER_ALREN|RTC_IER_SECEN);
  4015a6:	2106      	movs	r1, #6
  4015a8:	4628      	mov	r0, r5
  4015aa:	4b08      	ldr	r3, [pc, #32]	; (4015cc <RTC_init+0x68>)
  4015ac:	4798      	blx	r3

}
  4015ae:	b002      	add	sp, #8
  4015b0:	bd70      	pop	{r4, r5, r6, pc}
  4015b2:	bf00      	nop
  4015b4:	00401131 	.word	0x00401131
  4015b8:	400e1860 	.word	0x400e1860
  4015bc:	004001ad 	.word	0x004001ad
  4015c0:	004002ed 	.word	0x004002ed
  4015c4:	004001c9 	.word	0x004001c9
  4015c8:	e000e100 	.word	0xe000e100
  4015cc:	004001c3 	.word	0x004001c3

004015d0 <TC_init>:

/**
* Configura TimerCounter (TC) para gerar uma interrupcao no canal (ID_TC e TC_CHANNEL)
* na taxa de especificada em freq.
*/
void TC_init(Tc * TC, int ID_TC, int TC_CHANNEL, int freq){
  4015d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4015d4:	b085      	sub	sp, #20
  4015d6:	4606      	mov	r6, r0
  4015d8:	460c      	mov	r4, r1
  4015da:	4617      	mov	r7, r2
  4015dc:	4698      	mov	r8, r3
	uint32_t ul_tcclks;
	uint32_t ul_sysclk = sysclk_get_cpu_hz();

	uint32_t channel = 1;

	pmc_enable_periph_clk(ID_TC);
  4015de:	4608      	mov	r0, r1
  4015e0:	4b18      	ldr	r3, [pc, #96]	; (401644 <TC_init+0x74>)
  4015e2:	4798      	blx	r3

	/** Configura o TC para operar em  4Mhz e interrupco no RC compare */
	tc_find_mck_divisor(freq, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  4015e4:	4d18      	ldr	r5, [pc, #96]	; (401648 <TC_init+0x78>)
  4015e6:	9500      	str	r5, [sp, #0]
  4015e8:	ab02      	add	r3, sp, #8
  4015ea:	aa03      	add	r2, sp, #12
  4015ec:	4629      	mov	r1, r5
  4015ee:	4640      	mov	r0, r8
  4015f0:	f8df 906c 	ldr.w	r9, [pc, #108]	; 401660 <TC_init+0x90>
  4015f4:	47c8      	blx	r9
	tc_init(TC, TC_CHANNEL, ul_tcclks | TC_CMR_CPCTRG);
  4015f6:	9a02      	ldr	r2, [sp, #8]
  4015f8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  4015fc:	4639      	mov	r1, r7
  4015fe:	4630      	mov	r0, r6
  401600:	4b12      	ldr	r3, [pc, #72]	; (40164c <TC_init+0x7c>)
  401602:	4798      	blx	r3
	tc_write_rc(TC, TC_CHANNEL, (ul_sysclk / ul_div) / freq);
  401604:	9a03      	ldr	r2, [sp, #12]
  401606:	fbb5 f2f2 	udiv	r2, r5, r2
  40160a:	fbb2 f2f8 	udiv	r2, r2, r8
  40160e:	4639      	mov	r1, r7
  401610:	4630      	mov	r0, r6
  401612:	4b0f      	ldr	r3, [pc, #60]	; (401650 <TC_init+0x80>)
  401614:	4798      	blx	r3
  401616:	b263      	sxtb	r3, r4
  401618:	095b      	lsrs	r3, r3, #5
  40161a:	f004 041f 	and.w	r4, r4, #31
  40161e:	2201      	movs	r2, #1
  401620:	fa02 f404 	lsl.w	r4, r2, r4
  401624:	4a0b      	ldr	r2, [pc, #44]	; (401654 <TC_init+0x84>)
  401626:	f842 4023 	str.w	r4, [r2, r3, lsl #2]

	/* Configura e ativa interrupco no TC canal 0 */
	/* Interrupo no C */
	NVIC_EnableIRQ((IRQn_Type) ID_TC);
	tc_enable_interrupt(TC, TC_CHANNEL, TC_IER_CPCS);
  40162a:	2210      	movs	r2, #16
  40162c:	4639      	mov	r1, r7
  40162e:	4630      	mov	r0, r6
  401630:	4b09      	ldr	r3, [pc, #36]	; (401658 <TC_init+0x88>)
  401632:	4798      	blx	r3

	/* Inicializa o canal 0 do TC */
	tc_start(TC, TC_CHANNEL);
  401634:	4639      	mov	r1, r7
  401636:	4630      	mov	r0, r6
  401638:	4b08      	ldr	r3, [pc, #32]	; (40165c <TC_init+0x8c>)
  40163a:	4798      	blx	r3
}
  40163c:	b005      	add	sp, #20
  40163e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401642:	bf00      	nop
  401644:	00401131 	.word	0x00401131
  401648:	11e1a300 	.word	0x11e1a300
  40164c:	004004f7 	.word	0x004004f7
  401650:	00400519 	.word	0x00400519
  401654:	e000e100 	.word	0xe000e100
  401658:	00400521 	.word	0x00400521
  40165c:	00400511 	.word	0x00400511
  401660:	00400531 	.word	0x00400531

00401664 <LED_init>:


/**
* @Brief Inicializa o pino do LED
*/
void LED_init(int estado){
  401664:	b510      	push	{r4, lr}
  401666:	b082      	sub	sp, #8
  401668:	4604      	mov	r4, r0
	pmc_enable_periph_clk(LED_PIO_ID);
  40166a:	200a      	movs	r0, #10
  40166c:	4b05      	ldr	r3, [pc, #20]	; (401684 <LED_init+0x20>)
  40166e:	4798      	blx	r3
	pio_set_output(LED_PIO, LED_PIN_MASK, estado, 0, 0 );
  401670:	2300      	movs	r3, #0
  401672:	9300      	str	r3, [sp, #0]
  401674:	4622      	mov	r2, r4
  401676:	2101      	movs	r1, #1
  401678:	4803      	ldr	r0, [pc, #12]	; (401688 <LED_init+0x24>)
  40167a:	4c04      	ldr	r4, [pc, #16]	; (40168c <LED_init+0x28>)
  40167c:	47a0      	blx	r4
};
  40167e:	b002      	add	sp, #8
  401680:	bd10      	pop	{r4, pc}
  401682:	bf00      	nop
  401684:	00401131 	.word	0x00401131
  401688:	400e0e00 	.word	0x400e0e00
  40168c:	00400de7 	.word	0x00400de7

00401690 <BUT_init>:

void BUT_init(void){
  401690:	b510      	push	{r4, lr}
  401692:	b082      	sub	sp, #8
	pmc_enable_periph_clk(BUT_PIO_ID);
  401694:	200a      	movs	r0, #10
  401696:	4b10      	ldr	r3, [pc, #64]	; (4016d8 <BUT_init+0x48>)
  401698:	4798      	blx	r3
	pio_set_input(BUT_PIO, BUT_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  40169a:	4c10      	ldr	r4, [pc, #64]	; (4016dc <BUT_init+0x4c>)
  40169c:	2209      	movs	r2, #9
  40169e:	f44f 6100 	mov.w	r1, #2048	; 0x800
  4016a2:	4620      	mov	r0, r4
  4016a4:	4b0e      	ldr	r3, [pc, #56]	; (4016e0 <BUT_init+0x50>)
  4016a6:	4798      	blx	r3

	pio_enable_interrupt(BUT_PIO, BUT_PIN_MASK);
  4016a8:	f44f 6100 	mov.w	r1, #2048	; 0x800
  4016ac:	4620      	mov	r0, r4
  4016ae:	4b0d      	ldr	r3, [pc, #52]	; (4016e4 <BUT_init+0x54>)
  4016b0:	4798      	blx	r3
	pio_handler_set(BUT_PIO, BUT_PIO_ID, BUT_PIN_MASK, PIO_IT_FALL_EDGE, Button_0_Handler);
  4016b2:	4b0d      	ldr	r3, [pc, #52]	; (4016e8 <BUT_init+0x58>)
  4016b4:	9300      	str	r3, [sp, #0]
  4016b6:	2350      	movs	r3, #80	; 0x50
  4016b8:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4016bc:	210a      	movs	r1, #10
  4016be:	4620      	mov	r0, r4
  4016c0:	4c0a      	ldr	r4, [pc, #40]	; (4016ec <BUT_init+0x5c>)
  4016c2:	47a0      	blx	r4
  4016c4:	4b0a      	ldr	r3, [pc, #40]	; (4016f0 <BUT_init+0x60>)
  4016c6:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4016ca:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4016cc:	2220      	movs	r2, #32
  4016ce:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a

	NVIC_EnableIRQ(BUT_PIO_ID);
	NVIC_SetPriority(BUT_PIO_ID, 1);
};
  4016d2:	b002      	add	sp, #8
  4016d4:	bd10      	pop	{r4, pc}
  4016d6:	bf00      	nop
  4016d8:	00401131 	.word	0x00401131
  4016dc:	400e0e00 	.word	0x400e0e00
  4016e0:	00400db1 	.word	0x00400db1
  4016e4:	00400edf 	.word	0x00400edf
  4016e8:	00401475 	.word	0x00401475
  4016ec:	00400f3d 	.word	0x00400f3d
  4016f0:	e000e100 	.word	0xe000e100

004016f4 <BUT_1_init>:

void BUT_1_init(void){
  4016f4:	b510      	push	{r4, lr}
  4016f6:	b082      	sub	sp, #8
	pmc_enable_periph_clk(BUT_1_PIO_ID);
  4016f8:	2010      	movs	r0, #16
  4016fa:	4b10      	ldr	r3, [pc, #64]	; (40173c <BUT_1_init+0x48>)
  4016fc:	4798      	blx	r3
	pio_set_input(BUT_1_PIO, BUT_1_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  4016fe:	4c10      	ldr	r4, [pc, #64]	; (401740 <BUT_1_init+0x4c>)
  401700:	2209      	movs	r2, #9
  401702:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401706:	4620      	mov	r0, r4
  401708:	4b0e      	ldr	r3, [pc, #56]	; (401744 <BUT_1_init+0x50>)
  40170a:	4798      	blx	r3

	pio_enable_interrupt(BUT_1_PIO, BUT_1_PIN_MASK);
  40170c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401710:	4620      	mov	r0, r4
  401712:	4b0d      	ldr	r3, [pc, #52]	; (401748 <BUT_1_init+0x54>)
  401714:	4798      	blx	r3
	pio_handler_set(BUT_1_PIO, BUT_1_PIO_ID, BUT_1_PIN_MASK, PIO_IT_FALL_EDGE, Button_1_Handler);
  401716:	4b0d      	ldr	r3, [pc, #52]	; (40174c <BUT_1_init+0x58>)
  401718:	9300      	str	r3, [sp, #0]
  40171a:	2350      	movs	r3, #80	; 0x50
  40171c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401720:	2110      	movs	r1, #16
  401722:	4620      	mov	r0, r4
  401724:	4c0a      	ldr	r4, [pc, #40]	; (401750 <BUT_1_init+0x5c>)
  401726:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401728:	4b0a      	ldr	r3, [pc, #40]	; (401754 <BUT_1_init+0x60>)
  40172a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  40172e:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401730:	2220      	movs	r2, #32
  401732:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310

	NVIC_EnableIRQ(BUT_1_PIO_ID);
	NVIC_SetPriority(BUT_1_PIO_ID, 1);
};
  401736:	b002      	add	sp, #8
  401738:	bd10      	pop	{r4, pc}
  40173a:	bf00      	nop
  40173c:	00401131 	.word	0x00401131
  401740:	400e1400 	.word	0x400e1400
  401744:	00400db1 	.word	0x00400db1
  401748:	00400edf 	.word	0x00400edf
  40174c:	00401971 	.word	0x00401971
  401750:	00400f3d 	.word	0x00400f3d
  401754:	e000e100 	.word	0xe000e100

00401758 <BUT_2_init>:

void BUT_2_init(void){
  401758:	b510      	push	{r4, lr}
  40175a:	b082      	sub	sp, #8
	/* config. pino botao em modo de entrada */
	pmc_enable_periph_clk(BUT_2_PIO_ID);
  40175c:	200c      	movs	r0, #12
  40175e:	4b10      	ldr	r3, [pc, #64]	; (4017a0 <BUT_2_init+0x48>)
  401760:	4798      	blx	r3
	pio_set_input(BUT_2_PIO, BUT_2_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401762:	4c10      	ldr	r4, [pc, #64]	; (4017a4 <BUT_2_init+0x4c>)
  401764:	2209      	movs	r2, #9
  401766:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  40176a:	4620      	mov	r0, r4
  40176c:	4b0e      	ldr	r3, [pc, #56]	; (4017a8 <BUT_2_init+0x50>)
  40176e:	4798      	blx	r3

	pio_enable_interrupt(BUT_2_PIO, BUT_2_PIN_MASK);
  401770:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  401774:	4620      	mov	r0, r4
  401776:	4b0d      	ldr	r3, [pc, #52]	; (4017ac <BUT_2_init+0x54>)
  401778:	4798      	blx	r3
	pio_handler_set(BUT_2_PIO, BUT_2_PIO_ID, BUT_2_PIN_MASK, PIO_IT_FALL_EDGE, Button_2_Handler);
  40177a:	4b0d      	ldr	r3, [pc, #52]	; (4017b0 <BUT_2_init+0x58>)
  40177c:	9300      	str	r3, [sp, #0]
  40177e:	2350      	movs	r3, #80	; 0x50
  401780:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  401784:	210c      	movs	r1, #12
  401786:	4620      	mov	r0, r4
  401788:	4c0a      	ldr	r4, [pc, #40]	; (4017b4 <BUT_2_init+0x5c>)
  40178a:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40178c:	4b0a      	ldr	r3, [pc, #40]	; (4017b8 <BUT_2_init+0x60>)
  40178e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  401792:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401794:	2220      	movs	r2, #32
  401796:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c

	NVIC_EnableIRQ(BUT_2_PIO_ID);
	NVIC_SetPriority(BUT_2_PIO_ID, 1);
};
  40179a:	b002      	add	sp, #8
  40179c:	bd10      	pop	{r4, pc}
  40179e:	bf00      	nop
  4017a0:	00401131 	.word	0x00401131
  4017a4:	400e1200 	.word	0x400e1200
  4017a8:	00400db1 	.word	0x00400db1
  4017ac:	00400edf 	.word	0x00400edf
  4017b0:	0040148d 	.word	0x0040148d
  4017b4:	00400f3d 	.word	0x00400f3d
  4017b8:	e000e100 	.word	0xe000e100

004017bc <BUT_3_init>:

void BUT_3_init(void){
  4017bc:	b510      	push	{r4, lr}
  4017be:	b082      	sub	sp, #8

	pmc_enable_periph_clk(BUT_3_PIO_ID);
  4017c0:	200a      	movs	r0, #10
  4017c2:	4b10      	ldr	r3, [pc, #64]	; (401804 <BUT_3_init+0x48>)
  4017c4:	4798      	blx	r3
	pio_set_input(BUT_3_PIO, BUT_3_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  4017c6:	4c10      	ldr	r4, [pc, #64]	; (401808 <BUT_3_init+0x4c>)
  4017c8:	2209      	movs	r2, #9
  4017ca:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4017ce:	4620      	mov	r0, r4
  4017d0:	4b0e      	ldr	r3, [pc, #56]	; (40180c <BUT_3_init+0x50>)
  4017d2:	4798      	blx	r3

	pio_enable_interrupt(BUT_3_PIO, BUT_3_PIN_MASK);
  4017d4:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4017d8:	4620      	mov	r0, r4
  4017da:	4b0d      	ldr	r3, [pc, #52]	; (401810 <BUT_3_init+0x54>)
  4017dc:	4798      	blx	r3
	pio_handler_set(BUT_3_PIO, BUT_3_PIO_ID, BUT_3_PIN_MASK, PIO_IT_FALL_EDGE, Button_3_Handler);
  4017de:	4b0d      	ldr	r3, [pc, #52]	; (401814 <BUT_3_init+0x58>)
  4017e0:	9300      	str	r3, [sp, #0]
  4017e2:	2350      	movs	r3, #80	; 0x50
  4017e4:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4017e8:	210a      	movs	r1, #10
  4017ea:	4620      	mov	r0, r4
  4017ec:	4c0a      	ldr	r4, [pc, #40]	; (401818 <BUT_3_init+0x5c>)
  4017ee:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4017f0:	4b0a      	ldr	r3, [pc, #40]	; (40181c <BUT_3_init+0x60>)
  4017f2:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4017f6:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4017f8:	2220      	movs	r2, #32
  4017fa:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a

	NVIC_EnableIRQ(BUT_3_PIO_ID);
	NVIC_SetPriority(BUT_3_PIO_ID, 1);
};
  4017fe:	b002      	add	sp, #8
  401800:	bd10      	pop	{r4, pc}
  401802:	bf00      	nop
  401804:	00401131 	.word	0x00401131
  401808:	400e0e00 	.word	0x400e0e00
  40180c:	00400db1 	.word	0x00400db1
  401810:	00400edf 	.word	0x00400edf
  401814:	004014c5 	.word	0x004014c5
  401818:	00400f3d 	.word	0x00400f3d
  40181c:	e000e100 	.word	0xe000e100

00401820 <print>:

void print(int m, int s){
  401820:	b510      	push	{r4, lr}
  401822:	b0c0      	sub	sp, #256	; 0x100
	
	uint8_t stringLCD[256];
	sprintf(stringLCD, "T:%02d:%02d", m, s);
  401824:	460b      	mov	r3, r1
  401826:	4602      	mov	r2, r0
  401828:	4905      	ldr	r1, [pc, #20]	; (401840 <print+0x20>)
  40182a:	4668      	mov	r0, sp
  40182c:	4c05      	ldr	r4, [pc, #20]	; (401844 <print+0x24>)
  40182e:	47a0      	blx	r4
	gfx_mono_draw_string(stringLCD, 0, 0, &sysfont);
  401830:	4b05      	ldr	r3, [pc, #20]	; (401848 <print+0x28>)
  401832:	2200      	movs	r2, #0
  401834:	4611      	mov	r1, r2
  401836:	4668      	mov	r0, sp
  401838:	4c04      	ldr	r4, [pc, #16]	; (40184c <print+0x2c>)
  40183a:	47a0      	blx	r4
	
}
  40183c:	b040      	add	sp, #256	; 0x100
  40183e:	bd10      	pop	{r4, pc}
  401840:	004073ec 	.word	0x004073ec
  401844:	00401b29 	.word	0x00401b29
  401848:	2040000c 	.word	0x2040000c
  40184c:	00400781 	.word	0x00400781

00401850 <RTC_Handler>:
{
  401850:	b530      	push	{r4, r5, lr}
  401852:	b085      	sub	sp, #20
	uint32_t ul_status = rtc_get_status(RTC);
  401854:	4836      	ldr	r0, [pc, #216]	; (401930 <RTC_Handler+0xe0>)
  401856:	4b37      	ldr	r3, [pc, #220]	; (401934 <RTC_Handler+0xe4>)
  401858:	4798      	blx	r3
  40185a:	4604      	mov	r4, r0
	if ((ul_status & RTC_SR_SEC) == RTC_SR_SEC) {
  40185c:	f010 0f04 	tst.w	r0, #4
  401860:	d112      	bne.n	401888 <RTC_Handler+0x38>
	if ((ul_status & RTC_SR_ALARM) == RTC_SR_ALARM) {
  401862:	f014 0f02 	tst.w	r4, #2
  401866:	d14f      	bne.n	401908 <RTC_Handler+0xb8>
	rtc_clear_status(RTC, RTC_SCCR_ACKCLR);
  401868:	4d31      	ldr	r5, [pc, #196]	; (401930 <RTC_Handler+0xe0>)
  40186a:	2101      	movs	r1, #1
  40186c:	4628      	mov	r0, r5
  40186e:	4c32      	ldr	r4, [pc, #200]	; (401938 <RTC_Handler+0xe8>)
  401870:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TIMCLR);
  401872:	2108      	movs	r1, #8
  401874:	4628      	mov	r0, r5
  401876:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_CALCLR);
  401878:	2110      	movs	r1, #16
  40187a:	4628      	mov	r0, r5
  40187c:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TDERRCLR);	
  40187e:	2120      	movs	r1, #32
  401880:	4628      	mov	r0, r5
  401882:	47a0      	blx	r4
}
  401884:	b005      	add	sp, #20
  401886:	bd30      	pop	{r4, r5, pc}
		rtc_clear_status(RTC, RTC_SCCR_SECCLR);
  401888:	2104      	movs	r1, #4
  40188a:	4829      	ldr	r0, [pc, #164]	; (401930 <RTC_Handler+0xe0>)
  40188c:	4b2a      	ldr	r3, [pc, #168]	; (401938 <RTC_Handler+0xe8>)
  40188e:	4798      	blx	r3
		int y = pio_get(SEN_PIO, PIO_INPUT, SEN_PIN_MASK);
  401890:	2210      	movs	r2, #16
  401892:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401896:	4829      	ldr	r0, [pc, #164]	; (40193c <RTC_Handler+0xec>)
  401898:	4b29      	ldr	r3, [pc, #164]	; (401940 <RTC_Handler+0xf0>)
  40189a:	4798      	blx	r3
		if(!y){
  40189c:	b9a0      	cbnz	r0, 4018c8 <RTC_Handler+0x78>
			seg++;
  40189e:	4a29      	ldr	r2, [pc, #164]	; (401944 <RTC_Handler+0xf4>)
  4018a0:	6813      	ldr	r3, [r2, #0]
  4018a2:	3301      	adds	r3, #1
  4018a4:	6013      	str	r3, [r2, #0]
			if(seg == 60){
  4018a6:	2b3c      	cmp	r3, #60	; 0x3c
  4018a8:	d006      	beq.n	4018b8 <RTC_Handler+0x68>
			print(min1,seg);
  4018aa:	4b26      	ldr	r3, [pc, #152]	; (401944 <RTC_Handler+0xf4>)
  4018ac:	6819      	ldr	r1, [r3, #0]
  4018ae:	4b26      	ldr	r3, [pc, #152]	; (401948 <RTC_Handler+0xf8>)
  4018b0:	6818      	ldr	r0, [r3, #0]
  4018b2:	4b26      	ldr	r3, [pc, #152]	; (40194c <RTC_Handler+0xfc>)
  4018b4:	4798      	blx	r3
  4018b6:	e7d4      	b.n	401862 <RTC_Handler+0x12>
				min1++;
  4018b8:	4a23      	ldr	r2, [pc, #140]	; (401948 <RTC_Handler+0xf8>)
  4018ba:	6813      	ldr	r3, [r2, #0]
  4018bc:	3301      	adds	r3, #1
  4018be:	6013      	str	r3, [r2, #0]
				seg = 0;
  4018c0:	2200      	movs	r2, #0
  4018c2:	4b20      	ldr	r3, [pc, #128]	; (401944 <RTC_Handler+0xf4>)
  4018c4:	601a      	str	r2, [r3, #0]
  4018c6:	e7f0      	b.n	4018aa <RTC_Handler+0x5a>
			count_alarme_s += 1;
  4018c8:	4a21      	ldr	r2, [pc, #132]	; (401950 <RTC_Handler+0x100>)
  4018ca:	6813      	ldr	r3, [r2, #0]
  4018cc:	3301      	adds	r3, #1
  4018ce:	6013      	str	r3, [r2, #0]
			if(count_alarme_s == 60){
  4018d0:	2b3c      	cmp	r3, #60	; 0x3c
  4018d2:	d011      	beq.n	4018f8 <RTC_Handler+0xa8>
			rtc_set_time_alarm(RTC, 0, hora, 1, minuto_alarme+count_alarme_m, 1, count_alarme_s);
  4018d4:	4b1f      	ldr	r3, [pc, #124]	; (401954 <RTC_Handler+0x104>)
  4018d6:	681a      	ldr	r2, [r3, #0]
  4018d8:	4b1d      	ldr	r3, [pc, #116]	; (401950 <RTC_Handler+0x100>)
  4018da:	681b      	ldr	r3, [r3, #0]
  4018dc:	9302      	str	r3, [sp, #8]
  4018de:	2301      	movs	r3, #1
  4018e0:	9301      	str	r3, [sp, #4]
  4018e2:	491d      	ldr	r1, [pc, #116]	; (401958 <RTC_Handler+0x108>)
  4018e4:	6809      	ldr	r1, [r1, #0]
  4018e6:	481d      	ldr	r0, [pc, #116]	; (40195c <RTC_Handler+0x10c>)
  4018e8:	6800      	ldr	r0, [r0, #0]
  4018ea:	4401      	add	r1, r0
  4018ec:	9100      	str	r1, [sp, #0]
  4018ee:	2100      	movs	r1, #0
  4018f0:	480f      	ldr	r0, [pc, #60]	; (401930 <RTC_Handler+0xe0>)
  4018f2:	4d1b      	ldr	r5, [pc, #108]	; (401960 <RTC_Handler+0x110>)
  4018f4:	47a8      	blx	r5
  4018f6:	e7b4      	b.n	401862 <RTC_Handler+0x12>
				count_alarme_m += 1;
  4018f8:	4a18      	ldr	r2, [pc, #96]	; (40195c <RTC_Handler+0x10c>)
  4018fa:	6813      	ldr	r3, [r2, #0]
  4018fc:	3301      	adds	r3, #1
  4018fe:	6013      	str	r3, [r2, #0]
				count_alarme_s = 0;
  401900:	2200      	movs	r2, #0
  401902:	4b13      	ldr	r3, [pc, #76]	; (401950 <RTC_Handler+0x100>)
  401904:	601a      	str	r2, [r3, #0]
  401906:	e7e5      	b.n	4018d4 <RTC_Handler+0x84>
			rtc_clear_status(RTC, RTC_SCCR_ALRCLR);
  401908:	2102      	movs	r1, #2
  40190a:	4809      	ldr	r0, [pc, #36]	; (401930 <RTC_Handler+0xe0>)
  40190c:	4b0a      	ldr	r3, [pc, #40]	; (401938 <RTC_Handler+0xe8>)
  40190e:	4798      	blx	r3
			flag_led0 = !flag_led0;
  401910:	4a14      	ldr	r2, [pc, #80]	; (401964 <RTC_Handler+0x114>)
  401912:	7813      	ldrb	r3, [r2, #0]
  401914:	fab3 f383 	clz	r3, r3
  401918:	095b      	lsrs	r3, r3, #5
  40191a:	7013      	strb	r3, [r2, #0]
			if (flag_led0){
  40191c:	7813      	ldrb	r3, [r2, #0]
  40191e:	b91b      	cbnz	r3, 401928 <RTC_Handler+0xd8>
				pmc_disable_periph_clk(ID_TC1);
  401920:	2018      	movs	r0, #24
  401922:	4b11      	ldr	r3, [pc, #68]	; (401968 <RTC_Handler+0x118>)
  401924:	4798      	blx	r3
  401926:	e79f      	b.n	401868 <RTC_Handler+0x18>
				pmc_enable_periph_clk(ID_TC1);
  401928:	2018      	movs	r0, #24
  40192a:	4b10      	ldr	r3, [pc, #64]	; (40196c <RTC_Handler+0x11c>)
  40192c:	4798      	blx	r3
  40192e:	e79b      	b.n	401868 <RTC_Handler+0x18>
  401930:	400e1860 	.word	0x400e1860
  401934:	004003a5 	.word	0x004003a5
  401938:	004003a9 	.word	0x004003a9
  40193c:	400e0e00 	.word	0x400e0e00
  401940:	00400d05 	.word	0x00400d05
  401944:	20400c80 	.word	0x20400c80
  401948:	20400c78 	.word	0x20400c78
  40194c:	00401821 	.word	0x00401821
  401950:	20400c6c 	.word	0x20400c6c
  401954:	20400c74 	.word	0x20400c74
  401958:	20400c7c 	.word	0x20400c7c
  40195c:	20400c68 	.word	0x20400c68
  401960:	00400259 	.word	0x00400259
  401964:	20400c71 	.word	0x20400c71
  401968:	00401185 	.word	0x00401185
  40196c:	00401131 	.word	0x00401131

00401970 <Button_1_Handler>:
static void Button_1_Handler(uint32_t id, uint32_t mask){
  401970:	b508      	push	{r3, lr}
	if(!flag_but_1){
  401972:	4b0b      	ldr	r3, [pc, #44]	; (4019a0 <Button_1_Handler+0x30>)
  401974:	781b      	ldrb	r3, [r3, #0]
  401976:	b103      	cbz	r3, 40197a <Button_1_Handler+0xa>
  401978:	bd08      	pop	{r3, pc}
		seg = 0;
  40197a:	2000      	movs	r0, #0
  40197c:	4b09      	ldr	r3, [pc, #36]	; (4019a4 <Button_1_Handler+0x34>)
  40197e:	6018      	str	r0, [r3, #0]
		min1 = 0;
  401980:	4b09      	ldr	r3, [pc, #36]	; (4019a8 <Button_1_Handler+0x38>)
  401982:	6018      	str	r0, [r3, #0]
		count_alarme_m = 0;
  401984:	4b09      	ldr	r3, [pc, #36]	; (4019ac <Button_1_Handler+0x3c>)
  401986:	6018      	str	r0, [r3, #0]
		count_alarme_s = 0;
  401988:	4b09      	ldr	r3, [pc, #36]	; (4019b0 <Button_1_Handler+0x40>)
  40198a:	6018      	str	r0, [r3, #0]
		flag_but_1 =!flag_but_1;
  40198c:	4a04      	ldr	r2, [pc, #16]	; (4019a0 <Button_1_Handler+0x30>)
  40198e:	7813      	ldrb	r3, [r2, #0]
  401990:	fab3 f383 	clz	r3, r3
  401994:	095b      	lsrs	r3, r3, #5
  401996:	7013      	strb	r3, [r2, #0]
		print(min1,seg);
  401998:	4601      	mov	r1, r0
  40199a:	4b06      	ldr	r3, [pc, #24]	; (4019b4 <Button_1_Handler+0x44>)
  40199c:	4798      	blx	r3
}
  40199e:	e7eb      	b.n	401978 <Button_1_Handler+0x8>
  4019a0:	20400c70 	.word	0x20400c70
  4019a4:	20400c80 	.word	0x20400c80
  4019a8:	20400c78 	.word	0x20400c78
  4019ac:	20400c68 	.word	0x20400c68
  4019b0:	20400c6c 	.word	0x20400c6c
  4019b4:	00401821 	.word	0x00401821

004019b8 <main>:

int main (void)
{
  4019b8:	b508      	push	{r3, lr}
	board_init();
  4019ba:	4b11      	ldr	r3, [pc, #68]	; (401a00 <main+0x48>)
  4019bc:	4798      	blx	r3
	sysclk_init();
  4019be:	4b11      	ldr	r3, [pc, #68]	; (401a04 <main+0x4c>)
  4019c0:	4798      	blx	r3
	delay_init();
	gfx_mono_ssd1306_init();
  4019c2:	4b11      	ldr	r3, [pc, #68]	; (401a08 <main+0x50>)
  4019c4:	4798      	blx	r3

	/* Configura os bot?es */
	BUT_init();
  4019c6:	4b11      	ldr	r3, [pc, #68]	; (401a0c <main+0x54>)
  4019c8:	4798      	blx	r3
	BUT_1_init();
  4019ca:	4b11      	ldr	r3, [pc, #68]	; (401a10 <main+0x58>)
  4019cc:	4798      	blx	r3
	BUT_2_init();
  4019ce:	4b11      	ldr	r3, [pc, #68]	; (401a14 <main+0x5c>)
  4019d0:	4798      	blx	r3
	BUT_3_init();
  4019d2:	4b11      	ldr	r3, [pc, #68]	; (401a18 <main+0x60>)
  4019d4:	4798      	blx	r3
	
	/* Configura Leds */
	LED_init(1);
  4019d6:	2001      	movs	r0, #1
  4019d8:	4b10      	ldr	r3, [pc, #64]	; (401a1c <main+0x64>)
  4019da:	4798      	blx	r3
	
	/** Configura RTC */
	RTC_init();
  4019dc:	4b10      	ldr	r3, [pc, #64]	; (401a20 <main+0x68>)
  4019de:	4798      	blx	r3

	
	/** Configura timer TC0, canal 1 */
	TC_init(TC0, ID_TC1, 1, 4);
  4019e0:	2304      	movs	r3, #4
  4019e2:	2201      	movs	r2, #1
  4019e4:	2118      	movs	r1, #24
  4019e6:	480f      	ldr	r0, [pc, #60]	; (401a24 <main+0x6c>)
  4019e8:	4c0f      	ldr	r4, [pc, #60]	; (401a28 <main+0x70>)
  4019ea:	47a0      	blx	r4

	flag_led0 = 0;
  4019ec:	2300      	movs	r3, #0
  4019ee:	4a0f      	ldr	r2, [pc, #60]	; (401a2c <main+0x74>)
  4019f0:	7013      	strb	r3, [r2, #0]
	flag_but_1 = 0;
  4019f2:	4a0f      	ldr	r2, [pc, #60]	; (401a30 <main+0x78>)
  4019f4:	7013      	strb	r3, [r2, #0]
	flag_led_2 = 0;
  4019f6:	4a0f      	ldr	r2, [pc, #60]	; (401a34 <main+0x7c>)
  4019f8:	7013      	strb	r3, [r2, #0]
	flag_led_3 = 0;
  4019fa:	4a0f      	ldr	r2, [pc, #60]	; (401a38 <main+0x80>)
  4019fc:	7013      	strb	r3, [r2, #0]
  4019fe:	e7fe      	b.n	4019fe <main+0x46>
  401a00:	00400bbd 	.word	0x00400bbd
  401a04:	00400b4d 	.word	0x00400b4d
  401a08:	00400819 	.word	0x00400819
  401a0c:	00401691 	.word	0x00401691
  401a10:	004016f5 	.word	0x004016f5
  401a14:	00401759 	.word	0x00401759
  401a18:	004017bd 	.word	0x004017bd
  401a1c:	00401665 	.word	0x00401665
  401a20:	00401565 	.word	0x00401565
  401a24:	4000c000 	.word	0x4000c000
  401a28:	004015d1 	.word	0x004015d1
  401a2c:	20400c71 	.word	0x20400c71
  401a30:	20400c70 	.word	0x20400c70
  401a34:	20400c72 	.word	0x20400c72
  401a38:	20400c73 	.word	0x20400c73

00401a3c <__libc_init_array>:
  401a3c:	b570      	push	{r4, r5, r6, lr}
  401a3e:	4e0f      	ldr	r6, [pc, #60]	; (401a7c <__libc_init_array+0x40>)
  401a40:	4d0f      	ldr	r5, [pc, #60]	; (401a80 <__libc_init_array+0x44>)
  401a42:	1b76      	subs	r6, r6, r5
  401a44:	10b6      	asrs	r6, r6, #2
  401a46:	bf18      	it	ne
  401a48:	2400      	movne	r4, #0
  401a4a:	d005      	beq.n	401a58 <__libc_init_array+0x1c>
  401a4c:	3401      	adds	r4, #1
  401a4e:	f855 3b04 	ldr.w	r3, [r5], #4
  401a52:	4798      	blx	r3
  401a54:	42a6      	cmp	r6, r4
  401a56:	d1f9      	bne.n	401a4c <__libc_init_array+0x10>
  401a58:	4e0a      	ldr	r6, [pc, #40]	; (401a84 <__libc_init_array+0x48>)
  401a5a:	4d0b      	ldr	r5, [pc, #44]	; (401a88 <__libc_init_array+0x4c>)
  401a5c:	1b76      	subs	r6, r6, r5
  401a5e:	f005 fe0f 	bl	407680 <_init>
  401a62:	10b6      	asrs	r6, r6, #2
  401a64:	bf18      	it	ne
  401a66:	2400      	movne	r4, #0
  401a68:	d006      	beq.n	401a78 <__libc_init_array+0x3c>
  401a6a:	3401      	adds	r4, #1
  401a6c:	f855 3b04 	ldr.w	r3, [r5], #4
  401a70:	4798      	blx	r3
  401a72:	42a6      	cmp	r6, r4
  401a74:	d1f9      	bne.n	401a6a <__libc_init_array+0x2e>
  401a76:	bd70      	pop	{r4, r5, r6, pc}
  401a78:	bd70      	pop	{r4, r5, r6, pc}
  401a7a:	bf00      	nop
  401a7c:	0040768c 	.word	0x0040768c
  401a80:	0040768c 	.word	0x0040768c
  401a84:	00407694 	.word	0x00407694
  401a88:	0040768c 	.word	0x0040768c

00401a8c <memset>:
  401a8c:	b470      	push	{r4, r5, r6}
  401a8e:	0786      	lsls	r6, r0, #30
  401a90:	d046      	beq.n	401b20 <memset+0x94>
  401a92:	1e54      	subs	r4, r2, #1
  401a94:	2a00      	cmp	r2, #0
  401a96:	d041      	beq.n	401b1c <memset+0x90>
  401a98:	b2ca      	uxtb	r2, r1
  401a9a:	4603      	mov	r3, r0
  401a9c:	e002      	b.n	401aa4 <memset+0x18>
  401a9e:	f114 34ff 	adds.w	r4, r4, #4294967295
  401aa2:	d33b      	bcc.n	401b1c <memset+0x90>
  401aa4:	f803 2b01 	strb.w	r2, [r3], #1
  401aa8:	079d      	lsls	r5, r3, #30
  401aaa:	d1f8      	bne.n	401a9e <memset+0x12>
  401aac:	2c03      	cmp	r4, #3
  401aae:	d92e      	bls.n	401b0e <memset+0x82>
  401ab0:	b2cd      	uxtb	r5, r1
  401ab2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401ab6:	2c0f      	cmp	r4, #15
  401ab8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401abc:	d919      	bls.n	401af2 <memset+0x66>
  401abe:	f103 0210 	add.w	r2, r3, #16
  401ac2:	4626      	mov	r6, r4
  401ac4:	3e10      	subs	r6, #16
  401ac6:	2e0f      	cmp	r6, #15
  401ac8:	f842 5c10 	str.w	r5, [r2, #-16]
  401acc:	f842 5c0c 	str.w	r5, [r2, #-12]
  401ad0:	f842 5c08 	str.w	r5, [r2, #-8]
  401ad4:	f842 5c04 	str.w	r5, [r2, #-4]
  401ad8:	f102 0210 	add.w	r2, r2, #16
  401adc:	d8f2      	bhi.n	401ac4 <memset+0x38>
  401ade:	f1a4 0210 	sub.w	r2, r4, #16
  401ae2:	f022 020f 	bic.w	r2, r2, #15
  401ae6:	f004 040f 	and.w	r4, r4, #15
  401aea:	3210      	adds	r2, #16
  401aec:	2c03      	cmp	r4, #3
  401aee:	4413      	add	r3, r2
  401af0:	d90d      	bls.n	401b0e <memset+0x82>
  401af2:	461e      	mov	r6, r3
  401af4:	4622      	mov	r2, r4
  401af6:	3a04      	subs	r2, #4
  401af8:	2a03      	cmp	r2, #3
  401afa:	f846 5b04 	str.w	r5, [r6], #4
  401afe:	d8fa      	bhi.n	401af6 <memset+0x6a>
  401b00:	1f22      	subs	r2, r4, #4
  401b02:	f022 0203 	bic.w	r2, r2, #3
  401b06:	3204      	adds	r2, #4
  401b08:	4413      	add	r3, r2
  401b0a:	f004 0403 	and.w	r4, r4, #3
  401b0e:	b12c      	cbz	r4, 401b1c <memset+0x90>
  401b10:	b2c9      	uxtb	r1, r1
  401b12:	441c      	add	r4, r3
  401b14:	f803 1b01 	strb.w	r1, [r3], #1
  401b18:	429c      	cmp	r4, r3
  401b1a:	d1fb      	bne.n	401b14 <memset+0x88>
  401b1c:	bc70      	pop	{r4, r5, r6}
  401b1e:	4770      	bx	lr
  401b20:	4614      	mov	r4, r2
  401b22:	4603      	mov	r3, r0
  401b24:	e7c2      	b.n	401aac <memset+0x20>
  401b26:	bf00      	nop

00401b28 <sprintf>:
  401b28:	b40e      	push	{r1, r2, r3}
  401b2a:	b5f0      	push	{r4, r5, r6, r7, lr}
  401b2c:	b09c      	sub	sp, #112	; 0x70
  401b2e:	ab21      	add	r3, sp, #132	; 0x84
  401b30:	490f      	ldr	r1, [pc, #60]	; (401b70 <sprintf+0x48>)
  401b32:	f853 2b04 	ldr.w	r2, [r3], #4
  401b36:	9301      	str	r3, [sp, #4]
  401b38:	4605      	mov	r5, r0
  401b3a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401b3e:	6808      	ldr	r0, [r1, #0]
  401b40:	9502      	str	r5, [sp, #8]
  401b42:	f44f 7702 	mov.w	r7, #520	; 0x208
  401b46:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401b4a:	a902      	add	r1, sp, #8
  401b4c:	9506      	str	r5, [sp, #24]
  401b4e:	f8ad 7014 	strh.w	r7, [sp, #20]
  401b52:	9404      	str	r4, [sp, #16]
  401b54:	9407      	str	r4, [sp, #28]
  401b56:	f8ad 6016 	strh.w	r6, [sp, #22]
  401b5a:	f000 f80b 	bl	401b74 <_svfprintf_r>
  401b5e:	9b02      	ldr	r3, [sp, #8]
  401b60:	2200      	movs	r2, #0
  401b62:	701a      	strb	r2, [r3, #0]
  401b64:	b01c      	add	sp, #112	; 0x70
  401b66:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401b6a:	b003      	add	sp, #12
  401b6c:	4770      	bx	lr
  401b6e:	bf00      	nop
  401b70:	20400020 	.word	0x20400020

00401b74 <_svfprintf_r>:
  401b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401b78:	b0c3      	sub	sp, #268	; 0x10c
  401b7a:	460c      	mov	r4, r1
  401b7c:	910b      	str	r1, [sp, #44]	; 0x2c
  401b7e:	4692      	mov	sl, r2
  401b80:	930f      	str	r3, [sp, #60]	; 0x3c
  401b82:	900c      	str	r0, [sp, #48]	; 0x30
  401b84:	f002 fa0c 	bl	403fa0 <_localeconv_r>
  401b88:	6803      	ldr	r3, [r0, #0]
  401b8a:	931a      	str	r3, [sp, #104]	; 0x68
  401b8c:	4618      	mov	r0, r3
  401b8e:	f003 f8d7 	bl	404d40 <strlen>
  401b92:	89a3      	ldrh	r3, [r4, #12]
  401b94:	9019      	str	r0, [sp, #100]	; 0x64
  401b96:	0619      	lsls	r1, r3, #24
  401b98:	d503      	bpl.n	401ba2 <_svfprintf_r+0x2e>
  401b9a:	6923      	ldr	r3, [r4, #16]
  401b9c:	2b00      	cmp	r3, #0
  401b9e:	f001 8003 	beq.w	402ba8 <_svfprintf_r+0x1034>
  401ba2:	2300      	movs	r3, #0
  401ba4:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401ba8:	9313      	str	r3, [sp, #76]	; 0x4c
  401baa:	9315      	str	r3, [sp, #84]	; 0x54
  401bac:	9314      	str	r3, [sp, #80]	; 0x50
  401bae:	9327      	str	r3, [sp, #156]	; 0x9c
  401bb0:	9326      	str	r3, [sp, #152]	; 0x98
  401bb2:	9318      	str	r3, [sp, #96]	; 0x60
  401bb4:	931b      	str	r3, [sp, #108]	; 0x6c
  401bb6:	9309      	str	r3, [sp, #36]	; 0x24
  401bb8:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401bbc:	46c8      	mov	r8, r9
  401bbe:	9316      	str	r3, [sp, #88]	; 0x58
  401bc0:	9317      	str	r3, [sp, #92]	; 0x5c
  401bc2:	f89a 3000 	ldrb.w	r3, [sl]
  401bc6:	4654      	mov	r4, sl
  401bc8:	b1e3      	cbz	r3, 401c04 <_svfprintf_r+0x90>
  401bca:	2b25      	cmp	r3, #37	; 0x25
  401bcc:	d102      	bne.n	401bd4 <_svfprintf_r+0x60>
  401bce:	e019      	b.n	401c04 <_svfprintf_r+0x90>
  401bd0:	2b25      	cmp	r3, #37	; 0x25
  401bd2:	d003      	beq.n	401bdc <_svfprintf_r+0x68>
  401bd4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401bd8:	2b00      	cmp	r3, #0
  401bda:	d1f9      	bne.n	401bd0 <_svfprintf_r+0x5c>
  401bdc:	eba4 050a 	sub.w	r5, r4, sl
  401be0:	b185      	cbz	r5, 401c04 <_svfprintf_r+0x90>
  401be2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401be4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401be6:	f8c8 a000 	str.w	sl, [r8]
  401bea:	3301      	adds	r3, #1
  401bec:	442a      	add	r2, r5
  401bee:	2b07      	cmp	r3, #7
  401bf0:	f8c8 5004 	str.w	r5, [r8, #4]
  401bf4:	9227      	str	r2, [sp, #156]	; 0x9c
  401bf6:	9326      	str	r3, [sp, #152]	; 0x98
  401bf8:	dc7f      	bgt.n	401cfa <_svfprintf_r+0x186>
  401bfa:	f108 0808 	add.w	r8, r8, #8
  401bfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401c00:	442b      	add	r3, r5
  401c02:	9309      	str	r3, [sp, #36]	; 0x24
  401c04:	7823      	ldrb	r3, [r4, #0]
  401c06:	2b00      	cmp	r3, #0
  401c08:	d07f      	beq.n	401d0a <_svfprintf_r+0x196>
  401c0a:	2300      	movs	r3, #0
  401c0c:	461a      	mov	r2, r3
  401c0e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401c12:	4619      	mov	r1, r3
  401c14:	930d      	str	r3, [sp, #52]	; 0x34
  401c16:	469b      	mov	fp, r3
  401c18:	f04f 30ff 	mov.w	r0, #4294967295
  401c1c:	7863      	ldrb	r3, [r4, #1]
  401c1e:	900a      	str	r0, [sp, #40]	; 0x28
  401c20:	f104 0a01 	add.w	sl, r4, #1
  401c24:	f10a 0a01 	add.w	sl, sl, #1
  401c28:	f1a3 0020 	sub.w	r0, r3, #32
  401c2c:	2858      	cmp	r0, #88	; 0x58
  401c2e:	f200 83c1 	bhi.w	4023b4 <_svfprintf_r+0x840>
  401c32:	e8df f010 	tbh	[pc, r0, lsl #1]
  401c36:	0238      	.short	0x0238
  401c38:	03bf03bf 	.word	0x03bf03bf
  401c3c:	03bf0240 	.word	0x03bf0240
  401c40:	03bf03bf 	.word	0x03bf03bf
  401c44:	03bf03bf 	.word	0x03bf03bf
  401c48:	024503bf 	.word	0x024503bf
  401c4c:	03bf0203 	.word	0x03bf0203
  401c50:	026b005d 	.word	0x026b005d
  401c54:	028603bf 	.word	0x028603bf
  401c58:	039d039d 	.word	0x039d039d
  401c5c:	039d039d 	.word	0x039d039d
  401c60:	039d039d 	.word	0x039d039d
  401c64:	039d039d 	.word	0x039d039d
  401c68:	03bf039d 	.word	0x03bf039d
  401c6c:	03bf03bf 	.word	0x03bf03bf
  401c70:	03bf03bf 	.word	0x03bf03bf
  401c74:	03bf03bf 	.word	0x03bf03bf
  401c78:	03bf03bf 	.word	0x03bf03bf
  401c7c:	033703bf 	.word	0x033703bf
  401c80:	03bf0357 	.word	0x03bf0357
  401c84:	03bf0357 	.word	0x03bf0357
  401c88:	03bf03bf 	.word	0x03bf03bf
  401c8c:	039803bf 	.word	0x039803bf
  401c90:	03bf03bf 	.word	0x03bf03bf
  401c94:	03bf03ad 	.word	0x03bf03ad
  401c98:	03bf03bf 	.word	0x03bf03bf
  401c9c:	03bf03bf 	.word	0x03bf03bf
  401ca0:	03bf0259 	.word	0x03bf0259
  401ca4:	031e03bf 	.word	0x031e03bf
  401ca8:	03bf03bf 	.word	0x03bf03bf
  401cac:	03bf03bf 	.word	0x03bf03bf
  401cb0:	03bf03bf 	.word	0x03bf03bf
  401cb4:	03bf03bf 	.word	0x03bf03bf
  401cb8:	03bf03bf 	.word	0x03bf03bf
  401cbc:	02db02c6 	.word	0x02db02c6
  401cc0:	03570357 	.word	0x03570357
  401cc4:	028b0357 	.word	0x028b0357
  401cc8:	03bf02db 	.word	0x03bf02db
  401ccc:	029003bf 	.word	0x029003bf
  401cd0:	029d03bf 	.word	0x029d03bf
  401cd4:	02b401cc 	.word	0x02b401cc
  401cd8:	03bf0208 	.word	0x03bf0208
  401cdc:	03bf01e1 	.word	0x03bf01e1
  401ce0:	03bf007e 	.word	0x03bf007e
  401ce4:	020d03bf 	.word	0x020d03bf
  401ce8:	980d      	ldr	r0, [sp, #52]	; 0x34
  401cea:	930f      	str	r3, [sp, #60]	; 0x3c
  401cec:	4240      	negs	r0, r0
  401cee:	900d      	str	r0, [sp, #52]	; 0x34
  401cf0:	f04b 0b04 	orr.w	fp, fp, #4
  401cf4:	f89a 3000 	ldrb.w	r3, [sl]
  401cf8:	e794      	b.n	401c24 <_svfprintf_r+0xb0>
  401cfa:	aa25      	add	r2, sp, #148	; 0x94
  401cfc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401cfe:	980c      	ldr	r0, [sp, #48]	; 0x30
  401d00:	f003 f88c 	bl	404e1c <__ssprint_r>
  401d04:	b940      	cbnz	r0, 401d18 <_svfprintf_r+0x1a4>
  401d06:	46c8      	mov	r8, r9
  401d08:	e779      	b.n	401bfe <_svfprintf_r+0x8a>
  401d0a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401d0c:	b123      	cbz	r3, 401d18 <_svfprintf_r+0x1a4>
  401d0e:	980c      	ldr	r0, [sp, #48]	; 0x30
  401d10:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401d12:	aa25      	add	r2, sp, #148	; 0x94
  401d14:	f003 f882 	bl	404e1c <__ssprint_r>
  401d18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401d1a:	899b      	ldrh	r3, [r3, #12]
  401d1c:	f013 0f40 	tst.w	r3, #64	; 0x40
  401d20:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401d22:	bf18      	it	ne
  401d24:	f04f 33ff 	movne.w	r3, #4294967295
  401d28:	9309      	str	r3, [sp, #36]	; 0x24
  401d2a:	9809      	ldr	r0, [sp, #36]	; 0x24
  401d2c:	b043      	add	sp, #268	; 0x10c
  401d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d32:	f01b 0f20 	tst.w	fp, #32
  401d36:	9311      	str	r3, [sp, #68]	; 0x44
  401d38:	f040 81dd 	bne.w	4020f6 <_svfprintf_r+0x582>
  401d3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401d3e:	f01b 0f10 	tst.w	fp, #16
  401d42:	4613      	mov	r3, r2
  401d44:	f040 856e 	bne.w	402824 <_svfprintf_r+0xcb0>
  401d48:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401d4c:	f000 856a 	beq.w	402824 <_svfprintf_r+0xcb0>
  401d50:	8814      	ldrh	r4, [r2, #0]
  401d52:	3204      	adds	r2, #4
  401d54:	2500      	movs	r5, #0
  401d56:	2301      	movs	r3, #1
  401d58:	920f      	str	r2, [sp, #60]	; 0x3c
  401d5a:	2700      	movs	r7, #0
  401d5c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401d60:	990a      	ldr	r1, [sp, #40]	; 0x28
  401d62:	1c4a      	adds	r2, r1, #1
  401d64:	f000 8265 	beq.w	402232 <_svfprintf_r+0x6be>
  401d68:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401d6c:	9207      	str	r2, [sp, #28]
  401d6e:	ea54 0205 	orrs.w	r2, r4, r5
  401d72:	f040 8264 	bne.w	40223e <_svfprintf_r+0x6ca>
  401d76:	2900      	cmp	r1, #0
  401d78:	f040 843c 	bne.w	4025f4 <_svfprintf_r+0xa80>
  401d7c:	2b00      	cmp	r3, #0
  401d7e:	f040 84d7 	bne.w	402730 <_svfprintf_r+0xbbc>
  401d82:	f01b 0301 	ands.w	r3, fp, #1
  401d86:	930e      	str	r3, [sp, #56]	; 0x38
  401d88:	f000 8604 	beq.w	402994 <_svfprintf_r+0xe20>
  401d8c:	ae42      	add	r6, sp, #264	; 0x108
  401d8e:	2330      	movs	r3, #48	; 0x30
  401d90:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401d94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401d96:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401d98:	4293      	cmp	r3, r2
  401d9a:	bfb8      	it	lt
  401d9c:	4613      	movlt	r3, r2
  401d9e:	9308      	str	r3, [sp, #32]
  401da0:	2300      	movs	r3, #0
  401da2:	9312      	str	r3, [sp, #72]	; 0x48
  401da4:	b117      	cbz	r7, 401dac <_svfprintf_r+0x238>
  401da6:	9b08      	ldr	r3, [sp, #32]
  401da8:	3301      	adds	r3, #1
  401daa:	9308      	str	r3, [sp, #32]
  401dac:	9b07      	ldr	r3, [sp, #28]
  401dae:	f013 0302 	ands.w	r3, r3, #2
  401db2:	9310      	str	r3, [sp, #64]	; 0x40
  401db4:	d002      	beq.n	401dbc <_svfprintf_r+0x248>
  401db6:	9b08      	ldr	r3, [sp, #32]
  401db8:	3302      	adds	r3, #2
  401dba:	9308      	str	r3, [sp, #32]
  401dbc:	9b07      	ldr	r3, [sp, #28]
  401dbe:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401dc2:	f040 830e 	bne.w	4023e2 <_svfprintf_r+0x86e>
  401dc6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401dc8:	9a08      	ldr	r2, [sp, #32]
  401dca:	eba3 0b02 	sub.w	fp, r3, r2
  401dce:	f1bb 0f00 	cmp.w	fp, #0
  401dd2:	f340 8306 	ble.w	4023e2 <_svfprintf_r+0x86e>
  401dd6:	f1bb 0f10 	cmp.w	fp, #16
  401dda:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401ddc:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401dde:	dd29      	ble.n	401e34 <_svfprintf_r+0x2c0>
  401de0:	4643      	mov	r3, r8
  401de2:	4621      	mov	r1, r4
  401de4:	46a8      	mov	r8, r5
  401de6:	2710      	movs	r7, #16
  401de8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401dea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401dec:	e006      	b.n	401dfc <_svfprintf_r+0x288>
  401dee:	f1ab 0b10 	sub.w	fp, fp, #16
  401df2:	f1bb 0f10 	cmp.w	fp, #16
  401df6:	f103 0308 	add.w	r3, r3, #8
  401dfa:	dd18      	ble.n	401e2e <_svfprintf_r+0x2ba>
  401dfc:	3201      	adds	r2, #1
  401dfe:	48b7      	ldr	r0, [pc, #732]	; (4020dc <_svfprintf_r+0x568>)
  401e00:	9226      	str	r2, [sp, #152]	; 0x98
  401e02:	3110      	adds	r1, #16
  401e04:	2a07      	cmp	r2, #7
  401e06:	9127      	str	r1, [sp, #156]	; 0x9c
  401e08:	e883 0081 	stmia.w	r3, {r0, r7}
  401e0c:	ddef      	ble.n	401dee <_svfprintf_r+0x27a>
  401e0e:	aa25      	add	r2, sp, #148	; 0x94
  401e10:	4629      	mov	r1, r5
  401e12:	4620      	mov	r0, r4
  401e14:	f003 f802 	bl	404e1c <__ssprint_r>
  401e18:	2800      	cmp	r0, #0
  401e1a:	f47f af7d 	bne.w	401d18 <_svfprintf_r+0x1a4>
  401e1e:	f1ab 0b10 	sub.w	fp, fp, #16
  401e22:	f1bb 0f10 	cmp.w	fp, #16
  401e26:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401e28:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401e2a:	464b      	mov	r3, r9
  401e2c:	dce6      	bgt.n	401dfc <_svfprintf_r+0x288>
  401e2e:	4645      	mov	r5, r8
  401e30:	460c      	mov	r4, r1
  401e32:	4698      	mov	r8, r3
  401e34:	3201      	adds	r2, #1
  401e36:	4ba9      	ldr	r3, [pc, #676]	; (4020dc <_svfprintf_r+0x568>)
  401e38:	9226      	str	r2, [sp, #152]	; 0x98
  401e3a:	445c      	add	r4, fp
  401e3c:	2a07      	cmp	r2, #7
  401e3e:	9427      	str	r4, [sp, #156]	; 0x9c
  401e40:	e888 0808 	stmia.w	r8, {r3, fp}
  401e44:	f300 8498 	bgt.w	402778 <_svfprintf_r+0xc04>
  401e48:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401e4c:	f108 0808 	add.w	r8, r8, #8
  401e50:	b177      	cbz	r7, 401e70 <_svfprintf_r+0x2fc>
  401e52:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e54:	3301      	adds	r3, #1
  401e56:	3401      	adds	r4, #1
  401e58:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  401e5c:	2201      	movs	r2, #1
  401e5e:	2b07      	cmp	r3, #7
  401e60:	9427      	str	r4, [sp, #156]	; 0x9c
  401e62:	9326      	str	r3, [sp, #152]	; 0x98
  401e64:	e888 0006 	stmia.w	r8, {r1, r2}
  401e68:	f300 83db 	bgt.w	402622 <_svfprintf_r+0xaae>
  401e6c:	f108 0808 	add.w	r8, r8, #8
  401e70:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401e72:	b16b      	cbz	r3, 401e90 <_svfprintf_r+0x31c>
  401e74:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e76:	3301      	adds	r3, #1
  401e78:	3402      	adds	r4, #2
  401e7a:	a91e      	add	r1, sp, #120	; 0x78
  401e7c:	2202      	movs	r2, #2
  401e7e:	2b07      	cmp	r3, #7
  401e80:	9427      	str	r4, [sp, #156]	; 0x9c
  401e82:	9326      	str	r3, [sp, #152]	; 0x98
  401e84:	e888 0006 	stmia.w	r8, {r1, r2}
  401e88:	f300 83d6 	bgt.w	402638 <_svfprintf_r+0xac4>
  401e8c:	f108 0808 	add.w	r8, r8, #8
  401e90:	2d80      	cmp	r5, #128	; 0x80
  401e92:	f000 8315 	beq.w	4024c0 <_svfprintf_r+0x94c>
  401e96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401e98:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401e9a:	1a9f      	subs	r7, r3, r2
  401e9c:	2f00      	cmp	r7, #0
  401e9e:	dd36      	ble.n	401f0e <_svfprintf_r+0x39a>
  401ea0:	2f10      	cmp	r7, #16
  401ea2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401ea4:	4d8e      	ldr	r5, [pc, #568]	; (4020e0 <_svfprintf_r+0x56c>)
  401ea6:	dd27      	ble.n	401ef8 <_svfprintf_r+0x384>
  401ea8:	4642      	mov	r2, r8
  401eaa:	4621      	mov	r1, r4
  401eac:	46b0      	mov	r8, r6
  401eae:	f04f 0b10 	mov.w	fp, #16
  401eb2:	462e      	mov	r6, r5
  401eb4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401eb6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401eb8:	e004      	b.n	401ec4 <_svfprintf_r+0x350>
  401eba:	3f10      	subs	r7, #16
  401ebc:	2f10      	cmp	r7, #16
  401ebe:	f102 0208 	add.w	r2, r2, #8
  401ec2:	dd15      	ble.n	401ef0 <_svfprintf_r+0x37c>
  401ec4:	3301      	adds	r3, #1
  401ec6:	3110      	adds	r1, #16
  401ec8:	2b07      	cmp	r3, #7
  401eca:	9127      	str	r1, [sp, #156]	; 0x9c
  401ecc:	9326      	str	r3, [sp, #152]	; 0x98
  401ece:	e882 0840 	stmia.w	r2, {r6, fp}
  401ed2:	ddf2      	ble.n	401eba <_svfprintf_r+0x346>
  401ed4:	aa25      	add	r2, sp, #148	; 0x94
  401ed6:	4629      	mov	r1, r5
  401ed8:	4620      	mov	r0, r4
  401eda:	f002 ff9f 	bl	404e1c <__ssprint_r>
  401ede:	2800      	cmp	r0, #0
  401ee0:	f47f af1a 	bne.w	401d18 <_svfprintf_r+0x1a4>
  401ee4:	3f10      	subs	r7, #16
  401ee6:	2f10      	cmp	r7, #16
  401ee8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401eea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401eec:	464a      	mov	r2, r9
  401eee:	dce9      	bgt.n	401ec4 <_svfprintf_r+0x350>
  401ef0:	4635      	mov	r5, r6
  401ef2:	460c      	mov	r4, r1
  401ef4:	4646      	mov	r6, r8
  401ef6:	4690      	mov	r8, r2
  401ef8:	3301      	adds	r3, #1
  401efa:	443c      	add	r4, r7
  401efc:	2b07      	cmp	r3, #7
  401efe:	9427      	str	r4, [sp, #156]	; 0x9c
  401f00:	9326      	str	r3, [sp, #152]	; 0x98
  401f02:	e888 00a0 	stmia.w	r8, {r5, r7}
  401f06:	f300 8381 	bgt.w	40260c <_svfprintf_r+0xa98>
  401f0a:	f108 0808 	add.w	r8, r8, #8
  401f0e:	9b07      	ldr	r3, [sp, #28]
  401f10:	05df      	lsls	r7, r3, #23
  401f12:	f100 8268 	bmi.w	4023e6 <_svfprintf_r+0x872>
  401f16:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401f18:	990e      	ldr	r1, [sp, #56]	; 0x38
  401f1a:	f8c8 6000 	str.w	r6, [r8]
  401f1e:	3301      	adds	r3, #1
  401f20:	440c      	add	r4, r1
  401f22:	2b07      	cmp	r3, #7
  401f24:	9427      	str	r4, [sp, #156]	; 0x9c
  401f26:	f8c8 1004 	str.w	r1, [r8, #4]
  401f2a:	9326      	str	r3, [sp, #152]	; 0x98
  401f2c:	f300 834d 	bgt.w	4025ca <_svfprintf_r+0xa56>
  401f30:	f108 0808 	add.w	r8, r8, #8
  401f34:	9b07      	ldr	r3, [sp, #28]
  401f36:	075b      	lsls	r3, r3, #29
  401f38:	d53a      	bpl.n	401fb0 <_svfprintf_r+0x43c>
  401f3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401f3c:	9a08      	ldr	r2, [sp, #32]
  401f3e:	1a9d      	subs	r5, r3, r2
  401f40:	2d00      	cmp	r5, #0
  401f42:	dd35      	ble.n	401fb0 <_svfprintf_r+0x43c>
  401f44:	2d10      	cmp	r5, #16
  401f46:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401f48:	dd20      	ble.n	401f8c <_svfprintf_r+0x418>
  401f4a:	2610      	movs	r6, #16
  401f4c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  401f4e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  401f52:	e004      	b.n	401f5e <_svfprintf_r+0x3ea>
  401f54:	3d10      	subs	r5, #16
  401f56:	2d10      	cmp	r5, #16
  401f58:	f108 0808 	add.w	r8, r8, #8
  401f5c:	dd16      	ble.n	401f8c <_svfprintf_r+0x418>
  401f5e:	3301      	adds	r3, #1
  401f60:	4a5e      	ldr	r2, [pc, #376]	; (4020dc <_svfprintf_r+0x568>)
  401f62:	9326      	str	r3, [sp, #152]	; 0x98
  401f64:	3410      	adds	r4, #16
  401f66:	2b07      	cmp	r3, #7
  401f68:	9427      	str	r4, [sp, #156]	; 0x9c
  401f6a:	e888 0044 	stmia.w	r8, {r2, r6}
  401f6e:	ddf1      	ble.n	401f54 <_svfprintf_r+0x3e0>
  401f70:	aa25      	add	r2, sp, #148	; 0x94
  401f72:	4659      	mov	r1, fp
  401f74:	4638      	mov	r0, r7
  401f76:	f002 ff51 	bl	404e1c <__ssprint_r>
  401f7a:	2800      	cmp	r0, #0
  401f7c:	f47f aecc 	bne.w	401d18 <_svfprintf_r+0x1a4>
  401f80:	3d10      	subs	r5, #16
  401f82:	2d10      	cmp	r5, #16
  401f84:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401f86:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401f88:	46c8      	mov	r8, r9
  401f8a:	dce8      	bgt.n	401f5e <_svfprintf_r+0x3ea>
  401f8c:	3301      	adds	r3, #1
  401f8e:	4a53      	ldr	r2, [pc, #332]	; (4020dc <_svfprintf_r+0x568>)
  401f90:	9326      	str	r3, [sp, #152]	; 0x98
  401f92:	442c      	add	r4, r5
  401f94:	2b07      	cmp	r3, #7
  401f96:	9427      	str	r4, [sp, #156]	; 0x9c
  401f98:	e888 0024 	stmia.w	r8, {r2, r5}
  401f9c:	dd08      	ble.n	401fb0 <_svfprintf_r+0x43c>
  401f9e:	aa25      	add	r2, sp, #148	; 0x94
  401fa0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401fa2:	980c      	ldr	r0, [sp, #48]	; 0x30
  401fa4:	f002 ff3a 	bl	404e1c <__ssprint_r>
  401fa8:	2800      	cmp	r0, #0
  401faa:	f47f aeb5 	bne.w	401d18 <_svfprintf_r+0x1a4>
  401fae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401fb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401fb2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  401fb4:	9908      	ldr	r1, [sp, #32]
  401fb6:	428a      	cmp	r2, r1
  401fb8:	bfac      	ite	ge
  401fba:	189b      	addge	r3, r3, r2
  401fbc:	185b      	addlt	r3, r3, r1
  401fbe:	9309      	str	r3, [sp, #36]	; 0x24
  401fc0:	2c00      	cmp	r4, #0
  401fc2:	f040 830d 	bne.w	4025e0 <_svfprintf_r+0xa6c>
  401fc6:	2300      	movs	r3, #0
  401fc8:	9326      	str	r3, [sp, #152]	; 0x98
  401fca:	46c8      	mov	r8, r9
  401fcc:	e5f9      	b.n	401bc2 <_svfprintf_r+0x4e>
  401fce:	9311      	str	r3, [sp, #68]	; 0x44
  401fd0:	f01b 0320 	ands.w	r3, fp, #32
  401fd4:	f040 81e3 	bne.w	40239e <_svfprintf_r+0x82a>
  401fd8:	f01b 0210 	ands.w	r2, fp, #16
  401fdc:	f040 842e 	bne.w	40283c <_svfprintf_r+0xcc8>
  401fe0:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  401fe4:	f000 842a 	beq.w	40283c <_svfprintf_r+0xcc8>
  401fe8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  401fea:	4613      	mov	r3, r2
  401fec:	460a      	mov	r2, r1
  401fee:	3204      	adds	r2, #4
  401ff0:	880c      	ldrh	r4, [r1, #0]
  401ff2:	920f      	str	r2, [sp, #60]	; 0x3c
  401ff4:	2500      	movs	r5, #0
  401ff6:	e6b0      	b.n	401d5a <_svfprintf_r+0x1e6>
  401ff8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401ffa:	9311      	str	r3, [sp, #68]	; 0x44
  401ffc:	6816      	ldr	r6, [r2, #0]
  401ffe:	2400      	movs	r4, #0
  402000:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402004:	1d15      	adds	r5, r2, #4
  402006:	2e00      	cmp	r6, #0
  402008:	f000 86a7 	beq.w	402d5a <_svfprintf_r+0x11e6>
  40200c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40200e:	1c53      	adds	r3, r2, #1
  402010:	f000 8609 	beq.w	402c26 <_svfprintf_r+0x10b2>
  402014:	4621      	mov	r1, r4
  402016:	4630      	mov	r0, r6
  402018:	f002 fa8a 	bl	404530 <memchr>
  40201c:	2800      	cmp	r0, #0
  40201e:	f000 86e1 	beq.w	402de4 <_svfprintf_r+0x1270>
  402022:	1b83      	subs	r3, r0, r6
  402024:	930e      	str	r3, [sp, #56]	; 0x38
  402026:	940a      	str	r4, [sp, #40]	; 0x28
  402028:	950f      	str	r5, [sp, #60]	; 0x3c
  40202a:	f8cd b01c 	str.w	fp, [sp, #28]
  40202e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402032:	9308      	str	r3, [sp, #32]
  402034:	9412      	str	r4, [sp, #72]	; 0x48
  402036:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40203a:	e6b3      	b.n	401da4 <_svfprintf_r+0x230>
  40203c:	f89a 3000 	ldrb.w	r3, [sl]
  402040:	2201      	movs	r2, #1
  402042:	212b      	movs	r1, #43	; 0x2b
  402044:	e5ee      	b.n	401c24 <_svfprintf_r+0xb0>
  402046:	f04b 0b20 	orr.w	fp, fp, #32
  40204a:	f89a 3000 	ldrb.w	r3, [sl]
  40204e:	e5e9      	b.n	401c24 <_svfprintf_r+0xb0>
  402050:	9311      	str	r3, [sp, #68]	; 0x44
  402052:	2a00      	cmp	r2, #0
  402054:	f040 8795 	bne.w	402f82 <_svfprintf_r+0x140e>
  402058:	4b22      	ldr	r3, [pc, #136]	; (4020e4 <_svfprintf_r+0x570>)
  40205a:	9318      	str	r3, [sp, #96]	; 0x60
  40205c:	f01b 0f20 	tst.w	fp, #32
  402060:	f040 8111 	bne.w	402286 <_svfprintf_r+0x712>
  402064:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402066:	f01b 0f10 	tst.w	fp, #16
  40206a:	4613      	mov	r3, r2
  40206c:	f040 83e1 	bne.w	402832 <_svfprintf_r+0xcbe>
  402070:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402074:	f000 83dd 	beq.w	402832 <_svfprintf_r+0xcbe>
  402078:	3304      	adds	r3, #4
  40207a:	8814      	ldrh	r4, [r2, #0]
  40207c:	930f      	str	r3, [sp, #60]	; 0x3c
  40207e:	2500      	movs	r5, #0
  402080:	f01b 0f01 	tst.w	fp, #1
  402084:	f000 810c 	beq.w	4022a0 <_svfprintf_r+0x72c>
  402088:	ea54 0305 	orrs.w	r3, r4, r5
  40208c:	f000 8108 	beq.w	4022a0 <_svfprintf_r+0x72c>
  402090:	2330      	movs	r3, #48	; 0x30
  402092:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402096:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40209a:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  40209e:	f04b 0b02 	orr.w	fp, fp, #2
  4020a2:	2302      	movs	r3, #2
  4020a4:	e659      	b.n	401d5a <_svfprintf_r+0x1e6>
  4020a6:	f89a 3000 	ldrb.w	r3, [sl]
  4020aa:	2900      	cmp	r1, #0
  4020ac:	f47f adba 	bne.w	401c24 <_svfprintf_r+0xb0>
  4020b0:	2201      	movs	r2, #1
  4020b2:	2120      	movs	r1, #32
  4020b4:	e5b6      	b.n	401c24 <_svfprintf_r+0xb0>
  4020b6:	f04b 0b01 	orr.w	fp, fp, #1
  4020ba:	f89a 3000 	ldrb.w	r3, [sl]
  4020be:	e5b1      	b.n	401c24 <_svfprintf_r+0xb0>
  4020c0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4020c2:	6823      	ldr	r3, [r4, #0]
  4020c4:	930d      	str	r3, [sp, #52]	; 0x34
  4020c6:	4618      	mov	r0, r3
  4020c8:	2800      	cmp	r0, #0
  4020ca:	4623      	mov	r3, r4
  4020cc:	f103 0304 	add.w	r3, r3, #4
  4020d0:	f6ff ae0a 	blt.w	401ce8 <_svfprintf_r+0x174>
  4020d4:	930f      	str	r3, [sp, #60]	; 0x3c
  4020d6:	f89a 3000 	ldrb.w	r3, [sl]
  4020da:	e5a3      	b.n	401c24 <_svfprintf_r+0xb0>
  4020dc:	00407440 	.word	0x00407440
  4020e0:	00407450 	.word	0x00407450
  4020e4:	00407420 	.word	0x00407420
  4020e8:	f04b 0b10 	orr.w	fp, fp, #16
  4020ec:	f01b 0f20 	tst.w	fp, #32
  4020f0:	9311      	str	r3, [sp, #68]	; 0x44
  4020f2:	f43f ae23 	beq.w	401d3c <_svfprintf_r+0x1c8>
  4020f6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4020f8:	3507      	adds	r5, #7
  4020fa:	f025 0307 	bic.w	r3, r5, #7
  4020fe:	f103 0208 	add.w	r2, r3, #8
  402102:	e9d3 4500 	ldrd	r4, r5, [r3]
  402106:	920f      	str	r2, [sp, #60]	; 0x3c
  402108:	2301      	movs	r3, #1
  40210a:	e626      	b.n	401d5a <_svfprintf_r+0x1e6>
  40210c:	f89a 3000 	ldrb.w	r3, [sl]
  402110:	2b2a      	cmp	r3, #42	; 0x2a
  402112:	f10a 0401 	add.w	r4, sl, #1
  402116:	f000 8727 	beq.w	402f68 <_svfprintf_r+0x13f4>
  40211a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40211e:	2809      	cmp	r0, #9
  402120:	46a2      	mov	sl, r4
  402122:	f200 86ad 	bhi.w	402e80 <_svfprintf_r+0x130c>
  402126:	2300      	movs	r3, #0
  402128:	461c      	mov	r4, r3
  40212a:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40212e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402132:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402136:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40213a:	2809      	cmp	r0, #9
  40213c:	d9f5      	bls.n	40212a <_svfprintf_r+0x5b6>
  40213e:	940a      	str	r4, [sp, #40]	; 0x28
  402140:	e572      	b.n	401c28 <_svfprintf_r+0xb4>
  402142:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402146:	f89a 3000 	ldrb.w	r3, [sl]
  40214a:	e56b      	b.n	401c24 <_svfprintf_r+0xb0>
  40214c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402150:	f89a 3000 	ldrb.w	r3, [sl]
  402154:	e566      	b.n	401c24 <_svfprintf_r+0xb0>
  402156:	f89a 3000 	ldrb.w	r3, [sl]
  40215a:	2b6c      	cmp	r3, #108	; 0x6c
  40215c:	bf03      	ittte	eq
  40215e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402162:	f04b 0b20 	orreq.w	fp, fp, #32
  402166:	f10a 0a01 	addeq.w	sl, sl, #1
  40216a:	f04b 0b10 	orrne.w	fp, fp, #16
  40216e:	e559      	b.n	401c24 <_svfprintf_r+0xb0>
  402170:	2a00      	cmp	r2, #0
  402172:	f040 8711 	bne.w	402f98 <_svfprintf_r+0x1424>
  402176:	f01b 0f20 	tst.w	fp, #32
  40217a:	f040 84f9 	bne.w	402b70 <_svfprintf_r+0xffc>
  40217e:	f01b 0f10 	tst.w	fp, #16
  402182:	f040 84ac 	bne.w	402ade <_svfprintf_r+0xf6a>
  402186:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40218a:	f000 84a8 	beq.w	402ade <_svfprintf_r+0xf6a>
  40218e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402190:	6813      	ldr	r3, [r2, #0]
  402192:	3204      	adds	r2, #4
  402194:	920f      	str	r2, [sp, #60]	; 0x3c
  402196:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40219a:	801a      	strh	r2, [r3, #0]
  40219c:	e511      	b.n	401bc2 <_svfprintf_r+0x4e>
  40219e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4021a0:	4bb3      	ldr	r3, [pc, #716]	; (402470 <_svfprintf_r+0x8fc>)
  4021a2:	680c      	ldr	r4, [r1, #0]
  4021a4:	9318      	str	r3, [sp, #96]	; 0x60
  4021a6:	2230      	movs	r2, #48	; 0x30
  4021a8:	2378      	movs	r3, #120	; 0x78
  4021aa:	3104      	adds	r1, #4
  4021ac:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4021b0:	9311      	str	r3, [sp, #68]	; 0x44
  4021b2:	f04b 0b02 	orr.w	fp, fp, #2
  4021b6:	910f      	str	r1, [sp, #60]	; 0x3c
  4021b8:	2500      	movs	r5, #0
  4021ba:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4021be:	2302      	movs	r3, #2
  4021c0:	e5cb      	b.n	401d5a <_svfprintf_r+0x1e6>
  4021c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4021c4:	9311      	str	r3, [sp, #68]	; 0x44
  4021c6:	680a      	ldr	r2, [r1, #0]
  4021c8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4021cc:	2300      	movs	r3, #0
  4021ce:	460a      	mov	r2, r1
  4021d0:	461f      	mov	r7, r3
  4021d2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4021d6:	3204      	adds	r2, #4
  4021d8:	2301      	movs	r3, #1
  4021da:	9308      	str	r3, [sp, #32]
  4021dc:	f8cd b01c 	str.w	fp, [sp, #28]
  4021e0:	970a      	str	r7, [sp, #40]	; 0x28
  4021e2:	9712      	str	r7, [sp, #72]	; 0x48
  4021e4:	920f      	str	r2, [sp, #60]	; 0x3c
  4021e6:	930e      	str	r3, [sp, #56]	; 0x38
  4021e8:	ae28      	add	r6, sp, #160	; 0xa0
  4021ea:	e5df      	b.n	401dac <_svfprintf_r+0x238>
  4021ec:	9311      	str	r3, [sp, #68]	; 0x44
  4021ee:	2a00      	cmp	r2, #0
  4021f0:	f040 86ea 	bne.w	402fc8 <_svfprintf_r+0x1454>
  4021f4:	f01b 0f20 	tst.w	fp, #32
  4021f8:	d15d      	bne.n	4022b6 <_svfprintf_r+0x742>
  4021fa:	f01b 0f10 	tst.w	fp, #16
  4021fe:	f040 8308 	bne.w	402812 <_svfprintf_r+0xc9e>
  402202:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402206:	f000 8304 	beq.w	402812 <_svfprintf_r+0xc9e>
  40220a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40220c:	f9b1 4000 	ldrsh.w	r4, [r1]
  402210:	3104      	adds	r1, #4
  402212:	17e5      	asrs	r5, r4, #31
  402214:	4622      	mov	r2, r4
  402216:	462b      	mov	r3, r5
  402218:	910f      	str	r1, [sp, #60]	; 0x3c
  40221a:	2a00      	cmp	r2, #0
  40221c:	f173 0300 	sbcs.w	r3, r3, #0
  402220:	db58      	blt.n	4022d4 <_svfprintf_r+0x760>
  402222:	990a      	ldr	r1, [sp, #40]	; 0x28
  402224:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402228:	1c4a      	adds	r2, r1, #1
  40222a:	f04f 0301 	mov.w	r3, #1
  40222e:	f47f ad9b 	bne.w	401d68 <_svfprintf_r+0x1f4>
  402232:	ea54 0205 	orrs.w	r2, r4, r5
  402236:	f000 81df 	beq.w	4025f8 <_svfprintf_r+0xa84>
  40223a:	f8cd b01c 	str.w	fp, [sp, #28]
  40223e:	2b01      	cmp	r3, #1
  402240:	f000 827b 	beq.w	40273a <_svfprintf_r+0xbc6>
  402244:	2b02      	cmp	r3, #2
  402246:	f040 8206 	bne.w	402656 <_svfprintf_r+0xae2>
  40224a:	9818      	ldr	r0, [sp, #96]	; 0x60
  40224c:	464e      	mov	r6, r9
  40224e:	0923      	lsrs	r3, r4, #4
  402250:	f004 010f 	and.w	r1, r4, #15
  402254:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402258:	092a      	lsrs	r2, r5, #4
  40225a:	461c      	mov	r4, r3
  40225c:	4615      	mov	r5, r2
  40225e:	5c43      	ldrb	r3, [r0, r1]
  402260:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402264:	ea54 0305 	orrs.w	r3, r4, r5
  402268:	d1f1      	bne.n	40224e <_svfprintf_r+0x6da>
  40226a:	eba9 0306 	sub.w	r3, r9, r6
  40226e:	930e      	str	r3, [sp, #56]	; 0x38
  402270:	e590      	b.n	401d94 <_svfprintf_r+0x220>
  402272:	9311      	str	r3, [sp, #68]	; 0x44
  402274:	2a00      	cmp	r2, #0
  402276:	f040 86a3 	bne.w	402fc0 <_svfprintf_r+0x144c>
  40227a:	4b7e      	ldr	r3, [pc, #504]	; (402474 <_svfprintf_r+0x900>)
  40227c:	9318      	str	r3, [sp, #96]	; 0x60
  40227e:	f01b 0f20 	tst.w	fp, #32
  402282:	f43f aeef 	beq.w	402064 <_svfprintf_r+0x4f0>
  402286:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402288:	3507      	adds	r5, #7
  40228a:	f025 0307 	bic.w	r3, r5, #7
  40228e:	f103 0208 	add.w	r2, r3, #8
  402292:	f01b 0f01 	tst.w	fp, #1
  402296:	920f      	str	r2, [sp, #60]	; 0x3c
  402298:	e9d3 4500 	ldrd	r4, r5, [r3]
  40229c:	f47f aef4 	bne.w	402088 <_svfprintf_r+0x514>
  4022a0:	2302      	movs	r3, #2
  4022a2:	e55a      	b.n	401d5a <_svfprintf_r+0x1e6>
  4022a4:	9311      	str	r3, [sp, #68]	; 0x44
  4022a6:	2a00      	cmp	r2, #0
  4022a8:	f040 8686 	bne.w	402fb8 <_svfprintf_r+0x1444>
  4022ac:	f04b 0b10 	orr.w	fp, fp, #16
  4022b0:	f01b 0f20 	tst.w	fp, #32
  4022b4:	d0a1      	beq.n	4021fa <_svfprintf_r+0x686>
  4022b6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4022b8:	3507      	adds	r5, #7
  4022ba:	f025 0507 	bic.w	r5, r5, #7
  4022be:	e9d5 2300 	ldrd	r2, r3, [r5]
  4022c2:	2a00      	cmp	r2, #0
  4022c4:	f105 0108 	add.w	r1, r5, #8
  4022c8:	461d      	mov	r5, r3
  4022ca:	f173 0300 	sbcs.w	r3, r3, #0
  4022ce:	910f      	str	r1, [sp, #60]	; 0x3c
  4022d0:	4614      	mov	r4, r2
  4022d2:	daa6      	bge.n	402222 <_svfprintf_r+0x6ae>
  4022d4:	272d      	movs	r7, #45	; 0x2d
  4022d6:	4264      	negs	r4, r4
  4022d8:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4022dc:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4022e0:	2301      	movs	r3, #1
  4022e2:	e53d      	b.n	401d60 <_svfprintf_r+0x1ec>
  4022e4:	9311      	str	r3, [sp, #68]	; 0x44
  4022e6:	2a00      	cmp	r2, #0
  4022e8:	f040 8662 	bne.w	402fb0 <_svfprintf_r+0x143c>
  4022ec:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4022ee:	3507      	adds	r5, #7
  4022f0:	f025 0307 	bic.w	r3, r5, #7
  4022f4:	f103 0208 	add.w	r2, r3, #8
  4022f8:	920f      	str	r2, [sp, #60]	; 0x3c
  4022fa:	681a      	ldr	r2, [r3, #0]
  4022fc:	9215      	str	r2, [sp, #84]	; 0x54
  4022fe:	685b      	ldr	r3, [r3, #4]
  402300:	9314      	str	r3, [sp, #80]	; 0x50
  402302:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402304:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402306:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  40230a:	4628      	mov	r0, r5
  40230c:	4621      	mov	r1, r4
  40230e:	f04f 32ff 	mov.w	r2, #4294967295
  402312:	4b59      	ldr	r3, [pc, #356]	; (402478 <_svfprintf_r+0x904>)
  402314:	f003 fe48 	bl	405fa8 <__aeabi_dcmpun>
  402318:	2800      	cmp	r0, #0
  40231a:	f040 834a 	bne.w	4029b2 <_svfprintf_r+0xe3e>
  40231e:	4628      	mov	r0, r5
  402320:	4621      	mov	r1, r4
  402322:	f04f 32ff 	mov.w	r2, #4294967295
  402326:	4b54      	ldr	r3, [pc, #336]	; (402478 <_svfprintf_r+0x904>)
  402328:	f003 fe20 	bl	405f6c <__aeabi_dcmple>
  40232c:	2800      	cmp	r0, #0
  40232e:	f040 8340 	bne.w	4029b2 <_svfprintf_r+0xe3e>
  402332:	a815      	add	r0, sp, #84	; 0x54
  402334:	c80d      	ldmia	r0, {r0, r2, r3}
  402336:	9914      	ldr	r1, [sp, #80]	; 0x50
  402338:	f003 fe0e 	bl	405f58 <__aeabi_dcmplt>
  40233c:	2800      	cmp	r0, #0
  40233e:	f040 8530 	bne.w	402da2 <_svfprintf_r+0x122e>
  402342:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402346:	4e4d      	ldr	r6, [pc, #308]	; (40247c <_svfprintf_r+0x908>)
  402348:	4b4d      	ldr	r3, [pc, #308]	; (402480 <_svfprintf_r+0x90c>)
  40234a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40234e:	9007      	str	r0, [sp, #28]
  402350:	9811      	ldr	r0, [sp, #68]	; 0x44
  402352:	2203      	movs	r2, #3
  402354:	2100      	movs	r1, #0
  402356:	9208      	str	r2, [sp, #32]
  402358:	910a      	str	r1, [sp, #40]	; 0x28
  40235a:	2847      	cmp	r0, #71	; 0x47
  40235c:	bfd8      	it	le
  40235e:	461e      	movle	r6, r3
  402360:	920e      	str	r2, [sp, #56]	; 0x38
  402362:	9112      	str	r1, [sp, #72]	; 0x48
  402364:	e51e      	b.n	401da4 <_svfprintf_r+0x230>
  402366:	f04b 0b08 	orr.w	fp, fp, #8
  40236a:	f89a 3000 	ldrb.w	r3, [sl]
  40236e:	e459      	b.n	401c24 <_svfprintf_r+0xb0>
  402370:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402374:	2300      	movs	r3, #0
  402376:	461c      	mov	r4, r3
  402378:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40237c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402380:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402384:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402388:	2809      	cmp	r0, #9
  40238a:	d9f5      	bls.n	402378 <_svfprintf_r+0x804>
  40238c:	940d      	str	r4, [sp, #52]	; 0x34
  40238e:	e44b      	b.n	401c28 <_svfprintf_r+0xb4>
  402390:	f04b 0b10 	orr.w	fp, fp, #16
  402394:	9311      	str	r3, [sp, #68]	; 0x44
  402396:	f01b 0320 	ands.w	r3, fp, #32
  40239a:	f43f ae1d 	beq.w	401fd8 <_svfprintf_r+0x464>
  40239e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4023a0:	3507      	adds	r5, #7
  4023a2:	f025 0307 	bic.w	r3, r5, #7
  4023a6:	f103 0208 	add.w	r2, r3, #8
  4023aa:	e9d3 4500 	ldrd	r4, r5, [r3]
  4023ae:	920f      	str	r2, [sp, #60]	; 0x3c
  4023b0:	2300      	movs	r3, #0
  4023b2:	e4d2      	b.n	401d5a <_svfprintf_r+0x1e6>
  4023b4:	9311      	str	r3, [sp, #68]	; 0x44
  4023b6:	2a00      	cmp	r2, #0
  4023b8:	f040 85e7 	bne.w	402f8a <_svfprintf_r+0x1416>
  4023bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4023be:	2a00      	cmp	r2, #0
  4023c0:	f43f aca3 	beq.w	401d0a <_svfprintf_r+0x196>
  4023c4:	2300      	movs	r3, #0
  4023c6:	2101      	movs	r1, #1
  4023c8:	461f      	mov	r7, r3
  4023ca:	9108      	str	r1, [sp, #32]
  4023cc:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4023d0:	f8cd b01c 	str.w	fp, [sp, #28]
  4023d4:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4023d8:	930a      	str	r3, [sp, #40]	; 0x28
  4023da:	9312      	str	r3, [sp, #72]	; 0x48
  4023dc:	910e      	str	r1, [sp, #56]	; 0x38
  4023de:	ae28      	add	r6, sp, #160	; 0xa0
  4023e0:	e4e4      	b.n	401dac <_svfprintf_r+0x238>
  4023e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4023e4:	e534      	b.n	401e50 <_svfprintf_r+0x2dc>
  4023e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4023e8:	2b65      	cmp	r3, #101	; 0x65
  4023ea:	f340 80a7 	ble.w	40253c <_svfprintf_r+0x9c8>
  4023ee:	a815      	add	r0, sp, #84	; 0x54
  4023f0:	c80d      	ldmia	r0, {r0, r2, r3}
  4023f2:	9914      	ldr	r1, [sp, #80]	; 0x50
  4023f4:	f003 fda6 	bl	405f44 <__aeabi_dcmpeq>
  4023f8:	2800      	cmp	r0, #0
  4023fa:	f000 8150 	beq.w	40269e <_svfprintf_r+0xb2a>
  4023fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402400:	4a20      	ldr	r2, [pc, #128]	; (402484 <_svfprintf_r+0x910>)
  402402:	f8c8 2000 	str.w	r2, [r8]
  402406:	3301      	adds	r3, #1
  402408:	3401      	adds	r4, #1
  40240a:	2201      	movs	r2, #1
  40240c:	2b07      	cmp	r3, #7
  40240e:	9427      	str	r4, [sp, #156]	; 0x9c
  402410:	9326      	str	r3, [sp, #152]	; 0x98
  402412:	f8c8 2004 	str.w	r2, [r8, #4]
  402416:	f300 836a 	bgt.w	402aee <_svfprintf_r+0xf7a>
  40241a:	f108 0808 	add.w	r8, r8, #8
  40241e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402420:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402422:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402424:	4293      	cmp	r3, r2
  402426:	db03      	blt.n	402430 <_svfprintf_r+0x8bc>
  402428:	9b07      	ldr	r3, [sp, #28]
  40242a:	07dd      	lsls	r5, r3, #31
  40242c:	f57f ad82 	bpl.w	401f34 <_svfprintf_r+0x3c0>
  402430:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402432:	9919      	ldr	r1, [sp, #100]	; 0x64
  402434:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402436:	f8c8 2000 	str.w	r2, [r8]
  40243a:	3301      	adds	r3, #1
  40243c:	440c      	add	r4, r1
  40243e:	2b07      	cmp	r3, #7
  402440:	f8c8 1004 	str.w	r1, [r8, #4]
  402444:	9427      	str	r4, [sp, #156]	; 0x9c
  402446:	9326      	str	r3, [sp, #152]	; 0x98
  402448:	f300 839e 	bgt.w	402b88 <_svfprintf_r+0x1014>
  40244c:	f108 0808 	add.w	r8, r8, #8
  402450:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402452:	1e5e      	subs	r6, r3, #1
  402454:	2e00      	cmp	r6, #0
  402456:	f77f ad6d 	ble.w	401f34 <_svfprintf_r+0x3c0>
  40245a:	2e10      	cmp	r6, #16
  40245c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40245e:	4d0a      	ldr	r5, [pc, #40]	; (402488 <_svfprintf_r+0x914>)
  402460:	f340 81f5 	ble.w	40284e <_svfprintf_r+0xcda>
  402464:	4622      	mov	r2, r4
  402466:	2710      	movs	r7, #16
  402468:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40246c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40246e:	e013      	b.n	402498 <_svfprintf_r+0x924>
  402470:	00407420 	.word	0x00407420
  402474:	0040740c 	.word	0x0040740c
  402478:	7fefffff 	.word	0x7fefffff
  40247c:	00407400 	.word	0x00407400
  402480:	004073fc 	.word	0x004073fc
  402484:	0040743c 	.word	0x0040743c
  402488:	00407450 	.word	0x00407450
  40248c:	f108 0808 	add.w	r8, r8, #8
  402490:	3e10      	subs	r6, #16
  402492:	2e10      	cmp	r6, #16
  402494:	f340 81da 	ble.w	40284c <_svfprintf_r+0xcd8>
  402498:	3301      	adds	r3, #1
  40249a:	3210      	adds	r2, #16
  40249c:	2b07      	cmp	r3, #7
  40249e:	9227      	str	r2, [sp, #156]	; 0x9c
  4024a0:	9326      	str	r3, [sp, #152]	; 0x98
  4024a2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4024a6:	ddf1      	ble.n	40248c <_svfprintf_r+0x918>
  4024a8:	aa25      	add	r2, sp, #148	; 0x94
  4024aa:	4621      	mov	r1, r4
  4024ac:	4658      	mov	r0, fp
  4024ae:	f002 fcb5 	bl	404e1c <__ssprint_r>
  4024b2:	2800      	cmp	r0, #0
  4024b4:	f47f ac30 	bne.w	401d18 <_svfprintf_r+0x1a4>
  4024b8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4024ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024bc:	46c8      	mov	r8, r9
  4024be:	e7e7      	b.n	402490 <_svfprintf_r+0x91c>
  4024c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4024c2:	9a08      	ldr	r2, [sp, #32]
  4024c4:	1a9f      	subs	r7, r3, r2
  4024c6:	2f00      	cmp	r7, #0
  4024c8:	f77f ace5 	ble.w	401e96 <_svfprintf_r+0x322>
  4024cc:	2f10      	cmp	r7, #16
  4024ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024d0:	4db6      	ldr	r5, [pc, #728]	; (4027ac <_svfprintf_r+0xc38>)
  4024d2:	dd27      	ble.n	402524 <_svfprintf_r+0x9b0>
  4024d4:	4642      	mov	r2, r8
  4024d6:	4621      	mov	r1, r4
  4024d8:	46b0      	mov	r8, r6
  4024da:	f04f 0b10 	mov.w	fp, #16
  4024de:	462e      	mov	r6, r5
  4024e0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4024e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4024e4:	e004      	b.n	4024f0 <_svfprintf_r+0x97c>
  4024e6:	3f10      	subs	r7, #16
  4024e8:	2f10      	cmp	r7, #16
  4024ea:	f102 0208 	add.w	r2, r2, #8
  4024ee:	dd15      	ble.n	40251c <_svfprintf_r+0x9a8>
  4024f0:	3301      	adds	r3, #1
  4024f2:	3110      	adds	r1, #16
  4024f4:	2b07      	cmp	r3, #7
  4024f6:	9127      	str	r1, [sp, #156]	; 0x9c
  4024f8:	9326      	str	r3, [sp, #152]	; 0x98
  4024fa:	e882 0840 	stmia.w	r2, {r6, fp}
  4024fe:	ddf2      	ble.n	4024e6 <_svfprintf_r+0x972>
  402500:	aa25      	add	r2, sp, #148	; 0x94
  402502:	4629      	mov	r1, r5
  402504:	4620      	mov	r0, r4
  402506:	f002 fc89 	bl	404e1c <__ssprint_r>
  40250a:	2800      	cmp	r0, #0
  40250c:	f47f ac04 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402510:	3f10      	subs	r7, #16
  402512:	2f10      	cmp	r7, #16
  402514:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402516:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402518:	464a      	mov	r2, r9
  40251a:	dce9      	bgt.n	4024f0 <_svfprintf_r+0x97c>
  40251c:	4635      	mov	r5, r6
  40251e:	460c      	mov	r4, r1
  402520:	4646      	mov	r6, r8
  402522:	4690      	mov	r8, r2
  402524:	3301      	adds	r3, #1
  402526:	443c      	add	r4, r7
  402528:	2b07      	cmp	r3, #7
  40252a:	9427      	str	r4, [sp, #156]	; 0x9c
  40252c:	9326      	str	r3, [sp, #152]	; 0x98
  40252e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402532:	f300 8232 	bgt.w	40299a <_svfprintf_r+0xe26>
  402536:	f108 0808 	add.w	r8, r8, #8
  40253a:	e4ac      	b.n	401e96 <_svfprintf_r+0x322>
  40253c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40253e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402540:	2b01      	cmp	r3, #1
  402542:	f340 81fe 	ble.w	402942 <_svfprintf_r+0xdce>
  402546:	3701      	adds	r7, #1
  402548:	3401      	adds	r4, #1
  40254a:	2301      	movs	r3, #1
  40254c:	2f07      	cmp	r7, #7
  40254e:	9427      	str	r4, [sp, #156]	; 0x9c
  402550:	9726      	str	r7, [sp, #152]	; 0x98
  402552:	f8c8 6000 	str.w	r6, [r8]
  402556:	f8c8 3004 	str.w	r3, [r8, #4]
  40255a:	f300 8203 	bgt.w	402964 <_svfprintf_r+0xdf0>
  40255e:	f108 0808 	add.w	r8, r8, #8
  402562:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402564:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402566:	f8c8 3000 	str.w	r3, [r8]
  40256a:	3701      	adds	r7, #1
  40256c:	4414      	add	r4, r2
  40256e:	2f07      	cmp	r7, #7
  402570:	9427      	str	r4, [sp, #156]	; 0x9c
  402572:	9726      	str	r7, [sp, #152]	; 0x98
  402574:	f8c8 2004 	str.w	r2, [r8, #4]
  402578:	f300 8200 	bgt.w	40297c <_svfprintf_r+0xe08>
  40257c:	f108 0808 	add.w	r8, r8, #8
  402580:	a815      	add	r0, sp, #84	; 0x54
  402582:	c80d      	ldmia	r0, {r0, r2, r3}
  402584:	9914      	ldr	r1, [sp, #80]	; 0x50
  402586:	f003 fcdd 	bl	405f44 <__aeabi_dcmpeq>
  40258a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40258c:	2800      	cmp	r0, #0
  40258e:	f040 8101 	bne.w	402794 <_svfprintf_r+0xc20>
  402592:	3b01      	subs	r3, #1
  402594:	3701      	adds	r7, #1
  402596:	3601      	adds	r6, #1
  402598:	441c      	add	r4, r3
  40259a:	2f07      	cmp	r7, #7
  40259c:	9726      	str	r7, [sp, #152]	; 0x98
  40259e:	9427      	str	r4, [sp, #156]	; 0x9c
  4025a0:	f8c8 6000 	str.w	r6, [r8]
  4025a4:	f8c8 3004 	str.w	r3, [r8, #4]
  4025a8:	f300 8127 	bgt.w	4027fa <_svfprintf_r+0xc86>
  4025ac:	f108 0808 	add.w	r8, r8, #8
  4025b0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4025b2:	f8c8 2004 	str.w	r2, [r8, #4]
  4025b6:	3701      	adds	r7, #1
  4025b8:	4414      	add	r4, r2
  4025ba:	ab21      	add	r3, sp, #132	; 0x84
  4025bc:	2f07      	cmp	r7, #7
  4025be:	9427      	str	r4, [sp, #156]	; 0x9c
  4025c0:	9726      	str	r7, [sp, #152]	; 0x98
  4025c2:	f8c8 3000 	str.w	r3, [r8]
  4025c6:	f77f acb3 	ble.w	401f30 <_svfprintf_r+0x3bc>
  4025ca:	aa25      	add	r2, sp, #148	; 0x94
  4025cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4025ce:	980c      	ldr	r0, [sp, #48]	; 0x30
  4025d0:	f002 fc24 	bl	404e1c <__ssprint_r>
  4025d4:	2800      	cmp	r0, #0
  4025d6:	f47f ab9f 	bne.w	401d18 <_svfprintf_r+0x1a4>
  4025da:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4025dc:	46c8      	mov	r8, r9
  4025de:	e4a9      	b.n	401f34 <_svfprintf_r+0x3c0>
  4025e0:	aa25      	add	r2, sp, #148	; 0x94
  4025e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4025e4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4025e6:	f002 fc19 	bl	404e1c <__ssprint_r>
  4025ea:	2800      	cmp	r0, #0
  4025ec:	f43f aceb 	beq.w	401fc6 <_svfprintf_r+0x452>
  4025f0:	f7ff bb92 	b.w	401d18 <_svfprintf_r+0x1a4>
  4025f4:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4025f8:	2b01      	cmp	r3, #1
  4025fa:	f000 8134 	beq.w	402866 <_svfprintf_r+0xcf2>
  4025fe:	2b02      	cmp	r3, #2
  402600:	d125      	bne.n	40264e <_svfprintf_r+0xada>
  402602:	f8cd b01c 	str.w	fp, [sp, #28]
  402606:	2400      	movs	r4, #0
  402608:	2500      	movs	r5, #0
  40260a:	e61e      	b.n	40224a <_svfprintf_r+0x6d6>
  40260c:	aa25      	add	r2, sp, #148	; 0x94
  40260e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402610:	980c      	ldr	r0, [sp, #48]	; 0x30
  402612:	f002 fc03 	bl	404e1c <__ssprint_r>
  402616:	2800      	cmp	r0, #0
  402618:	f47f ab7e 	bne.w	401d18 <_svfprintf_r+0x1a4>
  40261c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40261e:	46c8      	mov	r8, r9
  402620:	e475      	b.n	401f0e <_svfprintf_r+0x39a>
  402622:	aa25      	add	r2, sp, #148	; 0x94
  402624:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402626:	980c      	ldr	r0, [sp, #48]	; 0x30
  402628:	f002 fbf8 	bl	404e1c <__ssprint_r>
  40262c:	2800      	cmp	r0, #0
  40262e:	f47f ab73 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402632:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402634:	46c8      	mov	r8, r9
  402636:	e41b      	b.n	401e70 <_svfprintf_r+0x2fc>
  402638:	aa25      	add	r2, sp, #148	; 0x94
  40263a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40263c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40263e:	f002 fbed 	bl	404e1c <__ssprint_r>
  402642:	2800      	cmp	r0, #0
  402644:	f47f ab68 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402648:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40264a:	46c8      	mov	r8, r9
  40264c:	e420      	b.n	401e90 <_svfprintf_r+0x31c>
  40264e:	f8cd b01c 	str.w	fp, [sp, #28]
  402652:	2400      	movs	r4, #0
  402654:	2500      	movs	r5, #0
  402656:	4649      	mov	r1, r9
  402658:	e000      	b.n	40265c <_svfprintf_r+0xae8>
  40265a:	4631      	mov	r1, r6
  40265c:	08e2      	lsrs	r2, r4, #3
  40265e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402662:	08e8      	lsrs	r0, r5, #3
  402664:	f004 0307 	and.w	r3, r4, #7
  402668:	4605      	mov	r5, r0
  40266a:	4614      	mov	r4, r2
  40266c:	3330      	adds	r3, #48	; 0x30
  40266e:	ea54 0205 	orrs.w	r2, r4, r5
  402672:	f801 3c01 	strb.w	r3, [r1, #-1]
  402676:	f101 36ff 	add.w	r6, r1, #4294967295
  40267a:	d1ee      	bne.n	40265a <_svfprintf_r+0xae6>
  40267c:	9a07      	ldr	r2, [sp, #28]
  40267e:	07d2      	lsls	r2, r2, #31
  402680:	f57f adf3 	bpl.w	40226a <_svfprintf_r+0x6f6>
  402684:	2b30      	cmp	r3, #48	; 0x30
  402686:	f43f adf0 	beq.w	40226a <_svfprintf_r+0x6f6>
  40268a:	3902      	subs	r1, #2
  40268c:	2330      	movs	r3, #48	; 0x30
  40268e:	f806 3c01 	strb.w	r3, [r6, #-1]
  402692:	eba9 0301 	sub.w	r3, r9, r1
  402696:	930e      	str	r3, [sp, #56]	; 0x38
  402698:	460e      	mov	r6, r1
  40269a:	f7ff bb7b 	b.w	401d94 <_svfprintf_r+0x220>
  40269e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4026a0:	2900      	cmp	r1, #0
  4026a2:	f340 822e 	ble.w	402b02 <_svfprintf_r+0xf8e>
  4026a6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4026a8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4026aa:	4293      	cmp	r3, r2
  4026ac:	bfa8      	it	ge
  4026ae:	4613      	movge	r3, r2
  4026b0:	2b00      	cmp	r3, #0
  4026b2:	461f      	mov	r7, r3
  4026b4:	dd0d      	ble.n	4026d2 <_svfprintf_r+0xb5e>
  4026b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026b8:	f8c8 6000 	str.w	r6, [r8]
  4026bc:	3301      	adds	r3, #1
  4026be:	443c      	add	r4, r7
  4026c0:	2b07      	cmp	r3, #7
  4026c2:	9427      	str	r4, [sp, #156]	; 0x9c
  4026c4:	f8c8 7004 	str.w	r7, [r8, #4]
  4026c8:	9326      	str	r3, [sp, #152]	; 0x98
  4026ca:	f300 831f 	bgt.w	402d0c <_svfprintf_r+0x1198>
  4026ce:	f108 0808 	add.w	r8, r8, #8
  4026d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4026d4:	2f00      	cmp	r7, #0
  4026d6:	bfa8      	it	ge
  4026d8:	1bdb      	subge	r3, r3, r7
  4026da:	2b00      	cmp	r3, #0
  4026dc:	461f      	mov	r7, r3
  4026de:	f340 80d6 	ble.w	40288e <_svfprintf_r+0xd1a>
  4026e2:	2f10      	cmp	r7, #16
  4026e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026e6:	4d31      	ldr	r5, [pc, #196]	; (4027ac <_svfprintf_r+0xc38>)
  4026e8:	f340 81ed 	ble.w	402ac6 <_svfprintf_r+0xf52>
  4026ec:	4642      	mov	r2, r8
  4026ee:	4621      	mov	r1, r4
  4026f0:	46b0      	mov	r8, r6
  4026f2:	f04f 0b10 	mov.w	fp, #16
  4026f6:	462e      	mov	r6, r5
  4026f8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4026fa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4026fc:	e004      	b.n	402708 <_svfprintf_r+0xb94>
  4026fe:	3208      	adds	r2, #8
  402700:	3f10      	subs	r7, #16
  402702:	2f10      	cmp	r7, #16
  402704:	f340 81db 	ble.w	402abe <_svfprintf_r+0xf4a>
  402708:	3301      	adds	r3, #1
  40270a:	3110      	adds	r1, #16
  40270c:	2b07      	cmp	r3, #7
  40270e:	9127      	str	r1, [sp, #156]	; 0x9c
  402710:	9326      	str	r3, [sp, #152]	; 0x98
  402712:	e882 0840 	stmia.w	r2, {r6, fp}
  402716:	ddf2      	ble.n	4026fe <_svfprintf_r+0xb8a>
  402718:	aa25      	add	r2, sp, #148	; 0x94
  40271a:	4629      	mov	r1, r5
  40271c:	4620      	mov	r0, r4
  40271e:	f002 fb7d 	bl	404e1c <__ssprint_r>
  402722:	2800      	cmp	r0, #0
  402724:	f47f aaf8 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402728:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40272a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40272c:	464a      	mov	r2, r9
  40272e:	e7e7      	b.n	402700 <_svfprintf_r+0xb8c>
  402730:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402732:	930e      	str	r3, [sp, #56]	; 0x38
  402734:	464e      	mov	r6, r9
  402736:	f7ff bb2d 	b.w	401d94 <_svfprintf_r+0x220>
  40273a:	2d00      	cmp	r5, #0
  40273c:	bf08      	it	eq
  40273e:	2c0a      	cmpeq	r4, #10
  402740:	f0c0 808f 	bcc.w	402862 <_svfprintf_r+0xcee>
  402744:	464e      	mov	r6, r9
  402746:	4620      	mov	r0, r4
  402748:	4629      	mov	r1, r5
  40274a:	220a      	movs	r2, #10
  40274c:	2300      	movs	r3, #0
  40274e:	f003 fc69 	bl	406024 <__aeabi_uldivmod>
  402752:	3230      	adds	r2, #48	; 0x30
  402754:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402758:	4620      	mov	r0, r4
  40275a:	4629      	mov	r1, r5
  40275c:	2300      	movs	r3, #0
  40275e:	220a      	movs	r2, #10
  402760:	f003 fc60 	bl	406024 <__aeabi_uldivmod>
  402764:	4604      	mov	r4, r0
  402766:	460d      	mov	r5, r1
  402768:	ea54 0305 	orrs.w	r3, r4, r5
  40276c:	d1eb      	bne.n	402746 <_svfprintf_r+0xbd2>
  40276e:	eba9 0306 	sub.w	r3, r9, r6
  402772:	930e      	str	r3, [sp, #56]	; 0x38
  402774:	f7ff bb0e 	b.w	401d94 <_svfprintf_r+0x220>
  402778:	aa25      	add	r2, sp, #148	; 0x94
  40277a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40277c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40277e:	f002 fb4d 	bl	404e1c <__ssprint_r>
  402782:	2800      	cmp	r0, #0
  402784:	f47f aac8 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402788:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40278c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40278e:	46c8      	mov	r8, r9
  402790:	f7ff bb5e 	b.w	401e50 <_svfprintf_r+0x2dc>
  402794:	1e5e      	subs	r6, r3, #1
  402796:	2e00      	cmp	r6, #0
  402798:	f77f af0a 	ble.w	4025b0 <_svfprintf_r+0xa3c>
  40279c:	2e10      	cmp	r6, #16
  40279e:	4d03      	ldr	r5, [pc, #12]	; (4027ac <_svfprintf_r+0xc38>)
  4027a0:	dd22      	ble.n	4027e8 <_svfprintf_r+0xc74>
  4027a2:	4622      	mov	r2, r4
  4027a4:	f04f 0b10 	mov.w	fp, #16
  4027a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4027aa:	e006      	b.n	4027ba <_svfprintf_r+0xc46>
  4027ac:	00407450 	.word	0x00407450
  4027b0:	3e10      	subs	r6, #16
  4027b2:	2e10      	cmp	r6, #16
  4027b4:	f108 0808 	add.w	r8, r8, #8
  4027b8:	dd15      	ble.n	4027e6 <_svfprintf_r+0xc72>
  4027ba:	3701      	adds	r7, #1
  4027bc:	3210      	adds	r2, #16
  4027be:	2f07      	cmp	r7, #7
  4027c0:	9227      	str	r2, [sp, #156]	; 0x9c
  4027c2:	9726      	str	r7, [sp, #152]	; 0x98
  4027c4:	e888 0820 	stmia.w	r8, {r5, fp}
  4027c8:	ddf2      	ble.n	4027b0 <_svfprintf_r+0xc3c>
  4027ca:	aa25      	add	r2, sp, #148	; 0x94
  4027cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027ce:	4620      	mov	r0, r4
  4027d0:	f002 fb24 	bl	404e1c <__ssprint_r>
  4027d4:	2800      	cmp	r0, #0
  4027d6:	f47f aa9f 	bne.w	401d18 <_svfprintf_r+0x1a4>
  4027da:	3e10      	subs	r6, #16
  4027dc:	2e10      	cmp	r6, #16
  4027de:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4027e0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4027e2:	46c8      	mov	r8, r9
  4027e4:	dce9      	bgt.n	4027ba <_svfprintf_r+0xc46>
  4027e6:	4614      	mov	r4, r2
  4027e8:	3701      	adds	r7, #1
  4027ea:	4434      	add	r4, r6
  4027ec:	2f07      	cmp	r7, #7
  4027ee:	9427      	str	r4, [sp, #156]	; 0x9c
  4027f0:	9726      	str	r7, [sp, #152]	; 0x98
  4027f2:	e888 0060 	stmia.w	r8, {r5, r6}
  4027f6:	f77f aed9 	ble.w	4025ac <_svfprintf_r+0xa38>
  4027fa:	aa25      	add	r2, sp, #148	; 0x94
  4027fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027fe:	980c      	ldr	r0, [sp, #48]	; 0x30
  402800:	f002 fb0c 	bl	404e1c <__ssprint_r>
  402804:	2800      	cmp	r0, #0
  402806:	f47f aa87 	bne.w	401d18 <_svfprintf_r+0x1a4>
  40280a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40280c:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40280e:	46c8      	mov	r8, r9
  402810:	e6ce      	b.n	4025b0 <_svfprintf_r+0xa3c>
  402812:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402814:	6814      	ldr	r4, [r2, #0]
  402816:	4613      	mov	r3, r2
  402818:	3304      	adds	r3, #4
  40281a:	17e5      	asrs	r5, r4, #31
  40281c:	930f      	str	r3, [sp, #60]	; 0x3c
  40281e:	4622      	mov	r2, r4
  402820:	462b      	mov	r3, r5
  402822:	e4fa      	b.n	40221a <_svfprintf_r+0x6a6>
  402824:	3204      	adds	r2, #4
  402826:	681c      	ldr	r4, [r3, #0]
  402828:	920f      	str	r2, [sp, #60]	; 0x3c
  40282a:	2301      	movs	r3, #1
  40282c:	2500      	movs	r5, #0
  40282e:	f7ff ba94 	b.w	401d5a <_svfprintf_r+0x1e6>
  402832:	681c      	ldr	r4, [r3, #0]
  402834:	3304      	adds	r3, #4
  402836:	930f      	str	r3, [sp, #60]	; 0x3c
  402838:	2500      	movs	r5, #0
  40283a:	e421      	b.n	402080 <_svfprintf_r+0x50c>
  40283c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40283e:	460a      	mov	r2, r1
  402840:	3204      	adds	r2, #4
  402842:	680c      	ldr	r4, [r1, #0]
  402844:	920f      	str	r2, [sp, #60]	; 0x3c
  402846:	2500      	movs	r5, #0
  402848:	f7ff ba87 	b.w	401d5a <_svfprintf_r+0x1e6>
  40284c:	4614      	mov	r4, r2
  40284e:	3301      	adds	r3, #1
  402850:	4434      	add	r4, r6
  402852:	2b07      	cmp	r3, #7
  402854:	9427      	str	r4, [sp, #156]	; 0x9c
  402856:	9326      	str	r3, [sp, #152]	; 0x98
  402858:	e888 0060 	stmia.w	r8, {r5, r6}
  40285c:	f77f ab68 	ble.w	401f30 <_svfprintf_r+0x3bc>
  402860:	e6b3      	b.n	4025ca <_svfprintf_r+0xa56>
  402862:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402866:	f8cd b01c 	str.w	fp, [sp, #28]
  40286a:	ae42      	add	r6, sp, #264	; 0x108
  40286c:	3430      	adds	r4, #48	; 0x30
  40286e:	2301      	movs	r3, #1
  402870:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402874:	930e      	str	r3, [sp, #56]	; 0x38
  402876:	f7ff ba8d 	b.w	401d94 <_svfprintf_r+0x220>
  40287a:	aa25      	add	r2, sp, #148	; 0x94
  40287c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40287e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402880:	f002 facc 	bl	404e1c <__ssprint_r>
  402884:	2800      	cmp	r0, #0
  402886:	f47f aa47 	bne.w	401d18 <_svfprintf_r+0x1a4>
  40288a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40288c:	46c8      	mov	r8, r9
  40288e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402890:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402892:	429a      	cmp	r2, r3
  402894:	db44      	blt.n	402920 <_svfprintf_r+0xdac>
  402896:	9b07      	ldr	r3, [sp, #28]
  402898:	07d9      	lsls	r1, r3, #31
  40289a:	d441      	bmi.n	402920 <_svfprintf_r+0xdac>
  40289c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40289e:	9812      	ldr	r0, [sp, #72]	; 0x48
  4028a0:	1a9a      	subs	r2, r3, r2
  4028a2:	1a1d      	subs	r5, r3, r0
  4028a4:	4295      	cmp	r5, r2
  4028a6:	bfa8      	it	ge
  4028a8:	4615      	movge	r5, r2
  4028aa:	2d00      	cmp	r5, #0
  4028ac:	dd0e      	ble.n	4028cc <_svfprintf_r+0xd58>
  4028ae:	9926      	ldr	r1, [sp, #152]	; 0x98
  4028b0:	f8c8 5004 	str.w	r5, [r8, #4]
  4028b4:	3101      	adds	r1, #1
  4028b6:	4406      	add	r6, r0
  4028b8:	442c      	add	r4, r5
  4028ba:	2907      	cmp	r1, #7
  4028bc:	f8c8 6000 	str.w	r6, [r8]
  4028c0:	9427      	str	r4, [sp, #156]	; 0x9c
  4028c2:	9126      	str	r1, [sp, #152]	; 0x98
  4028c4:	f300 823b 	bgt.w	402d3e <_svfprintf_r+0x11ca>
  4028c8:	f108 0808 	add.w	r8, r8, #8
  4028cc:	2d00      	cmp	r5, #0
  4028ce:	bfac      	ite	ge
  4028d0:	1b56      	subge	r6, r2, r5
  4028d2:	4616      	movlt	r6, r2
  4028d4:	2e00      	cmp	r6, #0
  4028d6:	f77f ab2d 	ble.w	401f34 <_svfprintf_r+0x3c0>
  4028da:	2e10      	cmp	r6, #16
  4028dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028de:	4db0      	ldr	r5, [pc, #704]	; (402ba0 <_svfprintf_r+0x102c>)
  4028e0:	ddb5      	ble.n	40284e <_svfprintf_r+0xcda>
  4028e2:	4622      	mov	r2, r4
  4028e4:	2710      	movs	r7, #16
  4028e6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4028ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4028ec:	e004      	b.n	4028f8 <_svfprintf_r+0xd84>
  4028ee:	f108 0808 	add.w	r8, r8, #8
  4028f2:	3e10      	subs	r6, #16
  4028f4:	2e10      	cmp	r6, #16
  4028f6:	dda9      	ble.n	40284c <_svfprintf_r+0xcd8>
  4028f8:	3301      	adds	r3, #1
  4028fa:	3210      	adds	r2, #16
  4028fc:	2b07      	cmp	r3, #7
  4028fe:	9227      	str	r2, [sp, #156]	; 0x9c
  402900:	9326      	str	r3, [sp, #152]	; 0x98
  402902:	e888 00a0 	stmia.w	r8, {r5, r7}
  402906:	ddf2      	ble.n	4028ee <_svfprintf_r+0xd7a>
  402908:	aa25      	add	r2, sp, #148	; 0x94
  40290a:	4621      	mov	r1, r4
  40290c:	4658      	mov	r0, fp
  40290e:	f002 fa85 	bl	404e1c <__ssprint_r>
  402912:	2800      	cmp	r0, #0
  402914:	f47f aa00 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402918:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40291a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40291c:	46c8      	mov	r8, r9
  40291e:	e7e8      	b.n	4028f2 <_svfprintf_r+0xd7e>
  402920:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402922:	9819      	ldr	r0, [sp, #100]	; 0x64
  402924:	991a      	ldr	r1, [sp, #104]	; 0x68
  402926:	f8c8 1000 	str.w	r1, [r8]
  40292a:	3301      	adds	r3, #1
  40292c:	4404      	add	r4, r0
  40292e:	2b07      	cmp	r3, #7
  402930:	9427      	str	r4, [sp, #156]	; 0x9c
  402932:	f8c8 0004 	str.w	r0, [r8, #4]
  402936:	9326      	str	r3, [sp, #152]	; 0x98
  402938:	f300 81f5 	bgt.w	402d26 <_svfprintf_r+0x11b2>
  40293c:	f108 0808 	add.w	r8, r8, #8
  402940:	e7ac      	b.n	40289c <_svfprintf_r+0xd28>
  402942:	9b07      	ldr	r3, [sp, #28]
  402944:	07da      	lsls	r2, r3, #31
  402946:	f53f adfe 	bmi.w	402546 <_svfprintf_r+0x9d2>
  40294a:	3701      	adds	r7, #1
  40294c:	3401      	adds	r4, #1
  40294e:	2301      	movs	r3, #1
  402950:	2f07      	cmp	r7, #7
  402952:	9427      	str	r4, [sp, #156]	; 0x9c
  402954:	9726      	str	r7, [sp, #152]	; 0x98
  402956:	f8c8 6000 	str.w	r6, [r8]
  40295a:	f8c8 3004 	str.w	r3, [r8, #4]
  40295e:	f77f ae25 	ble.w	4025ac <_svfprintf_r+0xa38>
  402962:	e74a      	b.n	4027fa <_svfprintf_r+0xc86>
  402964:	aa25      	add	r2, sp, #148	; 0x94
  402966:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402968:	980c      	ldr	r0, [sp, #48]	; 0x30
  40296a:	f002 fa57 	bl	404e1c <__ssprint_r>
  40296e:	2800      	cmp	r0, #0
  402970:	f47f a9d2 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402974:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402976:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402978:	46c8      	mov	r8, r9
  40297a:	e5f2      	b.n	402562 <_svfprintf_r+0x9ee>
  40297c:	aa25      	add	r2, sp, #148	; 0x94
  40297e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402980:	980c      	ldr	r0, [sp, #48]	; 0x30
  402982:	f002 fa4b 	bl	404e1c <__ssprint_r>
  402986:	2800      	cmp	r0, #0
  402988:	f47f a9c6 	bne.w	401d18 <_svfprintf_r+0x1a4>
  40298c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40298e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402990:	46c8      	mov	r8, r9
  402992:	e5f5      	b.n	402580 <_svfprintf_r+0xa0c>
  402994:	464e      	mov	r6, r9
  402996:	f7ff b9fd 	b.w	401d94 <_svfprintf_r+0x220>
  40299a:	aa25      	add	r2, sp, #148	; 0x94
  40299c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40299e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029a0:	f002 fa3c 	bl	404e1c <__ssprint_r>
  4029a4:	2800      	cmp	r0, #0
  4029a6:	f47f a9b7 	bne.w	401d18 <_svfprintf_r+0x1a4>
  4029aa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4029ac:	46c8      	mov	r8, r9
  4029ae:	f7ff ba72 	b.w	401e96 <_svfprintf_r+0x322>
  4029b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4029b4:	4622      	mov	r2, r4
  4029b6:	4620      	mov	r0, r4
  4029b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4029ba:	4623      	mov	r3, r4
  4029bc:	4621      	mov	r1, r4
  4029be:	f003 faf3 	bl	405fa8 <__aeabi_dcmpun>
  4029c2:	2800      	cmp	r0, #0
  4029c4:	f040 8286 	bne.w	402ed4 <_svfprintf_r+0x1360>
  4029c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4029ca:	3301      	adds	r3, #1
  4029cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4029ce:	f023 0320 	bic.w	r3, r3, #32
  4029d2:	930e      	str	r3, [sp, #56]	; 0x38
  4029d4:	f000 81e2 	beq.w	402d9c <_svfprintf_r+0x1228>
  4029d8:	2b47      	cmp	r3, #71	; 0x47
  4029da:	f000 811e 	beq.w	402c1a <_svfprintf_r+0x10a6>
  4029de:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4029e2:	9307      	str	r3, [sp, #28]
  4029e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4029e6:	1e1f      	subs	r7, r3, #0
  4029e8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4029ea:	9308      	str	r3, [sp, #32]
  4029ec:	bfbb      	ittet	lt
  4029ee:	463b      	movlt	r3, r7
  4029f0:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  4029f4:	2300      	movge	r3, #0
  4029f6:	232d      	movlt	r3, #45	; 0x2d
  4029f8:	9310      	str	r3, [sp, #64]	; 0x40
  4029fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4029fc:	2b66      	cmp	r3, #102	; 0x66
  4029fe:	f000 81bb 	beq.w	402d78 <_svfprintf_r+0x1204>
  402a02:	2b46      	cmp	r3, #70	; 0x46
  402a04:	f000 80df 	beq.w	402bc6 <_svfprintf_r+0x1052>
  402a08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402a0a:	9a08      	ldr	r2, [sp, #32]
  402a0c:	2b45      	cmp	r3, #69	; 0x45
  402a0e:	bf0c      	ite	eq
  402a10:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402a12:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402a14:	a823      	add	r0, sp, #140	; 0x8c
  402a16:	a920      	add	r1, sp, #128	; 0x80
  402a18:	bf08      	it	eq
  402a1a:	1c5d      	addeq	r5, r3, #1
  402a1c:	9004      	str	r0, [sp, #16]
  402a1e:	9103      	str	r1, [sp, #12]
  402a20:	a81f      	add	r0, sp, #124	; 0x7c
  402a22:	2102      	movs	r1, #2
  402a24:	463b      	mov	r3, r7
  402a26:	9002      	str	r0, [sp, #8]
  402a28:	9501      	str	r5, [sp, #4]
  402a2a:	9100      	str	r1, [sp, #0]
  402a2c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a2e:	f000 fb73 	bl	403118 <_dtoa_r>
  402a32:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402a34:	2b67      	cmp	r3, #103	; 0x67
  402a36:	4606      	mov	r6, r0
  402a38:	f040 81e0 	bne.w	402dfc <_svfprintf_r+0x1288>
  402a3c:	f01b 0f01 	tst.w	fp, #1
  402a40:	f000 8246 	beq.w	402ed0 <_svfprintf_r+0x135c>
  402a44:	1974      	adds	r4, r6, r5
  402a46:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402a48:	9808      	ldr	r0, [sp, #32]
  402a4a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402a4c:	4639      	mov	r1, r7
  402a4e:	f003 fa79 	bl	405f44 <__aeabi_dcmpeq>
  402a52:	2800      	cmp	r0, #0
  402a54:	f040 8165 	bne.w	402d22 <_svfprintf_r+0x11ae>
  402a58:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402a5a:	42a3      	cmp	r3, r4
  402a5c:	d206      	bcs.n	402a6c <_svfprintf_r+0xef8>
  402a5e:	2130      	movs	r1, #48	; 0x30
  402a60:	1c5a      	adds	r2, r3, #1
  402a62:	9223      	str	r2, [sp, #140]	; 0x8c
  402a64:	7019      	strb	r1, [r3, #0]
  402a66:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402a68:	429c      	cmp	r4, r3
  402a6a:	d8f9      	bhi.n	402a60 <_svfprintf_r+0xeec>
  402a6c:	1b9b      	subs	r3, r3, r6
  402a6e:	9313      	str	r3, [sp, #76]	; 0x4c
  402a70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402a72:	2b47      	cmp	r3, #71	; 0x47
  402a74:	f000 80e9 	beq.w	402c4a <_svfprintf_r+0x10d6>
  402a78:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402a7a:	2b65      	cmp	r3, #101	; 0x65
  402a7c:	f340 81cd 	ble.w	402e1a <_svfprintf_r+0x12a6>
  402a80:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402a82:	2b66      	cmp	r3, #102	; 0x66
  402a84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402a86:	9312      	str	r3, [sp, #72]	; 0x48
  402a88:	f000 819e 	beq.w	402dc8 <_svfprintf_r+0x1254>
  402a8c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402a8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402a90:	4619      	mov	r1, r3
  402a92:	4291      	cmp	r1, r2
  402a94:	f300 818a 	bgt.w	402dac <_svfprintf_r+0x1238>
  402a98:	f01b 0f01 	tst.w	fp, #1
  402a9c:	f040 8213 	bne.w	402ec6 <_svfprintf_r+0x1352>
  402aa0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402aa4:	9308      	str	r3, [sp, #32]
  402aa6:	2367      	movs	r3, #103	; 0x67
  402aa8:	920e      	str	r2, [sp, #56]	; 0x38
  402aaa:	9311      	str	r3, [sp, #68]	; 0x44
  402aac:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402aae:	2b00      	cmp	r3, #0
  402ab0:	f040 80c4 	bne.w	402c3c <_svfprintf_r+0x10c8>
  402ab4:	930a      	str	r3, [sp, #40]	; 0x28
  402ab6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402aba:	f7ff b973 	b.w	401da4 <_svfprintf_r+0x230>
  402abe:	4635      	mov	r5, r6
  402ac0:	460c      	mov	r4, r1
  402ac2:	4646      	mov	r6, r8
  402ac4:	4690      	mov	r8, r2
  402ac6:	3301      	adds	r3, #1
  402ac8:	443c      	add	r4, r7
  402aca:	2b07      	cmp	r3, #7
  402acc:	9427      	str	r4, [sp, #156]	; 0x9c
  402ace:	9326      	str	r3, [sp, #152]	; 0x98
  402ad0:	e888 00a0 	stmia.w	r8, {r5, r7}
  402ad4:	f73f aed1 	bgt.w	40287a <_svfprintf_r+0xd06>
  402ad8:	f108 0808 	add.w	r8, r8, #8
  402adc:	e6d7      	b.n	40288e <_svfprintf_r+0xd1a>
  402ade:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402ae0:	6813      	ldr	r3, [r2, #0]
  402ae2:	3204      	adds	r2, #4
  402ae4:	920f      	str	r2, [sp, #60]	; 0x3c
  402ae6:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402ae8:	601a      	str	r2, [r3, #0]
  402aea:	f7ff b86a 	b.w	401bc2 <_svfprintf_r+0x4e>
  402aee:	aa25      	add	r2, sp, #148	; 0x94
  402af0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402af2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402af4:	f002 f992 	bl	404e1c <__ssprint_r>
  402af8:	2800      	cmp	r0, #0
  402afa:	f47f a90d 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402afe:	46c8      	mov	r8, r9
  402b00:	e48d      	b.n	40241e <_svfprintf_r+0x8aa>
  402b02:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b04:	4a27      	ldr	r2, [pc, #156]	; (402ba4 <_svfprintf_r+0x1030>)
  402b06:	f8c8 2000 	str.w	r2, [r8]
  402b0a:	3301      	adds	r3, #1
  402b0c:	3401      	adds	r4, #1
  402b0e:	2201      	movs	r2, #1
  402b10:	2b07      	cmp	r3, #7
  402b12:	9427      	str	r4, [sp, #156]	; 0x9c
  402b14:	9326      	str	r3, [sp, #152]	; 0x98
  402b16:	f8c8 2004 	str.w	r2, [r8, #4]
  402b1a:	dc72      	bgt.n	402c02 <_svfprintf_r+0x108e>
  402b1c:	f108 0808 	add.w	r8, r8, #8
  402b20:	b929      	cbnz	r1, 402b2e <_svfprintf_r+0xfba>
  402b22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b24:	b91b      	cbnz	r3, 402b2e <_svfprintf_r+0xfba>
  402b26:	9b07      	ldr	r3, [sp, #28]
  402b28:	07d8      	lsls	r0, r3, #31
  402b2a:	f57f aa03 	bpl.w	401f34 <_svfprintf_r+0x3c0>
  402b2e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b30:	9819      	ldr	r0, [sp, #100]	; 0x64
  402b32:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402b34:	f8c8 2000 	str.w	r2, [r8]
  402b38:	3301      	adds	r3, #1
  402b3a:	4602      	mov	r2, r0
  402b3c:	4422      	add	r2, r4
  402b3e:	2b07      	cmp	r3, #7
  402b40:	9227      	str	r2, [sp, #156]	; 0x9c
  402b42:	f8c8 0004 	str.w	r0, [r8, #4]
  402b46:	9326      	str	r3, [sp, #152]	; 0x98
  402b48:	f300 818d 	bgt.w	402e66 <_svfprintf_r+0x12f2>
  402b4c:	f108 0808 	add.w	r8, r8, #8
  402b50:	2900      	cmp	r1, #0
  402b52:	f2c0 8165 	blt.w	402e20 <_svfprintf_r+0x12ac>
  402b56:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402b58:	f8c8 6000 	str.w	r6, [r8]
  402b5c:	3301      	adds	r3, #1
  402b5e:	188c      	adds	r4, r1, r2
  402b60:	2b07      	cmp	r3, #7
  402b62:	9427      	str	r4, [sp, #156]	; 0x9c
  402b64:	9326      	str	r3, [sp, #152]	; 0x98
  402b66:	f8c8 1004 	str.w	r1, [r8, #4]
  402b6a:	f77f a9e1 	ble.w	401f30 <_svfprintf_r+0x3bc>
  402b6e:	e52c      	b.n	4025ca <_svfprintf_r+0xa56>
  402b70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402b72:	9909      	ldr	r1, [sp, #36]	; 0x24
  402b74:	6813      	ldr	r3, [r2, #0]
  402b76:	17cd      	asrs	r5, r1, #31
  402b78:	4608      	mov	r0, r1
  402b7a:	3204      	adds	r2, #4
  402b7c:	4629      	mov	r1, r5
  402b7e:	920f      	str	r2, [sp, #60]	; 0x3c
  402b80:	e9c3 0100 	strd	r0, r1, [r3]
  402b84:	f7ff b81d 	b.w	401bc2 <_svfprintf_r+0x4e>
  402b88:	aa25      	add	r2, sp, #148	; 0x94
  402b8a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b8c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b8e:	f002 f945 	bl	404e1c <__ssprint_r>
  402b92:	2800      	cmp	r0, #0
  402b94:	f47f a8c0 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402b98:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b9a:	46c8      	mov	r8, r9
  402b9c:	e458      	b.n	402450 <_svfprintf_r+0x8dc>
  402b9e:	bf00      	nop
  402ba0:	00407450 	.word	0x00407450
  402ba4:	0040743c 	.word	0x0040743c
  402ba8:	2140      	movs	r1, #64	; 0x40
  402baa:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bac:	f001 fa0a 	bl	403fc4 <_malloc_r>
  402bb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402bb2:	6010      	str	r0, [r2, #0]
  402bb4:	6110      	str	r0, [r2, #16]
  402bb6:	2800      	cmp	r0, #0
  402bb8:	f000 81f2 	beq.w	402fa0 <_svfprintf_r+0x142c>
  402bbc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402bbe:	2340      	movs	r3, #64	; 0x40
  402bc0:	6153      	str	r3, [r2, #20]
  402bc2:	f7fe bfee 	b.w	401ba2 <_svfprintf_r+0x2e>
  402bc6:	a823      	add	r0, sp, #140	; 0x8c
  402bc8:	a920      	add	r1, sp, #128	; 0x80
  402bca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402bcc:	9004      	str	r0, [sp, #16]
  402bce:	9103      	str	r1, [sp, #12]
  402bd0:	a81f      	add	r0, sp, #124	; 0x7c
  402bd2:	2103      	movs	r1, #3
  402bd4:	9002      	str	r0, [sp, #8]
  402bd6:	9a08      	ldr	r2, [sp, #32]
  402bd8:	9401      	str	r4, [sp, #4]
  402bda:	463b      	mov	r3, r7
  402bdc:	9100      	str	r1, [sp, #0]
  402bde:	980c      	ldr	r0, [sp, #48]	; 0x30
  402be0:	f000 fa9a 	bl	403118 <_dtoa_r>
  402be4:	4625      	mov	r5, r4
  402be6:	4606      	mov	r6, r0
  402be8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402bea:	2b46      	cmp	r3, #70	; 0x46
  402bec:	eb06 0405 	add.w	r4, r6, r5
  402bf0:	f47f af29 	bne.w	402a46 <_svfprintf_r+0xed2>
  402bf4:	7833      	ldrb	r3, [r6, #0]
  402bf6:	2b30      	cmp	r3, #48	; 0x30
  402bf8:	f000 8178 	beq.w	402eec <_svfprintf_r+0x1378>
  402bfc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402bfe:	442c      	add	r4, r5
  402c00:	e721      	b.n	402a46 <_svfprintf_r+0xed2>
  402c02:	aa25      	add	r2, sp, #148	; 0x94
  402c04:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c06:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c08:	f002 f908 	bl	404e1c <__ssprint_r>
  402c0c:	2800      	cmp	r0, #0
  402c0e:	f47f a883 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402c12:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402c14:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c16:	46c8      	mov	r8, r9
  402c18:	e782      	b.n	402b20 <_svfprintf_r+0xfac>
  402c1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402c1c:	2b00      	cmp	r3, #0
  402c1e:	bf08      	it	eq
  402c20:	2301      	moveq	r3, #1
  402c22:	930a      	str	r3, [sp, #40]	; 0x28
  402c24:	e6db      	b.n	4029de <_svfprintf_r+0xe6a>
  402c26:	4630      	mov	r0, r6
  402c28:	940a      	str	r4, [sp, #40]	; 0x28
  402c2a:	f002 f889 	bl	404d40 <strlen>
  402c2e:	950f      	str	r5, [sp, #60]	; 0x3c
  402c30:	900e      	str	r0, [sp, #56]	; 0x38
  402c32:	f8cd b01c 	str.w	fp, [sp, #28]
  402c36:	4603      	mov	r3, r0
  402c38:	f7ff b9f9 	b.w	40202e <_svfprintf_r+0x4ba>
  402c3c:	272d      	movs	r7, #45	; 0x2d
  402c3e:	2300      	movs	r3, #0
  402c40:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402c44:	930a      	str	r3, [sp, #40]	; 0x28
  402c46:	f7ff b8ae 	b.w	401da6 <_svfprintf_r+0x232>
  402c4a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402c4c:	9312      	str	r3, [sp, #72]	; 0x48
  402c4e:	461a      	mov	r2, r3
  402c50:	3303      	adds	r3, #3
  402c52:	db04      	blt.n	402c5e <_svfprintf_r+0x10ea>
  402c54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402c56:	4619      	mov	r1, r3
  402c58:	4291      	cmp	r1, r2
  402c5a:	f6bf af17 	bge.w	402a8c <_svfprintf_r+0xf18>
  402c5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c60:	3b02      	subs	r3, #2
  402c62:	9311      	str	r3, [sp, #68]	; 0x44
  402c64:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402c68:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402c6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402c6e:	3b01      	subs	r3, #1
  402c70:	2b00      	cmp	r3, #0
  402c72:	931f      	str	r3, [sp, #124]	; 0x7c
  402c74:	bfbd      	ittte	lt
  402c76:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402c78:	f1c3 0301 	rsblt	r3, r3, #1
  402c7c:	222d      	movlt	r2, #45	; 0x2d
  402c7e:	222b      	movge	r2, #43	; 0x2b
  402c80:	2b09      	cmp	r3, #9
  402c82:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402c86:	f340 8116 	ble.w	402eb6 <_svfprintf_r+0x1342>
  402c8a:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402c8e:	4620      	mov	r0, r4
  402c90:	4dab      	ldr	r5, [pc, #684]	; (402f40 <_svfprintf_r+0x13cc>)
  402c92:	e000      	b.n	402c96 <_svfprintf_r+0x1122>
  402c94:	4610      	mov	r0, r2
  402c96:	fb85 1203 	smull	r1, r2, r5, r3
  402c9a:	17d9      	asrs	r1, r3, #31
  402c9c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402ca0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402ca4:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402ca8:	3230      	adds	r2, #48	; 0x30
  402caa:	2909      	cmp	r1, #9
  402cac:	f800 2c01 	strb.w	r2, [r0, #-1]
  402cb0:	460b      	mov	r3, r1
  402cb2:	f100 32ff 	add.w	r2, r0, #4294967295
  402cb6:	dced      	bgt.n	402c94 <_svfprintf_r+0x1120>
  402cb8:	3330      	adds	r3, #48	; 0x30
  402cba:	3802      	subs	r0, #2
  402cbc:	b2d9      	uxtb	r1, r3
  402cbe:	4284      	cmp	r4, r0
  402cc0:	f802 1c01 	strb.w	r1, [r2, #-1]
  402cc4:	f240 8165 	bls.w	402f92 <_svfprintf_r+0x141e>
  402cc8:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402ccc:	4613      	mov	r3, r2
  402cce:	e001      	b.n	402cd4 <_svfprintf_r+0x1160>
  402cd0:	f813 1b01 	ldrb.w	r1, [r3], #1
  402cd4:	f800 1b01 	strb.w	r1, [r0], #1
  402cd8:	42a3      	cmp	r3, r4
  402cda:	d1f9      	bne.n	402cd0 <_svfprintf_r+0x115c>
  402cdc:	3301      	adds	r3, #1
  402cde:	1a9b      	subs	r3, r3, r2
  402ce0:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402ce4:	4413      	add	r3, r2
  402ce6:	aa21      	add	r2, sp, #132	; 0x84
  402ce8:	1a9b      	subs	r3, r3, r2
  402cea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402cec:	931b      	str	r3, [sp, #108]	; 0x6c
  402cee:	2a01      	cmp	r2, #1
  402cf0:	4413      	add	r3, r2
  402cf2:	930e      	str	r3, [sp, #56]	; 0x38
  402cf4:	f340 8119 	ble.w	402f2a <_svfprintf_r+0x13b6>
  402cf8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402cfa:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402cfc:	4413      	add	r3, r2
  402cfe:	930e      	str	r3, [sp, #56]	; 0x38
  402d00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402d04:	9308      	str	r3, [sp, #32]
  402d06:	2300      	movs	r3, #0
  402d08:	9312      	str	r3, [sp, #72]	; 0x48
  402d0a:	e6cf      	b.n	402aac <_svfprintf_r+0xf38>
  402d0c:	aa25      	add	r2, sp, #148	; 0x94
  402d0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d10:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d12:	f002 f883 	bl	404e1c <__ssprint_r>
  402d16:	2800      	cmp	r0, #0
  402d18:	f47e affe 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402d1c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d1e:	46c8      	mov	r8, r9
  402d20:	e4d7      	b.n	4026d2 <_svfprintf_r+0xb5e>
  402d22:	4623      	mov	r3, r4
  402d24:	e6a2      	b.n	402a6c <_svfprintf_r+0xef8>
  402d26:	aa25      	add	r2, sp, #148	; 0x94
  402d28:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d2a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d2c:	f002 f876 	bl	404e1c <__ssprint_r>
  402d30:	2800      	cmp	r0, #0
  402d32:	f47e aff1 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402d36:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402d38:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d3a:	46c8      	mov	r8, r9
  402d3c:	e5ae      	b.n	40289c <_svfprintf_r+0xd28>
  402d3e:	aa25      	add	r2, sp, #148	; 0x94
  402d40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d42:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d44:	f002 f86a 	bl	404e1c <__ssprint_r>
  402d48:	2800      	cmp	r0, #0
  402d4a:	f47e afe5 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402d4e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402d50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d52:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d54:	1a9a      	subs	r2, r3, r2
  402d56:	46c8      	mov	r8, r9
  402d58:	e5b8      	b.n	4028cc <_svfprintf_r+0xd58>
  402d5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402d5c:	9612      	str	r6, [sp, #72]	; 0x48
  402d5e:	2b06      	cmp	r3, #6
  402d60:	bf28      	it	cs
  402d62:	2306      	movcs	r3, #6
  402d64:	960a      	str	r6, [sp, #40]	; 0x28
  402d66:	4637      	mov	r7, r6
  402d68:	9308      	str	r3, [sp, #32]
  402d6a:	950f      	str	r5, [sp, #60]	; 0x3c
  402d6c:	f8cd b01c 	str.w	fp, [sp, #28]
  402d70:	930e      	str	r3, [sp, #56]	; 0x38
  402d72:	4e74      	ldr	r6, [pc, #464]	; (402f44 <_svfprintf_r+0x13d0>)
  402d74:	f7ff b816 	b.w	401da4 <_svfprintf_r+0x230>
  402d78:	a823      	add	r0, sp, #140	; 0x8c
  402d7a:	a920      	add	r1, sp, #128	; 0x80
  402d7c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402d7e:	9004      	str	r0, [sp, #16]
  402d80:	9103      	str	r1, [sp, #12]
  402d82:	a81f      	add	r0, sp, #124	; 0x7c
  402d84:	2103      	movs	r1, #3
  402d86:	9002      	str	r0, [sp, #8]
  402d88:	9a08      	ldr	r2, [sp, #32]
  402d8a:	9501      	str	r5, [sp, #4]
  402d8c:	463b      	mov	r3, r7
  402d8e:	9100      	str	r1, [sp, #0]
  402d90:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d92:	f000 f9c1 	bl	403118 <_dtoa_r>
  402d96:	4606      	mov	r6, r0
  402d98:	1944      	adds	r4, r0, r5
  402d9a:	e72b      	b.n	402bf4 <_svfprintf_r+0x1080>
  402d9c:	2306      	movs	r3, #6
  402d9e:	930a      	str	r3, [sp, #40]	; 0x28
  402da0:	e61d      	b.n	4029de <_svfprintf_r+0xe6a>
  402da2:	272d      	movs	r7, #45	; 0x2d
  402da4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402da8:	f7ff bacd 	b.w	402346 <_svfprintf_r+0x7d2>
  402dac:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402dae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402db0:	4413      	add	r3, r2
  402db2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402db4:	930e      	str	r3, [sp, #56]	; 0x38
  402db6:	2a00      	cmp	r2, #0
  402db8:	f340 80b0 	ble.w	402f1c <_svfprintf_r+0x13a8>
  402dbc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402dc0:	9308      	str	r3, [sp, #32]
  402dc2:	2367      	movs	r3, #103	; 0x67
  402dc4:	9311      	str	r3, [sp, #68]	; 0x44
  402dc6:	e671      	b.n	402aac <_svfprintf_r+0xf38>
  402dc8:	2b00      	cmp	r3, #0
  402dca:	f340 80c3 	ble.w	402f54 <_svfprintf_r+0x13e0>
  402dce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402dd0:	2a00      	cmp	r2, #0
  402dd2:	f040 8099 	bne.w	402f08 <_svfprintf_r+0x1394>
  402dd6:	f01b 0f01 	tst.w	fp, #1
  402dda:	f040 8095 	bne.w	402f08 <_svfprintf_r+0x1394>
  402dde:	9308      	str	r3, [sp, #32]
  402de0:	930e      	str	r3, [sp, #56]	; 0x38
  402de2:	e663      	b.n	402aac <_svfprintf_r+0xf38>
  402de4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402de6:	9308      	str	r3, [sp, #32]
  402de8:	930e      	str	r3, [sp, #56]	; 0x38
  402dea:	900a      	str	r0, [sp, #40]	; 0x28
  402dec:	950f      	str	r5, [sp, #60]	; 0x3c
  402dee:	f8cd b01c 	str.w	fp, [sp, #28]
  402df2:	9012      	str	r0, [sp, #72]	; 0x48
  402df4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402df8:	f7fe bfd4 	b.w	401da4 <_svfprintf_r+0x230>
  402dfc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402dfe:	2b47      	cmp	r3, #71	; 0x47
  402e00:	f47f ae20 	bne.w	402a44 <_svfprintf_r+0xed0>
  402e04:	f01b 0f01 	tst.w	fp, #1
  402e08:	f47f aeee 	bne.w	402be8 <_svfprintf_r+0x1074>
  402e0c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402e0e:	1b9b      	subs	r3, r3, r6
  402e10:	9313      	str	r3, [sp, #76]	; 0x4c
  402e12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402e14:	2b47      	cmp	r3, #71	; 0x47
  402e16:	f43f af18 	beq.w	402c4a <_svfprintf_r+0x10d6>
  402e1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402e1c:	9312      	str	r3, [sp, #72]	; 0x48
  402e1e:	e721      	b.n	402c64 <_svfprintf_r+0x10f0>
  402e20:	424f      	negs	r7, r1
  402e22:	3110      	adds	r1, #16
  402e24:	4d48      	ldr	r5, [pc, #288]	; (402f48 <_svfprintf_r+0x13d4>)
  402e26:	da2f      	bge.n	402e88 <_svfprintf_r+0x1314>
  402e28:	2410      	movs	r4, #16
  402e2a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402e2e:	e004      	b.n	402e3a <_svfprintf_r+0x12c6>
  402e30:	f108 0808 	add.w	r8, r8, #8
  402e34:	3f10      	subs	r7, #16
  402e36:	2f10      	cmp	r7, #16
  402e38:	dd26      	ble.n	402e88 <_svfprintf_r+0x1314>
  402e3a:	3301      	adds	r3, #1
  402e3c:	3210      	adds	r2, #16
  402e3e:	2b07      	cmp	r3, #7
  402e40:	9227      	str	r2, [sp, #156]	; 0x9c
  402e42:	9326      	str	r3, [sp, #152]	; 0x98
  402e44:	f8c8 5000 	str.w	r5, [r8]
  402e48:	f8c8 4004 	str.w	r4, [r8, #4]
  402e4c:	ddf0      	ble.n	402e30 <_svfprintf_r+0x12bc>
  402e4e:	aa25      	add	r2, sp, #148	; 0x94
  402e50:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e52:	4658      	mov	r0, fp
  402e54:	f001 ffe2 	bl	404e1c <__ssprint_r>
  402e58:	2800      	cmp	r0, #0
  402e5a:	f47e af5d 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402e5e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402e60:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e62:	46c8      	mov	r8, r9
  402e64:	e7e6      	b.n	402e34 <_svfprintf_r+0x12c0>
  402e66:	aa25      	add	r2, sp, #148	; 0x94
  402e68:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e6c:	f001 ffd6 	bl	404e1c <__ssprint_r>
  402e70:	2800      	cmp	r0, #0
  402e72:	f47e af51 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402e76:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402e78:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402e7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e7c:	46c8      	mov	r8, r9
  402e7e:	e667      	b.n	402b50 <_svfprintf_r+0xfdc>
  402e80:	2000      	movs	r0, #0
  402e82:	900a      	str	r0, [sp, #40]	; 0x28
  402e84:	f7fe bed0 	b.w	401c28 <_svfprintf_r+0xb4>
  402e88:	3301      	adds	r3, #1
  402e8a:	443a      	add	r2, r7
  402e8c:	2b07      	cmp	r3, #7
  402e8e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402e92:	9227      	str	r2, [sp, #156]	; 0x9c
  402e94:	9326      	str	r3, [sp, #152]	; 0x98
  402e96:	f108 0808 	add.w	r8, r8, #8
  402e9a:	f77f ae5c 	ble.w	402b56 <_svfprintf_r+0xfe2>
  402e9e:	aa25      	add	r2, sp, #148	; 0x94
  402ea0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ea2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ea4:	f001 ffba 	bl	404e1c <__ssprint_r>
  402ea8:	2800      	cmp	r0, #0
  402eaa:	f47e af35 	bne.w	401d18 <_svfprintf_r+0x1a4>
  402eae:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402eb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402eb2:	46c8      	mov	r8, r9
  402eb4:	e64f      	b.n	402b56 <_svfprintf_r+0xfe2>
  402eb6:	3330      	adds	r3, #48	; 0x30
  402eb8:	2230      	movs	r2, #48	; 0x30
  402eba:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  402ebe:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  402ec2:	ab22      	add	r3, sp, #136	; 0x88
  402ec4:	e70f      	b.n	402ce6 <_svfprintf_r+0x1172>
  402ec6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402ec8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402eca:	4413      	add	r3, r2
  402ecc:	930e      	str	r3, [sp, #56]	; 0x38
  402ece:	e775      	b.n	402dbc <_svfprintf_r+0x1248>
  402ed0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402ed2:	e5cb      	b.n	402a6c <_svfprintf_r+0xef8>
  402ed4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402ed6:	4e1d      	ldr	r6, [pc, #116]	; (402f4c <_svfprintf_r+0x13d8>)
  402ed8:	2b00      	cmp	r3, #0
  402eda:	bfb6      	itet	lt
  402edc:	272d      	movlt	r7, #45	; 0x2d
  402ede:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  402ee2:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  402ee6:	4b1a      	ldr	r3, [pc, #104]	; (402f50 <_svfprintf_r+0x13dc>)
  402ee8:	f7ff ba2f 	b.w	40234a <_svfprintf_r+0x7d6>
  402eec:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402eee:	9808      	ldr	r0, [sp, #32]
  402ef0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402ef2:	4639      	mov	r1, r7
  402ef4:	f003 f826 	bl	405f44 <__aeabi_dcmpeq>
  402ef8:	2800      	cmp	r0, #0
  402efa:	f47f ae7f 	bne.w	402bfc <_svfprintf_r+0x1088>
  402efe:	f1c5 0501 	rsb	r5, r5, #1
  402f02:	951f      	str	r5, [sp, #124]	; 0x7c
  402f04:	442c      	add	r4, r5
  402f06:	e59e      	b.n	402a46 <_svfprintf_r+0xed2>
  402f08:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f0a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402f0c:	4413      	add	r3, r2
  402f0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402f10:	441a      	add	r2, r3
  402f12:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402f16:	920e      	str	r2, [sp, #56]	; 0x38
  402f18:	9308      	str	r3, [sp, #32]
  402f1a:	e5c7      	b.n	402aac <_svfprintf_r+0xf38>
  402f1c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402f20:	f1c3 0301 	rsb	r3, r3, #1
  402f24:	441a      	add	r2, r3
  402f26:	4613      	mov	r3, r2
  402f28:	e7d0      	b.n	402ecc <_svfprintf_r+0x1358>
  402f2a:	f01b 0301 	ands.w	r3, fp, #1
  402f2e:	9312      	str	r3, [sp, #72]	; 0x48
  402f30:	f47f aee2 	bne.w	402cf8 <_svfprintf_r+0x1184>
  402f34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402f36:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402f3a:	9308      	str	r3, [sp, #32]
  402f3c:	e5b6      	b.n	402aac <_svfprintf_r+0xf38>
  402f3e:	bf00      	nop
  402f40:	66666667 	.word	0x66666667
  402f44:	00407434 	.word	0x00407434
  402f48:	00407450 	.word	0x00407450
  402f4c:	00407408 	.word	0x00407408
  402f50:	00407404 	.word	0x00407404
  402f54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f56:	b913      	cbnz	r3, 402f5e <_svfprintf_r+0x13ea>
  402f58:	f01b 0f01 	tst.w	fp, #1
  402f5c:	d002      	beq.n	402f64 <_svfprintf_r+0x13f0>
  402f5e:	9b19      	ldr	r3, [sp, #100]	; 0x64
  402f60:	3301      	adds	r3, #1
  402f62:	e7d4      	b.n	402f0e <_svfprintf_r+0x139a>
  402f64:	2301      	movs	r3, #1
  402f66:	e73a      	b.n	402dde <_svfprintf_r+0x126a>
  402f68:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402f6a:	f89a 3001 	ldrb.w	r3, [sl, #1]
  402f6e:	6828      	ldr	r0, [r5, #0]
  402f70:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  402f74:	900a      	str	r0, [sp, #40]	; 0x28
  402f76:	4628      	mov	r0, r5
  402f78:	3004      	adds	r0, #4
  402f7a:	46a2      	mov	sl, r4
  402f7c:	900f      	str	r0, [sp, #60]	; 0x3c
  402f7e:	f7fe be51 	b.w	401c24 <_svfprintf_r+0xb0>
  402f82:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402f86:	f7ff b867 	b.w	402058 <_svfprintf_r+0x4e4>
  402f8a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402f8e:	f7ff ba15 	b.w	4023bc <_svfprintf_r+0x848>
  402f92:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  402f96:	e6a6      	b.n	402ce6 <_svfprintf_r+0x1172>
  402f98:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402f9c:	f7ff b8eb 	b.w	402176 <_svfprintf_r+0x602>
  402fa0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  402fa2:	230c      	movs	r3, #12
  402fa4:	6013      	str	r3, [r2, #0]
  402fa6:	f04f 33ff 	mov.w	r3, #4294967295
  402faa:	9309      	str	r3, [sp, #36]	; 0x24
  402fac:	f7fe bebd 	b.w	401d2a <_svfprintf_r+0x1b6>
  402fb0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402fb4:	f7ff b99a 	b.w	4022ec <_svfprintf_r+0x778>
  402fb8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402fbc:	f7ff b976 	b.w	4022ac <_svfprintf_r+0x738>
  402fc0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402fc4:	f7ff b959 	b.w	40227a <_svfprintf_r+0x706>
  402fc8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402fcc:	f7ff b912 	b.w	4021f4 <_svfprintf_r+0x680>

00402fd0 <register_fini>:
  402fd0:	4b02      	ldr	r3, [pc, #8]	; (402fdc <register_fini+0xc>)
  402fd2:	b113      	cbz	r3, 402fda <register_fini+0xa>
  402fd4:	4802      	ldr	r0, [pc, #8]	; (402fe0 <register_fini+0x10>)
  402fd6:	f000 b805 	b.w	402fe4 <atexit>
  402fda:	4770      	bx	lr
  402fdc:	00000000 	.word	0x00000000
  402fe0:	00403f6d 	.word	0x00403f6d

00402fe4 <atexit>:
  402fe4:	2300      	movs	r3, #0
  402fe6:	4601      	mov	r1, r0
  402fe8:	461a      	mov	r2, r3
  402fea:	4618      	mov	r0, r3
  402fec:	f001 bf94 	b.w	404f18 <__register_exitproc>

00402ff0 <quorem>:
  402ff0:	6902      	ldr	r2, [r0, #16]
  402ff2:	690b      	ldr	r3, [r1, #16]
  402ff4:	4293      	cmp	r3, r2
  402ff6:	f300 808d 	bgt.w	403114 <quorem+0x124>
  402ffa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402ffe:	f103 38ff 	add.w	r8, r3, #4294967295
  403002:	f101 0714 	add.w	r7, r1, #20
  403006:	f100 0b14 	add.w	fp, r0, #20
  40300a:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40300e:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403012:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403016:	b083      	sub	sp, #12
  403018:	3201      	adds	r2, #1
  40301a:	fbb3 f9f2 	udiv	r9, r3, r2
  40301e:	eb0b 0304 	add.w	r3, fp, r4
  403022:	9400      	str	r4, [sp, #0]
  403024:	eb07 0a04 	add.w	sl, r7, r4
  403028:	9301      	str	r3, [sp, #4]
  40302a:	f1b9 0f00 	cmp.w	r9, #0
  40302e:	d039      	beq.n	4030a4 <quorem+0xb4>
  403030:	2500      	movs	r5, #0
  403032:	462e      	mov	r6, r5
  403034:	46bc      	mov	ip, r7
  403036:	46de      	mov	lr, fp
  403038:	f85c 4b04 	ldr.w	r4, [ip], #4
  40303c:	f8de 3000 	ldr.w	r3, [lr]
  403040:	b2a2      	uxth	r2, r4
  403042:	fb09 5502 	mla	r5, r9, r2, r5
  403046:	0c22      	lsrs	r2, r4, #16
  403048:	0c2c      	lsrs	r4, r5, #16
  40304a:	fb09 4202 	mla	r2, r9, r2, r4
  40304e:	b2ad      	uxth	r5, r5
  403050:	1b75      	subs	r5, r6, r5
  403052:	b296      	uxth	r6, r2
  403054:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403058:	fa15 f383 	uxtah	r3, r5, r3
  40305c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403060:	b29b      	uxth	r3, r3
  403062:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403066:	45e2      	cmp	sl, ip
  403068:	ea4f 4512 	mov.w	r5, r2, lsr #16
  40306c:	f84e 3b04 	str.w	r3, [lr], #4
  403070:	ea4f 4626 	mov.w	r6, r6, asr #16
  403074:	d2e0      	bcs.n	403038 <quorem+0x48>
  403076:	9b00      	ldr	r3, [sp, #0]
  403078:	f85b 3003 	ldr.w	r3, [fp, r3]
  40307c:	b993      	cbnz	r3, 4030a4 <quorem+0xb4>
  40307e:	9c01      	ldr	r4, [sp, #4]
  403080:	1f23      	subs	r3, r4, #4
  403082:	459b      	cmp	fp, r3
  403084:	d20c      	bcs.n	4030a0 <quorem+0xb0>
  403086:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40308a:	b94b      	cbnz	r3, 4030a0 <quorem+0xb0>
  40308c:	f1a4 0308 	sub.w	r3, r4, #8
  403090:	e002      	b.n	403098 <quorem+0xa8>
  403092:	681a      	ldr	r2, [r3, #0]
  403094:	3b04      	subs	r3, #4
  403096:	b91a      	cbnz	r2, 4030a0 <quorem+0xb0>
  403098:	459b      	cmp	fp, r3
  40309a:	f108 38ff 	add.w	r8, r8, #4294967295
  40309e:	d3f8      	bcc.n	403092 <quorem+0xa2>
  4030a0:	f8c0 8010 	str.w	r8, [r0, #16]
  4030a4:	4604      	mov	r4, r0
  4030a6:	f001 fd37 	bl	404b18 <__mcmp>
  4030aa:	2800      	cmp	r0, #0
  4030ac:	db2e      	blt.n	40310c <quorem+0x11c>
  4030ae:	f109 0901 	add.w	r9, r9, #1
  4030b2:	465d      	mov	r5, fp
  4030b4:	2300      	movs	r3, #0
  4030b6:	f857 1b04 	ldr.w	r1, [r7], #4
  4030ba:	6828      	ldr	r0, [r5, #0]
  4030bc:	b28a      	uxth	r2, r1
  4030be:	1a9a      	subs	r2, r3, r2
  4030c0:	0c0b      	lsrs	r3, r1, #16
  4030c2:	fa12 f280 	uxtah	r2, r2, r0
  4030c6:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4030ca:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4030ce:	b292      	uxth	r2, r2
  4030d0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4030d4:	45ba      	cmp	sl, r7
  4030d6:	f845 2b04 	str.w	r2, [r5], #4
  4030da:	ea4f 4323 	mov.w	r3, r3, asr #16
  4030de:	d2ea      	bcs.n	4030b6 <quorem+0xc6>
  4030e0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4030e4:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4030e8:	b982      	cbnz	r2, 40310c <quorem+0x11c>
  4030ea:	1f1a      	subs	r2, r3, #4
  4030ec:	4593      	cmp	fp, r2
  4030ee:	d20b      	bcs.n	403108 <quorem+0x118>
  4030f0:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4030f4:	b942      	cbnz	r2, 403108 <quorem+0x118>
  4030f6:	3b08      	subs	r3, #8
  4030f8:	e002      	b.n	403100 <quorem+0x110>
  4030fa:	681a      	ldr	r2, [r3, #0]
  4030fc:	3b04      	subs	r3, #4
  4030fe:	b91a      	cbnz	r2, 403108 <quorem+0x118>
  403100:	459b      	cmp	fp, r3
  403102:	f108 38ff 	add.w	r8, r8, #4294967295
  403106:	d3f8      	bcc.n	4030fa <quorem+0x10a>
  403108:	f8c4 8010 	str.w	r8, [r4, #16]
  40310c:	4648      	mov	r0, r9
  40310e:	b003      	add	sp, #12
  403110:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403114:	2000      	movs	r0, #0
  403116:	4770      	bx	lr

00403118 <_dtoa_r>:
  403118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40311c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  40311e:	b09b      	sub	sp, #108	; 0x6c
  403120:	4604      	mov	r4, r0
  403122:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403124:	4692      	mov	sl, r2
  403126:	469b      	mov	fp, r3
  403128:	b141      	cbz	r1, 40313c <_dtoa_r+0x24>
  40312a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  40312c:	604a      	str	r2, [r1, #4]
  40312e:	2301      	movs	r3, #1
  403130:	4093      	lsls	r3, r2
  403132:	608b      	str	r3, [r1, #8]
  403134:	f001 fb18 	bl	404768 <_Bfree>
  403138:	2300      	movs	r3, #0
  40313a:	6423      	str	r3, [r4, #64]	; 0x40
  40313c:	f1bb 0f00 	cmp.w	fp, #0
  403140:	465d      	mov	r5, fp
  403142:	db35      	blt.n	4031b0 <_dtoa_r+0x98>
  403144:	2300      	movs	r3, #0
  403146:	6033      	str	r3, [r6, #0]
  403148:	4b9d      	ldr	r3, [pc, #628]	; (4033c0 <_dtoa_r+0x2a8>)
  40314a:	43ab      	bics	r3, r5
  40314c:	d015      	beq.n	40317a <_dtoa_r+0x62>
  40314e:	4650      	mov	r0, sl
  403150:	4659      	mov	r1, fp
  403152:	2200      	movs	r2, #0
  403154:	2300      	movs	r3, #0
  403156:	f002 fef5 	bl	405f44 <__aeabi_dcmpeq>
  40315a:	4680      	mov	r8, r0
  40315c:	2800      	cmp	r0, #0
  40315e:	d02d      	beq.n	4031bc <_dtoa_r+0xa4>
  403160:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403162:	2301      	movs	r3, #1
  403164:	6013      	str	r3, [r2, #0]
  403166:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403168:	2b00      	cmp	r3, #0
  40316a:	f000 80bd 	beq.w	4032e8 <_dtoa_r+0x1d0>
  40316e:	4895      	ldr	r0, [pc, #596]	; (4033c4 <_dtoa_r+0x2ac>)
  403170:	6018      	str	r0, [r3, #0]
  403172:	3801      	subs	r0, #1
  403174:	b01b      	add	sp, #108	; 0x6c
  403176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40317a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40317c:	f242 730f 	movw	r3, #9999	; 0x270f
  403180:	6013      	str	r3, [r2, #0]
  403182:	f1ba 0f00 	cmp.w	sl, #0
  403186:	d10d      	bne.n	4031a4 <_dtoa_r+0x8c>
  403188:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40318c:	b955      	cbnz	r5, 4031a4 <_dtoa_r+0x8c>
  40318e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403190:	488d      	ldr	r0, [pc, #564]	; (4033c8 <_dtoa_r+0x2b0>)
  403192:	2b00      	cmp	r3, #0
  403194:	d0ee      	beq.n	403174 <_dtoa_r+0x5c>
  403196:	f100 0308 	add.w	r3, r0, #8
  40319a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40319c:	6013      	str	r3, [r2, #0]
  40319e:	b01b      	add	sp, #108	; 0x6c
  4031a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4031a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4031a6:	4889      	ldr	r0, [pc, #548]	; (4033cc <_dtoa_r+0x2b4>)
  4031a8:	2b00      	cmp	r3, #0
  4031aa:	d0e3      	beq.n	403174 <_dtoa_r+0x5c>
  4031ac:	1cc3      	adds	r3, r0, #3
  4031ae:	e7f4      	b.n	40319a <_dtoa_r+0x82>
  4031b0:	2301      	movs	r3, #1
  4031b2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4031b6:	6033      	str	r3, [r6, #0]
  4031b8:	46ab      	mov	fp, r5
  4031ba:	e7c5      	b.n	403148 <_dtoa_r+0x30>
  4031bc:	aa18      	add	r2, sp, #96	; 0x60
  4031be:	ab19      	add	r3, sp, #100	; 0x64
  4031c0:	9201      	str	r2, [sp, #4]
  4031c2:	9300      	str	r3, [sp, #0]
  4031c4:	4652      	mov	r2, sl
  4031c6:	465b      	mov	r3, fp
  4031c8:	4620      	mov	r0, r4
  4031ca:	f001 fd45 	bl	404c58 <__d2b>
  4031ce:	0d2b      	lsrs	r3, r5, #20
  4031d0:	4681      	mov	r9, r0
  4031d2:	d071      	beq.n	4032b8 <_dtoa_r+0x1a0>
  4031d4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4031d8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4031dc:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4031de:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4031e2:	4650      	mov	r0, sl
  4031e4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4031e8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4031ec:	2200      	movs	r2, #0
  4031ee:	4b78      	ldr	r3, [pc, #480]	; (4033d0 <_dtoa_r+0x2b8>)
  4031f0:	f002 fa8c 	bl	40570c <__aeabi_dsub>
  4031f4:	a36c      	add	r3, pc, #432	; (adr r3, 4033a8 <_dtoa_r+0x290>)
  4031f6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4031fa:	f002 fc3b 	bl	405a74 <__aeabi_dmul>
  4031fe:	a36c      	add	r3, pc, #432	; (adr r3, 4033b0 <_dtoa_r+0x298>)
  403200:	e9d3 2300 	ldrd	r2, r3, [r3]
  403204:	f002 fa84 	bl	405710 <__adddf3>
  403208:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40320c:	4630      	mov	r0, r6
  40320e:	f002 fbcb 	bl	4059a8 <__aeabi_i2d>
  403212:	a369      	add	r3, pc, #420	; (adr r3, 4033b8 <_dtoa_r+0x2a0>)
  403214:	e9d3 2300 	ldrd	r2, r3, [r3]
  403218:	f002 fc2c 	bl	405a74 <__aeabi_dmul>
  40321c:	4602      	mov	r2, r0
  40321e:	460b      	mov	r3, r1
  403220:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403224:	f002 fa74 	bl	405710 <__adddf3>
  403228:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40322c:	f002 fed2 	bl	405fd4 <__aeabi_d2iz>
  403230:	2200      	movs	r2, #0
  403232:	9002      	str	r0, [sp, #8]
  403234:	2300      	movs	r3, #0
  403236:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40323a:	f002 fe8d 	bl	405f58 <__aeabi_dcmplt>
  40323e:	2800      	cmp	r0, #0
  403240:	f040 8173 	bne.w	40352a <_dtoa_r+0x412>
  403244:	9d02      	ldr	r5, [sp, #8]
  403246:	2d16      	cmp	r5, #22
  403248:	f200 815d 	bhi.w	403506 <_dtoa_r+0x3ee>
  40324c:	4b61      	ldr	r3, [pc, #388]	; (4033d4 <_dtoa_r+0x2bc>)
  40324e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403252:	e9d3 0100 	ldrd	r0, r1, [r3]
  403256:	4652      	mov	r2, sl
  403258:	465b      	mov	r3, fp
  40325a:	f002 fe9b 	bl	405f94 <__aeabi_dcmpgt>
  40325e:	2800      	cmp	r0, #0
  403260:	f000 81c5 	beq.w	4035ee <_dtoa_r+0x4d6>
  403264:	1e6b      	subs	r3, r5, #1
  403266:	9302      	str	r3, [sp, #8]
  403268:	2300      	movs	r3, #0
  40326a:	930e      	str	r3, [sp, #56]	; 0x38
  40326c:	1bbf      	subs	r7, r7, r6
  40326e:	1e7b      	subs	r3, r7, #1
  403270:	9306      	str	r3, [sp, #24]
  403272:	f100 8154 	bmi.w	40351e <_dtoa_r+0x406>
  403276:	2300      	movs	r3, #0
  403278:	9308      	str	r3, [sp, #32]
  40327a:	9b02      	ldr	r3, [sp, #8]
  40327c:	2b00      	cmp	r3, #0
  40327e:	f2c0 8145 	blt.w	40350c <_dtoa_r+0x3f4>
  403282:	9a06      	ldr	r2, [sp, #24]
  403284:	930d      	str	r3, [sp, #52]	; 0x34
  403286:	4611      	mov	r1, r2
  403288:	4419      	add	r1, r3
  40328a:	2300      	movs	r3, #0
  40328c:	9106      	str	r1, [sp, #24]
  40328e:	930c      	str	r3, [sp, #48]	; 0x30
  403290:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403292:	2b09      	cmp	r3, #9
  403294:	d82a      	bhi.n	4032ec <_dtoa_r+0x1d4>
  403296:	2b05      	cmp	r3, #5
  403298:	f340 865b 	ble.w	403f52 <_dtoa_r+0xe3a>
  40329c:	3b04      	subs	r3, #4
  40329e:	9324      	str	r3, [sp, #144]	; 0x90
  4032a0:	2500      	movs	r5, #0
  4032a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4032a4:	3b02      	subs	r3, #2
  4032a6:	2b03      	cmp	r3, #3
  4032a8:	f200 8642 	bhi.w	403f30 <_dtoa_r+0xe18>
  4032ac:	e8df f013 	tbh	[pc, r3, lsl #1]
  4032b0:	02c903d4 	.word	0x02c903d4
  4032b4:	046103df 	.word	0x046103df
  4032b8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4032ba:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4032bc:	443e      	add	r6, r7
  4032be:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4032c2:	2b20      	cmp	r3, #32
  4032c4:	f340 818e 	ble.w	4035e4 <_dtoa_r+0x4cc>
  4032c8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4032cc:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4032d0:	409d      	lsls	r5, r3
  4032d2:	fa2a f000 	lsr.w	r0, sl, r0
  4032d6:	4328      	orrs	r0, r5
  4032d8:	f002 fb56 	bl	405988 <__aeabi_ui2d>
  4032dc:	2301      	movs	r3, #1
  4032de:	3e01      	subs	r6, #1
  4032e0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4032e4:	9314      	str	r3, [sp, #80]	; 0x50
  4032e6:	e781      	b.n	4031ec <_dtoa_r+0xd4>
  4032e8:	483b      	ldr	r0, [pc, #236]	; (4033d8 <_dtoa_r+0x2c0>)
  4032ea:	e743      	b.n	403174 <_dtoa_r+0x5c>
  4032ec:	2100      	movs	r1, #0
  4032ee:	6461      	str	r1, [r4, #68]	; 0x44
  4032f0:	4620      	mov	r0, r4
  4032f2:	9125      	str	r1, [sp, #148]	; 0x94
  4032f4:	f001 fa12 	bl	40471c <_Balloc>
  4032f8:	f04f 33ff 	mov.w	r3, #4294967295
  4032fc:	930a      	str	r3, [sp, #40]	; 0x28
  4032fe:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403300:	930f      	str	r3, [sp, #60]	; 0x3c
  403302:	2301      	movs	r3, #1
  403304:	9004      	str	r0, [sp, #16]
  403306:	6420      	str	r0, [r4, #64]	; 0x40
  403308:	9224      	str	r2, [sp, #144]	; 0x90
  40330a:	930b      	str	r3, [sp, #44]	; 0x2c
  40330c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40330e:	2b00      	cmp	r3, #0
  403310:	f2c0 80d9 	blt.w	4034c6 <_dtoa_r+0x3ae>
  403314:	9a02      	ldr	r2, [sp, #8]
  403316:	2a0e      	cmp	r2, #14
  403318:	f300 80d5 	bgt.w	4034c6 <_dtoa_r+0x3ae>
  40331c:	4b2d      	ldr	r3, [pc, #180]	; (4033d4 <_dtoa_r+0x2bc>)
  40331e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403322:	e9d3 2300 	ldrd	r2, r3, [r3]
  403326:	e9cd 2308 	strd	r2, r3, [sp, #32]
  40332a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40332c:	2b00      	cmp	r3, #0
  40332e:	f2c0 83ba 	blt.w	403aa6 <_dtoa_r+0x98e>
  403332:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403336:	4650      	mov	r0, sl
  403338:	462a      	mov	r2, r5
  40333a:	4633      	mov	r3, r6
  40333c:	4659      	mov	r1, fp
  40333e:	f002 fcc3 	bl	405cc8 <__aeabi_ddiv>
  403342:	f002 fe47 	bl	405fd4 <__aeabi_d2iz>
  403346:	4680      	mov	r8, r0
  403348:	f002 fb2e 	bl	4059a8 <__aeabi_i2d>
  40334c:	462a      	mov	r2, r5
  40334e:	4633      	mov	r3, r6
  403350:	f002 fb90 	bl	405a74 <__aeabi_dmul>
  403354:	460b      	mov	r3, r1
  403356:	4602      	mov	r2, r0
  403358:	4659      	mov	r1, fp
  40335a:	4650      	mov	r0, sl
  40335c:	f002 f9d6 	bl	40570c <__aeabi_dsub>
  403360:	9d04      	ldr	r5, [sp, #16]
  403362:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403366:	702b      	strb	r3, [r5, #0]
  403368:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40336a:	2b01      	cmp	r3, #1
  40336c:	4606      	mov	r6, r0
  40336e:	460f      	mov	r7, r1
  403370:	f105 0501 	add.w	r5, r5, #1
  403374:	d068      	beq.n	403448 <_dtoa_r+0x330>
  403376:	2200      	movs	r2, #0
  403378:	4b18      	ldr	r3, [pc, #96]	; (4033dc <_dtoa_r+0x2c4>)
  40337a:	f002 fb7b 	bl	405a74 <__aeabi_dmul>
  40337e:	2200      	movs	r2, #0
  403380:	2300      	movs	r3, #0
  403382:	4606      	mov	r6, r0
  403384:	460f      	mov	r7, r1
  403386:	f002 fddd 	bl	405f44 <__aeabi_dcmpeq>
  40338a:	2800      	cmp	r0, #0
  40338c:	f040 8088 	bne.w	4034a0 <_dtoa_r+0x388>
  403390:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403394:	f04f 0a00 	mov.w	sl, #0
  403398:	f8df b040 	ldr.w	fp, [pc, #64]	; 4033dc <_dtoa_r+0x2c4>
  40339c:	940c      	str	r4, [sp, #48]	; 0x30
  40339e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4033a2:	e028      	b.n	4033f6 <_dtoa_r+0x2de>
  4033a4:	f3af 8000 	nop.w
  4033a8:	636f4361 	.word	0x636f4361
  4033ac:	3fd287a7 	.word	0x3fd287a7
  4033b0:	8b60c8b3 	.word	0x8b60c8b3
  4033b4:	3fc68a28 	.word	0x3fc68a28
  4033b8:	509f79fb 	.word	0x509f79fb
  4033bc:	3fd34413 	.word	0x3fd34413
  4033c0:	7ff00000 	.word	0x7ff00000
  4033c4:	0040743d 	.word	0x0040743d
  4033c8:	00407460 	.word	0x00407460
  4033cc:	0040746c 	.word	0x0040746c
  4033d0:	3ff80000 	.word	0x3ff80000
  4033d4:	00407498 	.word	0x00407498
  4033d8:	0040743c 	.word	0x0040743c
  4033dc:	40240000 	.word	0x40240000
  4033e0:	f002 fb48 	bl	405a74 <__aeabi_dmul>
  4033e4:	2200      	movs	r2, #0
  4033e6:	2300      	movs	r3, #0
  4033e8:	4606      	mov	r6, r0
  4033ea:	460f      	mov	r7, r1
  4033ec:	f002 fdaa 	bl	405f44 <__aeabi_dcmpeq>
  4033f0:	2800      	cmp	r0, #0
  4033f2:	f040 83c1 	bne.w	403b78 <_dtoa_r+0xa60>
  4033f6:	4642      	mov	r2, r8
  4033f8:	464b      	mov	r3, r9
  4033fa:	4630      	mov	r0, r6
  4033fc:	4639      	mov	r1, r7
  4033fe:	f002 fc63 	bl	405cc8 <__aeabi_ddiv>
  403402:	f002 fde7 	bl	405fd4 <__aeabi_d2iz>
  403406:	4604      	mov	r4, r0
  403408:	f002 face 	bl	4059a8 <__aeabi_i2d>
  40340c:	4642      	mov	r2, r8
  40340e:	464b      	mov	r3, r9
  403410:	f002 fb30 	bl	405a74 <__aeabi_dmul>
  403414:	4602      	mov	r2, r0
  403416:	460b      	mov	r3, r1
  403418:	4630      	mov	r0, r6
  40341a:	4639      	mov	r1, r7
  40341c:	f002 f976 	bl	40570c <__aeabi_dsub>
  403420:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403424:	9e04      	ldr	r6, [sp, #16]
  403426:	f805 eb01 	strb.w	lr, [r5], #1
  40342a:	eba5 0e06 	sub.w	lr, r5, r6
  40342e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403430:	45b6      	cmp	lr, r6
  403432:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403436:	4652      	mov	r2, sl
  403438:	465b      	mov	r3, fp
  40343a:	d1d1      	bne.n	4033e0 <_dtoa_r+0x2c8>
  40343c:	46a0      	mov	r8, r4
  40343e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403442:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403444:	4606      	mov	r6, r0
  403446:	460f      	mov	r7, r1
  403448:	4632      	mov	r2, r6
  40344a:	463b      	mov	r3, r7
  40344c:	4630      	mov	r0, r6
  40344e:	4639      	mov	r1, r7
  403450:	f002 f95e 	bl	405710 <__adddf3>
  403454:	4606      	mov	r6, r0
  403456:	460f      	mov	r7, r1
  403458:	4602      	mov	r2, r0
  40345a:	460b      	mov	r3, r1
  40345c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403460:	f002 fd7a 	bl	405f58 <__aeabi_dcmplt>
  403464:	b948      	cbnz	r0, 40347a <_dtoa_r+0x362>
  403466:	4632      	mov	r2, r6
  403468:	463b      	mov	r3, r7
  40346a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40346e:	f002 fd69 	bl	405f44 <__aeabi_dcmpeq>
  403472:	b1a8      	cbz	r0, 4034a0 <_dtoa_r+0x388>
  403474:	f018 0f01 	tst.w	r8, #1
  403478:	d012      	beq.n	4034a0 <_dtoa_r+0x388>
  40347a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40347e:	9a04      	ldr	r2, [sp, #16]
  403480:	1e6b      	subs	r3, r5, #1
  403482:	e004      	b.n	40348e <_dtoa_r+0x376>
  403484:	429a      	cmp	r2, r3
  403486:	f000 8401 	beq.w	403c8c <_dtoa_r+0xb74>
  40348a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  40348e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403492:	f103 0501 	add.w	r5, r3, #1
  403496:	d0f5      	beq.n	403484 <_dtoa_r+0x36c>
  403498:	f108 0801 	add.w	r8, r8, #1
  40349c:	f883 8000 	strb.w	r8, [r3]
  4034a0:	4649      	mov	r1, r9
  4034a2:	4620      	mov	r0, r4
  4034a4:	f001 f960 	bl	404768 <_Bfree>
  4034a8:	2200      	movs	r2, #0
  4034aa:	9b02      	ldr	r3, [sp, #8]
  4034ac:	702a      	strb	r2, [r5, #0]
  4034ae:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4034b0:	3301      	adds	r3, #1
  4034b2:	6013      	str	r3, [r2, #0]
  4034b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4034b6:	2b00      	cmp	r3, #0
  4034b8:	f000 839e 	beq.w	403bf8 <_dtoa_r+0xae0>
  4034bc:	9804      	ldr	r0, [sp, #16]
  4034be:	601d      	str	r5, [r3, #0]
  4034c0:	b01b      	add	sp, #108	; 0x6c
  4034c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4034c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4034c8:	2a00      	cmp	r2, #0
  4034ca:	d03e      	beq.n	40354a <_dtoa_r+0x432>
  4034cc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4034ce:	2a01      	cmp	r2, #1
  4034d0:	f340 8311 	ble.w	403af6 <_dtoa_r+0x9de>
  4034d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034d6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4034d8:	1e5f      	subs	r7, r3, #1
  4034da:	42ba      	cmp	r2, r7
  4034dc:	f2c0 838f 	blt.w	403bfe <_dtoa_r+0xae6>
  4034e0:	1bd7      	subs	r7, r2, r7
  4034e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034e4:	2b00      	cmp	r3, #0
  4034e6:	f2c0 848b 	blt.w	403e00 <_dtoa_r+0xce8>
  4034ea:	9d08      	ldr	r5, [sp, #32]
  4034ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034ee:	9a08      	ldr	r2, [sp, #32]
  4034f0:	441a      	add	r2, r3
  4034f2:	9208      	str	r2, [sp, #32]
  4034f4:	9a06      	ldr	r2, [sp, #24]
  4034f6:	2101      	movs	r1, #1
  4034f8:	441a      	add	r2, r3
  4034fa:	4620      	mov	r0, r4
  4034fc:	9206      	str	r2, [sp, #24]
  4034fe:	f001 f9cd 	bl	40489c <__i2b>
  403502:	4606      	mov	r6, r0
  403504:	e024      	b.n	403550 <_dtoa_r+0x438>
  403506:	2301      	movs	r3, #1
  403508:	930e      	str	r3, [sp, #56]	; 0x38
  40350a:	e6af      	b.n	40326c <_dtoa_r+0x154>
  40350c:	9a08      	ldr	r2, [sp, #32]
  40350e:	9b02      	ldr	r3, [sp, #8]
  403510:	1ad2      	subs	r2, r2, r3
  403512:	425b      	negs	r3, r3
  403514:	930c      	str	r3, [sp, #48]	; 0x30
  403516:	2300      	movs	r3, #0
  403518:	9208      	str	r2, [sp, #32]
  40351a:	930d      	str	r3, [sp, #52]	; 0x34
  40351c:	e6b8      	b.n	403290 <_dtoa_r+0x178>
  40351e:	f1c7 0301 	rsb	r3, r7, #1
  403522:	9308      	str	r3, [sp, #32]
  403524:	2300      	movs	r3, #0
  403526:	9306      	str	r3, [sp, #24]
  403528:	e6a7      	b.n	40327a <_dtoa_r+0x162>
  40352a:	9d02      	ldr	r5, [sp, #8]
  40352c:	4628      	mov	r0, r5
  40352e:	f002 fa3b 	bl	4059a8 <__aeabi_i2d>
  403532:	4602      	mov	r2, r0
  403534:	460b      	mov	r3, r1
  403536:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40353a:	f002 fd03 	bl	405f44 <__aeabi_dcmpeq>
  40353e:	2800      	cmp	r0, #0
  403540:	f47f ae80 	bne.w	403244 <_dtoa_r+0x12c>
  403544:	1e6b      	subs	r3, r5, #1
  403546:	9302      	str	r3, [sp, #8]
  403548:	e67c      	b.n	403244 <_dtoa_r+0x12c>
  40354a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40354c:	9d08      	ldr	r5, [sp, #32]
  40354e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403550:	2d00      	cmp	r5, #0
  403552:	dd0c      	ble.n	40356e <_dtoa_r+0x456>
  403554:	9906      	ldr	r1, [sp, #24]
  403556:	2900      	cmp	r1, #0
  403558:	460b      	mov	r3, r1
  40355a:	dd08      	ble.n	40356e <_dtoa_r+0x456>
  40355c:	42a9      	cmp	r1, r5
  40355e:	9a08      	ldr	r2, [sp, #32]
  403560:	bfa8      	it	ge
  403562:	462b      	movge	r3, r5
  403564:	1ad2      	subs	r2, r2, r3
  403566:	1aed      	subs	r5, r5, r3
  403568:	1acb      	subs	r3, r1, r3
  40356a:	9208      	str	r2, [sp, #32]
  40356c:	9306      	str	r3, [sp, #24]
  40356e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403570:	b1d3      	cbz	r3, 4035a8 <_dtoa_r+0x490>
  403572:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403574:	2b00      	cmp	r3, #0
  403576:	f000 82b7 	beq.w	403ae8 <_dtoa_r+0x9d0>
  40357a:	2f00      	cmp	r7, #0
  40357c:	dd10      	ble.n	4035a0 <_dtoa_r+0x488>
  40357e:	4631      	mov	r1, r6
  403580:	463a      	mov	r2, r7
  403582:	4620      	mov	r0, r4
  403584:	f001 fa26 	bl	4049d4 <__pow5mult>
  403588:	464a      	mov	r2, r9
  40358a:	4601      	mov	r1, r0
  40358c:	4606      	mov	r6, r0
  40358e:	4620      	mov	r0, r4
  403590:	f001 f98e 	bl	4048b0 <__multiply>
  403594:	4649      	mov	r1, r9
  403596:	4680      	mov	r8, r0
  403598:	4620      	mov	r0, r4
  40359a:	f001 f8e5 	bl	404768 <_Bfree>
  40359e:	46c1      	mov	r9, r8
  4035a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4035a2:	1bda      	subs	r2, r3, r7
  4035a4:	f040 82a1 	bne.w	403aea <_dtoa_r+0x9d2>
  4035a8:	2101      	movs	r1, #1
  4035aa:	4620      	mov	r0, r4
  4035ac:	f001 f976 	bl	40489c <__i2b>
  4035b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4035b2:	2b00      	cmp	r3, #0
  4035b4:	4680      	mov	r8, r0
  4035b6:	dd1c      	ble.n	4035f2 <_dtoa_r+0x4da>
  4035b8:	4601      	mov	r1, r0
  4035ba:	461a      	mov	r2, r3
  4035bc:	4620      	mov	r0, r4
  4035be:	f001 fa09 	bl	4049d4 <__pow5mult>
  4035c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4035c4:	2b01      	cmp	r3, #1
  4035c6:	4680      	mov	r8, r0
  4035c8:	f340 8254 	ble.w	403a74 <_dtoa_r+0x95c>
  4035cc:	2300      	movs	r3, #0
  4035ce:	930c      	str	r3, [sp, #48]	; 0x30
  4035d0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4035d4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4035d8:	6918      	ldr	r0, [r3, #16]
  4035da:	f001 f90f 	bl	4047fc <__hi0bits>
  4035de:	f1c0 0020 	rsb	r0, r0, #32
  4035e2:	e010      	b.n	403606 <_dtoa_r+0x4ee>
  4035e4:	f1c3 0520 	rsb	r5, r3, #32
  4035e8:	fa0a f005 	lsl.w	r0, sl, r5
  4035ec:	e674      	b.n	4032d8 <_dtoa_r+0x1c0>
  4035ee:	900e      	str	r0, [sp, #56]	; 0x38
  4035f0:	e63c      	b.n	40326c <_dtoa_r+0x154>
  4035f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4035f4:	2b01      	cmp	r3, #1
  4035f6:	f340 8287 	ble.w	403b08 <_dtoa_r+0x9f0>
  4035fa:	2300      	movs	r3, #0
  4035fc:	930c      	str	r3, [sp, #48]	; 0x30
  4035fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403600:	2001      	movs	r0, #1
  403602:	2b00      	cmp	r3, #0
  403604:	d1e4      	bne.n	4035d0 <_dtoa_r+0x4b8>
  403606:	9a06      	ldr	r2, [sp, #24]
  403608:	4410      	add	r0, r2
  40360a:	f010 001f 	ands.w	r0, r0, #31
  40360e:	f000 80a1 	beq.w	403754 <_dtoa_r+0x63c>
  403612:	f1c0 0320 	rsb	r3, r0, #32
  403616:	2b04      	cmp	r3, #4
  403618:	f340 849e 	ble.w	403f58 <_dtoa_r+0xe40>
  40361c:	9b08      	ldr	r3, [sp, #32]
  40361e:	f1c0 001c 	rsb	r0, r0, #28
  403622:	4403      	add	r3, r0
  403624:	9308      	str	r3, [sp, #32]
  403626:	4613      	mov	r3, r2
  403628:	4403      	add	r3, r0
  40362a:	4405      	add	r5, r0
  40362c:	9306      	str	r3, [sp, #24]
  40362e:	9b08      	ldr	r3, [sp, #32]
  403630:	2b00      	cmp	r3, #0
  403632:	dd05      	ble.n	403640 <_dtoa_r+0x528>
  403634:	4649      	mov	r1, r9
  403636:	461a      	mov	r2, r3
  403638:	4620      	mov	r0, r4
  40363a:	f001 fa1b 	bl	404a74 <__lshift>
  40363e:	4681      	mov	r9, r0
  403640:	9b06      	ldr	r3, [sp, #24]
  403642:	2b00      	cmp	r3, #0
  403644:	dd05      	ble.n	403652 <_dtoa_r+0x53a>
  403646:	4641      	mov	r1, r8
  403648:	461a      	mov	r2, r3
  40364a:	4620      	mov	r0, r4
  40364c:	f001 fa12 	bl	404a74 <__lshift>
  403650:	4680      	mov	r8, r0
  403652:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403654:	2b00      	cmp	r3, #0
  403656:	f040 8086 	bne.w	403766 <_dtoa_r+0x64e>
  40365a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40365c:	2b00      	cmp	r3, #0
  40365e:	f340 8266 	ble.w	403b2e <_dtoa_r+0xa16>
  403662:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403664:	2b00      	cmp	r3, #0
  403666:	f000 8098 	beq.w	40379a <_dtoa_r+0x682>
  40366a:	2d00      	cmp	r5, #0
  40366c:	dd05      	ble.n	40367a <_dtoa_r+0x562>
  40366e:	4631      	mov	r1, r6
  403670:	462a      	mov	r2, r5
  403672:	4620      	mov	r0, r4
  403674:	f001 f9fe 	bl	404a74 <__lshift>
  403678:	4606      	mov	r6, r0
  40367a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40367c:	2b00      	cmp	r3, #0
  40367e:	f040 8337 	bne.w	403cf0 <_dtoa_r+0xbd8>
  403682:	9606      	str	r6, [sp, #24]
  403684:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403686:	9a04      	ldr	r2, [sp, #16]
  403688:	f8dd b018 	ldr.w	fp, [sp, #24]
  40368c:	3b01      	subs	r3, #1
  40368e:	18d3      	adds	r3, r2, r3
  403690:	930b      	str	r3, [sp, #44]	; 0x2c
  403692:	f00a 0301 	and.w	r3, sl, #1
  403696:	930c      	str	r3, [sp, #48]	; 0x30
  403698:	4617      	mov	r7, r2
  40369a:	46c2      	mov	sl, r8
  40369c:	4651      	mov	r1, sl
  40369e:	4648      	mov	r0, r9
  4036a0:	f7ff fca6 	bl	402ff0 <quorem>
  4036a4:	4631      	mov	r1, r6
  4036a6:	4605      	mov	r5, r0
  4036a8:	4648      	mov	r0, r9
  4036aa:	f001 fa35 	bl	404b18 <__mcmp>
  4036ae:	465a      	mov	r2, fp
  4036b0:	900a      	str	r0, [sp, #40]	; 0x28
  4036b2:	4651      	mov	r1, sl
  4036b4:	4620      	mov	r0, r4
  4036b6:	f001 fa4b 	bl	404b50 <__mdiff>
  4036ba:	68c2      	ldr	r2, [r0, #12]
  4036bc:	4680      	mov	r8, r0
  4036be:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4036c2:	2a00      	cmp	r2, #0
  4036c4:	f040 822b 	bne.w	403b1e <_dtoa_r+0xa06>
  4036c8:	4601      	mov	r1, r0
  4036ca:	4648      	mov	r0, r9
  4036cc:	9308      	str	r3, [sp, #32]
  4036ce:	f001 fa23 	bl	404b18 <__mcmp>
  4036d2:	4641      	mov	r1, r8
  4036d4:	9006      	str	r0, [sp, #24]
  4036d6:	4620      	mov	r0, r4
  4036d8:	f001 f846 	bl	404768 <_Bfree>
  4036dc:	9a06      	ldr	r2, [sp, #24]
  4036de:	9b08      	ldr	r3, [sp, #32]
  4036e0:	b932      	cbnz	r2, 4036f0 <_dtoa_r+0x5d8>
  4036e2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4036e4:	b921      	cbnz	r1, 4036f0 <_dtoa_r+0x5d8>
  4036e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4036e8:	2a00      	cmp	r2, #0
  4036ea:	f000 83ef 	beq.w	403ecc <_dtoa_r+0xdb4>
  4036ee:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4036f0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4036f2:	2900      	cmp	r1, #0
  4036f4:	f2c0 829f 	blt.w	403c36 <_dtoa_r+0xb1e>
  4036f8:	d105      	bne.n	403706 <_dtoa_r+0x5ee>
  4036fa:	9924      	ldr	r1, [sp, #144]	; 0x90
  4036fc:	b919      	cbnz	r1, 403706 <_dtoa_r+0x5ee>
  4036fe:	990c      	ldr	r1, [sp, #48]	; 0x30
  403700:	2900      	cmp	r1, #0
  403702:	f000 8298 	beq.w	403c36 <_dtoa_r+0xb1e>
  403706:	2a00      	cmp	r2, #0
  403708:	f300 8306 	bgt.w	403d18 <_dtoa_r+0xc00>
  40370c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40370e:	703b      	strb	r3, [r7, #0]
  403710:	f107 0801 	add.w	r8, r7, #1
  403714:	4297      	cmp	r7, r2
  403716:	4645      	mov	r5, r8
  403718:	f000 830c 	beq.w	403d34 <_dtoa_r+0xc1c>
  40371c:	4649      	mov	r1, r9
  40371e:	2300      	movs	r3, #0
  403720:	220a      	movs	r2, #10
  403722:	4620      	mov	r0, r4
  403724:	f001 f82a 	bl	40477c <__multadd>
  403728:	455e      	cmp	r6, fp
  40372a:	4681      	mov	r9, r0
  40372c:	4631      	mov	r1, r6
  40372e:	f04f 0300 	mov.w	r3, #0
  403732:	f04f 020a 	mov.w	r2, #10
  403736:	4620      	mov	r0, r4
  403738:	f000 81eb 	beq.w	403b12 <_dtoa_r+0x9fa>
  40373c:	f001 f81e 	bl	40477c <__multadd>
  403740:	4659      	mov	r1, fp
  403742:	4606      	mov	r6, r0
  403744:	2300      	movs	r3, #0
  403746:	220a      	movs	r2, #10
  403748:	4620      	mov	r0, r4
  40374a:	f001 f817 	bl	40477c <__multadd>
  40374e:	4647      	mov	r7, r8
  403750:	4683      	mov	fp, r0
  403752:	e7a3      	b.n	40369c <_dtoa_r+0x584>
  403754:	201c      	movs	r0, #28
  403756:	9b08      	ldr	r3, [sp, #32]
  403758:	4403      	add	r3, r0
  40375a:	9308      	str	r3, [sp, #32]
  40375c:	9b06      	ldr	r3, [sp, #24]
  40375e:	4403      	add	r3, r0
  403760:	4405      	add	r5, r0
  403762:	9306      	str	r3, [sp, #24]
  403764:	e763      	b.n	40362e <_dtoa_r+0x516>
  403766:	4641      	mov	r1, r8
  403768:	4648      	mov	r0, r9
  40376a:	f001 f9d5 	bl	404b18 <__mcmp>
  40376e:	2800      	cmp	r0, #0
  403770:	f6bf af73 	bge.w	40365a <_dtoa_r+0x542>
  403774:	9f02      	ldr	r7, [sp, #8]
  403776:	4649      	mov	r1, r9
  403778:	2300      	movs	r3, #0
  40377a:	220a      	movs	r2, #10
  40377c:	4620      	mov	r0, r4
  40377e:	3f01      	subs	r7, #1
  403780:	9702      	str	r7, [sp, #8]
  403782:	f000 fffb 	bl	40477c <__multadd>
  403786:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403788:	4681      	mov	r9, r0
  40378a:	2b00      	cmp	r3, #0
  40378c:	f040 83b6 	bne.w	403efc <_dtoa_r+0xde4>
  403790:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403792:	2b00      	cmp	r3, #0
  403794:	f340 83bf 	ble.w	403f16 <_dtoa_r+0xdfe>
  403798:	930a      	str	r3, [sp, #40]	; 0x28
  40379a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40379e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4037a0:	465d      	mov	r5, fp
  4037a2:	e002      	b.n	4037aa <_dtoa_r+0x692>
  4037a4:	f000 ffea 	bl	40477c <__multadd>
  4037a8:	4681      	mov	r9, r0
  4037aa:	4641      	mov	r1, r8
  4037ac:	4648      	mov	r0, r9
  4037ae:	f7ff fc1f 	bl	402ff0 <quorem>
  4037b2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4037b6:	f805 ab01 	strb.w	sl, [r5], #1
  4037ba:	eba5 030b 	sub.w	r3, r5, fp
  4037be:	42bb      	cmp	r3, r7
  4037c0:	f04f 020a 	mov.w	r2, #10
  4037c4:	f04f 0300 	mov.w	r3, #0
  4037c8:	4649      	mov	r1, r9
  4037ca:	4620      	mov	r0, r4
  4037cc:	dbea      	blt.n	4037a4 <_dtoa_r+0x68c>
  4037ce:	9b04      	ldr	r3, [sp, #16]
  4037d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4037d2:	2a01      	cmp	r2, #1
  4037d4:	bfac      	ite	ge
  4037d6:	189b      	addge	r3, r3, r2
  4037d8:	3301      	addlt	r3, #1
  4037da:	461d      	mov	r5, r3
  4037dc:	f04f 0b00 	mov.w	fp, #0
  4037e0:	4649      	mov	r1, r9
  4037e2:	2201      	movs	r2, #1
  4037e4:	4620      	mov	r0, r4
  4037e6:	f001 f945 	bl	404a74 <__lshift>
  4037ea:	4641      	mov	r1, r8
  4037ec:	4681      	mov	r9, r0
  4037ee:	f001 f993 	bl	404b18 <__mcmp>
  4037f2:	2800      	cmp	r0, #0
  4037f4:	f340 823d 	ble.w	403c72 <_dtoa_r+0xb5a>
  4037f8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4037fc:	9904      	ldr	r1, [sp, #16]
  4037fe:	1e6b      	subs	r3, r5, #1
  403800:	e004      	b.n	40380c <_dtoa_r+0x6f4>
  403802:	428b      	cmp	r3, r1
  403804:	f000 81ae 	beq.w	403b64 <_dtoa_r+0xa4c>
  403808:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  40380c:	2a39      	cmp	r2, #57	; 0x39
  40380e:	f103 0501 	add.w	r5, r3, #1
  403812:	d0f6      	beq.n	403802 <_dtoa_r+0x6ea>
  403814:	3201      	adds	r2, #1
  403816:	701a      	strb	r2, [r3, #0]
  403818:	4641      	mov	r1, r8
  40381a:	4620      	mov	r0, r4
  40381c:	f000 ffa4 	bl	404768 <_Bfree>
  403820:	2e00      	cmp	r6, #0
  403822:	f43f ae3d 	beq.w	4034a0 <_dtoa_r+0x388>
  403826:	f1bb 0f00 	cmp.w	fp, #0
  40382a:	d005      	beq.n	403838 <_dtoa_r+0x720>
  40382c:	45b3      	cmp	fp, r6
  40382e:	d003      	beq.n	403838 <_dtoa_r+0x720>
  403830:	4659      	mov	r1, fp
  403832:	4620      	mov	r0, r4
  403834:	f000 ff98 	bl	404768 <_Bfree>
  403838:	4631      	mov	r1, r6
  40383a:	4620      	mov	r0, r4
  40383c:	f000 ff94 	bl	404768 <_Bfree>
  403840:	e62e      	b.n	4034a0 <_dtoa_r+0x388>
  403842:	2300      	movs	r3, #0
  403844:	930b      	str	r3, [sp, #44]	; 0x2c
  403846:	9b02      	ldr	r3, [sp, #8]
  403848:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40384a:	4413      	add	r3, r2
  40384c:	930f      	str	r3, [sp, #60]	; 0x3c
  40384e:	3301      	adds	r3, #1
  403850:	2b01      	cmp	r3, #1
  403852:	461f      	mov	r7, r3
  403854:	461e      	mov	r6, r3
  403856:	930a      	str	r3, [sp, #40]	; 0x28
  403858:	bfb8      	it	lt
  40385a:	2701      	movlt	r7, #1
  40385c:	2100      	movs	r1, #0
  40385e:	2f17      	cmp	r7, #23
  403860:	6461      	str	r1, [r4, #68]	; 0x44
  403862:	d90a      	bls.n	40387a <_dtoa_r+0x762>
  403864:	2201      	movs	r2, #1
  403866:	2304      	movs	r3, #4
  403868:	005b      	lsls	r3, r3, #1
  40386a:	f103 0014 	add.w	r0, r3, #20
  40386e:	4287      	cmp	r7, r0
  403870:	4611      	mov	r1, r2
  403872:	f102 0201 	add.w	r2, r2, #1
  403876:	d2f7      	bcs.n	403868 <_dtoa_r+0x750>
  403878:	6461      	str	r1, [r4, #68]	; 0x44
  40387a:	4620      	mov	r0, r4
  40387c:	f000 ff4e 	bl	40471c <_Balloc>
  403880:	2e0e      	cmp	r6, #14
  403882:	9004      	str	r0, [sp, #16]
  403884:	6420      	str	r0, [r4, #64]	; 0x40
  403886:	f63f ad41 	bhi.w	40330c <_dtoa_r+0x1f4>
  40388a:	2d00      	cmp	r5, #0
  40388c:	f43f ad3e 	beq.w	40330c <_dtoa_r+0x1f4>
  403890:	9902      	ldr	r1, [sp, #8]
  403892:	2900      	cmp	r1, #0
  403894:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403898:	f340 8202 	ble.w	403ca0 <_dtoa_r+0xb88>
  40389c:	4bb8      	ldr	r3, [pc, #736]	; (403b80 <_dtoa_r+0xa68>)
  40389e:	f001 020f 	and.w	r2, r1, #15
  4038a2:	110d      	asrs	r5, r1, #4
  4038a4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4038a8:	06e9      	lsls	r1, r5, #27
  4038aa:	e9d3 6700 	ldrd	r6, r7, [r3]
  4038ae:	f140 81ae 	bpl.w	403c0e <_dtoa_r+0xaf6>
  4038b2:	4bb4      	ldr	r3, [pc, #720]	; (403b84 <_dtoa_r+0xa6c>)
  4038b4:	4650      	mov	r0, sl
  4038b6:	4659      	mov	r1, fp
  4038b8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4038bc:	f002 fa04 	bl	405cc8 <__aeabi_ddiv>
  4038c0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4038c4:	f005 050f 	and.w	r5, r5, #15
  4038c8:	f04f 0a03 	mov.w	sl, #3
  4038cc:	b18d      	cbz	r5, 4038f2 <_dtoa_r+0x7da>
  4038ce:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403b84 <_dtoa_r+0xa6c>
  4038d2:	07ea      	lsls	r2, r5, #31
  4038d4:	d509      	bpl.n	4038ea <_dtoa_r+0x7d2>
  4038d6:	4630      	mov	r0, r6
  4038d8:	4639      	mov	r1, r7
  4038da:	e9d8 2300 	ldrd	r2, r3, [r8]
  4038de:	f002 f8c9 	bl	405a74 <__aeabi_dmul>
  4038e2:	f10a 0a01 	add.w	sl, sl, #1
  4038e6:	4606      	mov	r6, r0
  4038e8:	460f      	mov	r7, r1
  4038ea:	106d      	asrs	r5, r5, #1
  4038ec:	f108 0808 	add.w	r8, r8, #8
  4038f0:	d1ef      	bne.n	4038d2 <_dtoa_r+0x7ba>
  4038f2:	463b      	mov	r3, r7
  4038f4:	4632      	mov	r2, r6
  4038f6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4038fa:	f002 f9e5 	bl	405cc8 <__aeabi_ddiv>
  4038fe:	4607      	mov	r7, r0
  403900:	4688      	mov	r8, r1
  403902:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403904:	b143      	cbz	r3, 403918 <_dtoa_r+0x800>
  403906:	2200      	movs	r2, #0
  403908:	4b9f      	ldr	r3, [pc, #636]	; (403b88 <_dtoa_r+0xa70>)
  40390a:	4638      	mov	r0, r7
  40390c:	4641      	mov	r1, r8
  40390e:	f002 fb23 	bl	405f58 <__aeabi_dcmplt>
  403912:	2800      	cmp	r0, #0
  403914:	f040 8286 	bne.w	403e24 <_dtoa_r+0xd0c>
  403918:	4650      	mov	r0, sl
  40391a:	f002 f845 	bl	4059a8 <__aeabi_i2d>
  40391e:	463a      	mov	r2, r7
  403920:	4643      	mov	r3, r8
  403922:	f002 f8a7 	bl	405a74 <__aeabi_dmul>
  403926:	4b99      	ldr	r3, [pc, #612]	; (403b8c <_dtoa_r+0xa74>)
  403928:	2200      	movs	r2, #0
  40392a:	f001 fef1 	bl	405710 <__adddf3>
  40392e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403930:	4605      	mov	r5, r0
  403932:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403936:	2b00      	cmp	r3, #0
  403938:	f000 813e 	beq.w	403bb8 <_dtoa_r+0xaa0>
  40393c:	9b02      	ldr	r3, [sp, #8]
  40393e:	9315      	str	r3, [sp, #84]	; 0x54
  403940:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403942:	9312      	str	r3, [sp, #72]	; 0x48
  403944:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403946:	2b00      	cmp	r3, #0
  403948:	f000 81fa 	beq.w	403d40 <_dtoa_r+0xc28>
  40394c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40394e:	4b8c      	ldr	r3, [pc, #560]	; (403b80 <_dtoa_r+0xa68>)
  403950:	498f      	ldr	r1, [pc, #572]	; (403b90 <_dtoa_r+0xa78>)
  403952:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403956:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40395a:	2000      	movs	r0, #0
  40395c:	f002 f9b4 	bl	405cc8 <__aeabi_ddiv>
  403960:	462a      	mov	r2, r5
  403962:	4633      	mov	r3, r6
  403964:	f001 fed2 	bl	40570c <__aeabi_dsub>
  403968:	4682      	mov	sl, r0
  40396a:	468b      	mov	fp, r1
  40396c:	4638      	mov	r0, r7
  40396e:	4641      	mov	r1, r8
  403970:	f002 fb30 	bl	405fd4 <__aeabi_d2iz>
  403974:	4605      	mov	r5, r0
  403976:	f002 f817 	bl	4059a8 <__aeabi_i2d>
  40397a:	4602      	mov	r2, r0
  40397c:	460b      	mov	r3, r1
  40397e:	4638      	mov	r0, r7
  403980:	4641      	mov	r1, r8
  403982:	f001 fec3 	bl	40570c <__aeabi_dsub>
  403986:	3530      	adds	r5, #48	; 0x30
  403988:	fa5f f885 	uxtb.w	r8, r5
  40398c:	9d04      	ldr	r5, [sp, #16]
  40398e:	4606      	mov	r6, r0
  403990:	460f      	mov	r7, r1
  403992:	f885 8000 	strb.w	r8, [r5]
  403996:	4602      	mov	r2, r0
  403998:	460b      	mov	r3, r1
  40399a:	4650      	mov	r0, sl
  40399c:	4659      	mov	r1, fp
  40399e:	3501      	adds	r5, #1
  4039a0:	f002 faf8 	bl	405f94 <__aeabi_dcmpgt>
  4039a4:	2800      	cmp	r0, #0
  4039a6:	d154      	bne.n	403a52 <_dtoa_r+0x93a>
  4039a8:	4632      	mov	r2, r6
  4039aa:	463b      	mov	r3, r7
  4039ac:	2000      	movs	r0, #0
  4039ae:	4976      	ldr	r1, [pc, #472]	; (403b88 <_dtoa_r+0xa70>)
  4039b0:	f001 feac 	bl	40570c <__aeabi_dsub>
  4039b4:	4602      	mov	r2, r0
  4039b6:	460b      	mov	r3, r1
  4039b8:	4650      	mov	r0, sl
  4039ba:	4659      	mov	r1, fp
  4039bc:	f002 faea 	bl	405f94 <__aeabi_dcmpgt>
  4039c0:	2800      	cmp	r0, #0
  4039c2:	f040 8270 	bne.w	403ea6 <_dtoa_r+0xd8e>
  4039c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4039c8:	2a01      	cmp	r2, #1
  4039ca:	f000 8111 	beq.w	403bf0 <_dtoa_r+0xad8>
  4039ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4039d0:	9a04      	ldr	r2, [sp, #16]
  4039d2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4039d6:	4413      	add	r3, r2
  4039d8:	4699      	mov	r9, r3
  4039da:	e00d      	b.n	4039f8 <_dtoa_r+0x8e0>
  4039dc:	2000      	movs	r0, #0
  4039de:	496a      	ldr	r1, [pc, #424]	; (403b88 <_dtoa_r+0xa70>)
  4039e0:	f001 fe94 	bl	40570c <__aeabi_dsub>
  4039e4:	4652      	mov	r2, sl
  4039e6:	465b      	mov	r3, fp
  4039e8:	f002 fab6 	bl	405f58 <__aeabi_dcmplt>
  4039ec:	2800      	cmp	r0, #0
  4039ee:	f040 8258 	bne.w	403ea2 <_dtoa_r+0xd8a>
  4039f2:	454d      	cmp	r5, r9
  4039f4:	f000 80fa 	beq.w	403bec <_dtoa_r+0xad4>
  4039f8:	4650      	mov	r0, sl
  4039fa:	4659      	mov	r1, fp
  4039fc:	2200      	movs	r2, #0
  4039fe:	4b65      	ldr	r3, [pc, #404]	; (403b94 <_dtoa_r+0xa7c>)
  403a00:	f002 f838 	bl	405a74 <__aeabi_dmul>
  403a04:	2200      	movs	r2, #0
  403a06:	4b63      	ldr	r3, [pc, #396]	; (403b94 <_dtoa_r+0xa7c>)
  403a08:	4682      	mov	sl, r0
  403a0a:	468b      	mov	fp, r1
  403a0c:	4630      	mov	r0, r6
  403a0e:	4639      	mov	r1, r7
  403a10:	f002 f830 	bl	405a74 <__aeabi_dmul>
  403a14:	460f      	mov	r7, r1
  403a16:	4606      	mov	r6, r0
  403a18:	f002 fadc 	bl	405fd4 <__aeabi_d2iz>
  403a1c:	4680      	mov	r8, r0
  403a1e:	f001 ffc3 	bl	4059a8 <__aeabi_i2d>
  403a22:	4602      	mov	r2, r0
  403a24:	460b      	mov	r3, r1
  403a26:	4630      	mov	r0, r6
  403a28:	4639      	mov	r1, r7
  403a2a:	f001 fe6f 	bl	40570c <__aeabi_dsub>
  403a2e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403a32:	fa5f f888 	uxtb.w	r8, r8
  403a36:	4652      	mov	r2, sl
  403a38:	465b      	mov	r3, fp
  403a3a:	f805 8b01 	strb.w	r8, [r5], #1
  403a3e:	4606      	mov	r6, r0
  403a40:	460f      	mov	r7, r1
  403a42:	f002 fa89 	bl	405f58 <__aeabi_dcmplt>
  403a46:	4632      	mov	r2, r6
  403a48:	463b      	mov	r3, r7
  403a4a:	2800      	cmp	r0, #0
  403a4c:	d0c6      	beq.n	4039dc <_dtoa_r+0x8c4>
  403a4e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403a52:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403a54:	9302      	str	r3, [sp, #8]
  403a56:	e523      	b.n	4034a0 <_dtoa_r+0x388>
  403a58:	2300      	movs	r3, #0
  403a5a:	930b      	str	r3, [sp, #44]	; 0x2c
  403a5c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403a5e:	2b00      	cmp	r3, #0
  403a60:	f340 80dc 	ble.w	403c1c <_dtoa_r+0xb04>
  403a64:	461f      	mov	r7, r3
  403a66:	461e      	mov	r6, r3
  403a68:	930f      	str	r3, [sp, #60]	; 0x3c
  403a6a:	930a      	str	r3, [sp, #40]	; 0x28
  403a6c:	e6f6      	b.n	40385c <_dtoa_r+0x744>
  403a6e:	2301      	movs	r3, #1
  403a70:	930b      	str	r3, [sp, #44]	; 0x2c
  403a72:	e7f3      	b.n	403a5c <_dtoa_r+0x944>
  403a74:	f1ba 0f00 	cmp.w	sl, #0
  403a78:	f47f ada8 	bne.w	4035cc <_dtoa_r+0x4b4>
  403a7c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403a80:	2b00      	cmp	r3, #0
  403a82:	f47f adba 	bne.w	4035fa <_dtoa_r+0x4e2>
  403a86:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403a8a:	0d3f      	lsrs	r7, r7, #20
  403a8c:	053f      	lsls	r7, r7, #20
  403a8e:	2f00      	cmp	r7, #0
  403a90:	f000 820d 	beq.w	403eae <_dtoa_r+0xd96>
  403a94:	9b08      	ldr	r3, [sp, #32]
  403a96:	3301      	adds	r3, #1
  403a98:	9308      	str	r3, [sp, #32]
  403a9a:	9b06      	ldr	r3, [sp, #24]
  403a9c:	3301      	adds	r3, #1
  403a9e:	9306      	str	r3, [sp, #24]
  403aa0:	2301      	movs	r3, #1
  403aa2:	930c      	str	r3, [sp, #48]	; 0x30
  403aa4:	e5ab      	b.n	4035fe <_dtoa_r+0x4e6>
  403aa6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403aa8:	2b00      	cmp	r3, #0
  403aaa:	f73f ac42 	bgt.w	403332 <_dtoa_r+0x21a>
  403aae:	f040 8221 	bne.w	403ef4 <_dtoa_r+0xddc>
  403ab2:	2200      	movs	r2, #0
  403ab4:	4b38      	ldr	r3, [pc, #224]	; (403b98 <_dtoa_r+0xa80>)
  403ab6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403aba:	f001 ffdb 	bl	405a74 <__aeabi_dmul>
  403abe:	4652      	mov	r2, sl
  403ac0:	465b      	mov	r3, fp
  403ac2:	f002 fa5d 	bl	405f80 <__aeabi_dcmpge>
  403ac6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403aca:	4646      	mov	r6, r8
  403acc:	2800      	cmp	r0, #0
  403ace:	d041      	beq.n	403b54 <_dtoa_r+0xa3c>
  403ad0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403ad2:	9d04      	ldr	r5, [sp, #16]
  403ad4:	43db      	mvns	r3, r3
  403ad6:	9302      	str	r3, [sp, #8]
  403ad8:	4641      	mov	r1, r8
  403ada:	4620      	mov	r0, r4
  403adc:	f000 fe44 	bl	404768 <_Bfree>
  403ae0:	2e00      	cmp	r6, #0
  403ae2:	f43f acdd 	beq.w	4034a0 <_dtoa_r+0x388>
  403ae6:	e6a7      	b.n	403838 <_dtoa_r+0x720>
  403ae8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403aea:	4649      	mov	r1, r9
  403aec:	4620      	mov	r0, r4
  403aee:	f000 ff71 	bl	4049d4 <__pow5mult>
  403af2:	4681      	mov	r9, r0
  403af4:	e558      	b.n	4035a8 <_dtoa_r+0x490>
  403af6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403af8:	2a00      	cmp	r2, #0
  403afa:	f000 8187 	beq.w	403e0c <_dtoa_r+0xcf4>
  403afe:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403b02:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403b04:	9d08      	ldr	r5, [sp, #32]
  403b06:	e4f2      	b.n	4034ee <_dtoa_r+0x3d6>
  403b08:	f1ba 0f00 	cmp.w	sl, #0
  403b0c:	f47f ad75 	bne.w	4035fa <_dtoa_r+0x4e2>
  403b10:	e7b4      	b.n	403a7c <_dtoa_r+0x964>
  403b12:	f000 fe33 	bl	40477c <__multadd>
  403b16:	4647      	mov	r7, r8
  403b18:	4606      	mov	r6, r0
  403b1a:	4683      	mov	fp, r0
  403b1c:	e5be      	b.n	40369c <_dtoa_r+0x584>
  403b1e:	4601      	mov	r1, r0
  403b20:	4620      	mov	r0, r4
  403b22:	9306      	str	r3, [sp, #24]
  403b24:	f000 fe20 	bl	404768 <_Bfree>
  403b28:	2201      	movs	r2, #1
  403b2a:	9b06      	ldr	r3, [sp, #24]
  403b2c:	e5e0      	b.n	4036f0 <_dtoa_r+0x5d8>
  403b2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b30:	2b02      	cmp	r3, #2
  403b32:	f77f ad96 	ble.w	403662 <_dtoa_r+0x54a>
  403b36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b38:	2b00      	cmp	r3, #0
  403b3a:	d1c9      	bne.n	403ad0 <_dtoa_r+0x9b8>
  403b3c:	4641      	mov	r1, r8
  403b3e:	2205      	movs	r2, #5
  403b40:	4620      	mov	r0, r4
  403b42:	f000 fe1b 	bl	40477c <__multadd>
  403b46:	4601      	mov	r1, r0
  403b48:	4680      	mov	r8, r0
  403b4a:	4648      	mov	r0, r9
  403b4c:	f000 ffe4 	bl	404b18 <__mcmp>
  403b50:	2800      	cmp	r0, #0
  403b52:	ddbd      	ble.n	403ad0 <_dtoa_r+0x9b8>
  403b54:	9a02      	ldr	r2, [sp, #8]
  403b56:	9904      	ldr	r1, [sp, #16]
  403b58:	2331      	movs	r3, #49	; 0x31
  403b5a:	3201      	adds	r2, #1
  403b5c:	9202      	str	r2, [sp, #8]
  403b5e:	700b      	strb	r3, [r1, #0]
  403b60:	1c4d      	adds	r5, r1, #1
  403b62:	e7b9      	b.n	403ad8 <_dtoa_r+0x9c0>
  403b64:	9a02      	ldr	r2, [sp, #8]
  403b66:	3201      	adds	r2, #1
  403b68:	9202      	str	r2, [sp, #8]
  403b6a:	9a04      	ldr	r2, [sp, #16]
  403b6c:	2331      	movs	r3, #49	; 0x31
  403b6e:	7013      	strb	r3, [r2, #0]
  403b70:	e652      	b.n	403818 <_dtoa_r+0x700>
  403b72:	2301      	movs	r3, #1
  403b74:	930b      	str	r3, [sp, #44]	; 0x2c
  403b76:	e666      	b.n	403846 <_dtoa_r+0x72e>
  403b78:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403b7c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403b7e:	e48f      	b.n	4034a0 <_dtoa_r+0x388>
  403b80:	00407498 	.word	0x00407498
  403b84:	00407470 	.word	0x00407470
  403b88:	3ff00000 	.word	0x3ff00000
  403b8c:	401c0000 	.word	0x401c0000
  403b90:	3fe00000 	.word	0x3fe00000
  403b94:	40240000 	.word	0x40240000
  403b98:	40140000 	.word	0x40140000
  403b9c:	4650      	mov	r0, sl
  403b9e:	f001 ff03 	bl	4059a8 <__aeabi_i2d>
  403ba2:	463a      	mov	r2, r7
  403ba4:	4643      	mov	r3, r8
  403ba6:	f001 ff65 	bl	405a74 <__aeabi_dmul>
  403baa:	2200      	movs	r2, #0
  403bac:	4bc1      	ldr	r3, [pc, #772]	; (403eb4 <_dtoa_r+0xd9c>)
  403bae:	f001 fdaf 	bl	405710 <__adddf3>
  403bb2:	4605      	mov	r5, r0
  403bb4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403bb8:	4641      	mov	r1, r8
  403bba:	2200      	movs	r2, #0
  403bbc:	4bbe      	ldr	r3, [pc, #760]	; (403eb8 <_dtoa_r+0xda0>)
  403bbe:	4638      	mov	r0, r7
  403bc0:	f001 fda4 	bl	40570c <__aeabi_dsub>
  403bc4:	462a      	mov	r2, r5
  403bc6:	4633      	mov	r3, r6
  403bc8:	4682      	mov	sl, r0
  403bca:	468b      	mov	fp, r1
  403bcc:	f002 f9e2 	bl	405f94 <__aeabi_dcmpgt>
  403bd0:	4680      	mov	r8, r0
  403bd2:	2800      	cmp	r0, #0
  403bd4:	f040 8110 	bne.w	403df8 <_dtoa_r+0xce0>
  403bd8:	462a      	mov	r2, r5
  403bda:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403bde:	4650      	mov	r0, sl
  403be0:	4659      	mov	r1, fp
  403be2:	f002 f9b9 	bl	405f58 <__aeabi_dcmplt>
  403be6:	b118      	cbz	r0, 403bf0 <_dtoa_r+0xad8>
  403be8:	4646      	mov	r6, r8
  403bea:	e771      	b.n	403ad0 <_dtoa_r+0x9b8>
  403bec:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403bf0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403bf4:	f7ff bb8a 	b.w	40330c <_dtoa_r+0x1f4>
  403bf8:	9804      	ldr	r0, [sp, #16]
  403bfa:	f7ff babb 	b.w	403174 <_dtoa_r+0x5c>
  403bfe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403c00:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403c02:	970c      	str	r7, [sp, #48]	; 0x30
  403c04:	1afb      	subs	r3, r7, r3
  403c06:	441a      	add	r2, r3
  403c08:	920d      	str	r2, [sp, #52]	; 0x34
  403c0a:	2700      	movs	r7, #0
  403c0c:	e469      	b.n	4034e2 <_dtoa_r+0x3ca>
  403c0e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403c12:	f04f 0a02 	mov.w	sl, #2
  403c16:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403c1a:	e657      	b.n	4038cc <_dtoa_r+0x7b4>
  403c1c:	2100      	movs	r1, #0
  403c1e:	2301      	movs	r3, #1
  403c20:	6461      	str	r1, [r4, #68]	; 0x44
  403c22:	4620      	mov	r0, r4
  403c24:	9325      	str	r3, [sp, #148]	; 0x94
  403c26:	f000 fd79 	bl	40471c <_Balloc>
  403c2a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403c2c:	9004      	str	r0, [sp, #16]
  403c2e:	6420      	str	r0, [r4, #64]	; 0x40
  403c30:	930a      	str	r3, [sp, #40]	; 0x28
  403c32:	930f      	str	r3, [sp, #60]	; 0x3c
  403c34:	e629      	b.n	40388a <_dtoa_r+0x772>
  403c36:	2a00      	cmp	r2, #0
  403c38:	46d0      	mov	r8, sl
  403c3a:	f8cd b018 	str.w	fp, [sp, #24]
  403c3e:	469a      	mov	sl, r3
  403c40:	dd11      	ble.n	403c66 <_dtoa_r+0xb4e>
  403c42:	4649      	mov	r1, r9
  403c44:	2201      	movs	r2, #1
  403c46:	4620      	mov	r0, r4
  403c48:	f000 ff14 	bl	404a74 <__lshift>
  403c4c:	4641      	mov	r1, r8
  403c4e:	4681      	mov	r9, r0
  403c50:	f000 ff62 	bl	404b18 <__mcmp>
  403c54:	2800      	cmp	r0, #0
  403c56:	f340 8146 	ble.w	403ee6 <_dtoa_r+0xdce>
  403c5a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403c5e:	f000 8106 	beq.w	403e6e <_dtoa_r+0xd56>
  403c62:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403c66:	46b3      	mov	fp, r6
  403c68:	f887 a000 	strb.w	sl, [r7]
  403c6c:	1c7d      	adds	r5, r7, #1
  403c6e:	9e06      	ldr	r6, [sp, #24]
  403c70:	e5d2      	b.n	403818 <_dtoa_r+0x700>
  403c72:	d104      	bne.n	403c7e <_dtoa_r+0xb66>
  403c74:	f01a 0f01 	tst.w	sl, #1
  403c78:	d001      	beq.n	403c7e <_dtoa_r+0xb66>
  403c7a:	e5bd      	b.n	4037f8 <_dtoa_r+0x6e0>
  403c7c:	4615      	mov	r5, r2
  403c7e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403c82:	2b30      	cmp	r3, #48	; 0x30
  403c84:	f105 32ff 	add.w	r2, r5, #4294967295
  403c88:	d0f8      	beq.n	403c7c <_dtoa_r+0xb64>
  403c8a:	e5c5      	b.n	403818 <_dtoa_r+0x700>
  403c8c:	9904      	ldr	r1, [sp, #16]
  403c8e:	2230      	movs	r2, #48	; 0x30
  403c90:	700a      	strb	r2, [r1, #0]
  403c92:	9a02      	ldr	r2, [sp, #8]
  403c94:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403c98:	3201      	adds	r2, #1
  403c9a:	9202      	str	r2, [sp, #8]
  403c9c:	f7ff bbfc 	b.w	403498 <_dtoa_r+0x380>
  403ca0:	f000 80bb 	beq.w	403e1a <_dtoa_r+0xd02>
  403ca4:	9b02      	ldr	r3, [sp, #8]
  403ca6:	425d      	negs	r5, r3
  403ca8:	4b84      	ldr	r3, [pc, #528]	; (403ebc <_dtoa_r+0xda4>)
  403caa:	f005 020f 	and.w	r2, r5, #15
  403cae:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403cb2:	e9d3 2300 	ldrd	r2, r3, [r3]
  403cb6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403cba:	f001 fedb 	bl	405a74 <__aeabi_dmul>
  403cbe:	112d      	asrs	r5, r5, #4
  403cc0:	4607      	mov	r7, r0
  403cc2:	4688      	mov	r8, r1
  403cc4:	f000 812c 	beq.w	403f20 <_dtoa_r+0xe08>
  403cc8:	4e7d      	ldr	r6, [pc, #500]	; (403ec0 <_dtoa_r+0xda8>)
  403cca:	f04f 0a02 	mov.w	sl, #2
  403cce:	07eb      	lsls	r3, r5, #31
  403cd0:	d509      	bpl.n	403ce6 <_dtoa_r+0xbce>
  403cd2:	4638      	mov	r0, r7
  403cd4:	4641      	mov	r1, r8
  403cd6:	e9d6 2300 	ldrd	r2, r3, [r6]
  403cda:	f001 fecb 	bl	405a74 <__aeabi_dmul>
  403cde:	f10a 0a01 	add.w	sl, sl, #1
  403ce2:	4607      	mov	r7, r0
  403ce4:	4688      	mov	r8, r1
  403ce6:	106d      	asrs	r5, r5, #1
  403ce8:	f106 0608 	add.w	r6, r6, #8
  403cec:	d1ef      	bne.n	403cce <_dtoa_r+0xbb6>
  403cee:	e608      	b.n	403902 <_dtoa_r+0x7ea>
  403cf0:	6871      	ldr	r1, [r6, #4]
  403cf2:	4620      	mov	r0, r4
  403cf4:	f000 fd12 	bl	40471c <_Balloc>
  403cf8:	6933      	ldr	r3, [r6, #16]
  403cfa:	3302      	adds	r3, #2
  403cfc:	009a      	lsls	r2, r3, #2
  403cfe:	4605      	mov	r5, r0
  403d00:	f106 010c 	add.w	r1, r6, #12
  403d04:	300c      	adds	r0, #12
  403d06:	f000 fc63 	bl	4045d0 <memcpy>
  403d0a:	4629      	mov	r1, r5
  403d0c:	2201      	movs	r2, #1
  403d0e:	4620      	mov	r0, r4
  403d10:	f000 feb0 	bl	404a74 <__lshift>
  403d14:	9006      	str	r0, [sp, #24]
  403d16:	e4b5      	b.n	403684 <_dtoa_r+0x56c>
  403d18:	2b39      	cmp	r3, #57	; 0x39
  403d1a:	f8cd b018 	str.w	fp, [sp, #24]
  403d1e:	46d0      	mov	r8, sl
  403d20:	f000 80a5 	beq.w	403e6e <_dtoa_r+0xd56>
  403d24:	f103 0a01 	add.w	sl, r3, #1
  403d28:	46b3      	mov	fp, r6
  403d2a:	f887 a000 	strb.w	sl, [r7]
  403d2e:	1c7d      	adds	r5, r7, #1
  403d30:	9e06      	ldr	r6, [sp, #24]
  403d32:	e571      	b.n	403818 <_dtoa_r+0x700>
  403d34:	465a      	mov	r2, fp
  403d36:	46d0      	mov	r8, sl
  403d38:	46b3      	mov	fp, r6
  403d3a:	469a      	mov	sl, r3
  403d3c:	4616      	mov	r6, r2
  403d3e:	e54f      	b.n	4037e0 <_dtoa_r+0x6c8>
  403d40:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403d42:	495e      	ldr	r1, [pc, #376]	; (403ebc <_dtoa_r+0xda4>)
  403d44:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403d48:	462a      	mov	r2, r5
  403d4a:	4633      	mov	r3, r6
  403d4c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403d50:	f001 fe90 	bl	405a74 <__aeabi_dmul>
  403d54:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403d58:	4638      	mov	r0, r7
  403d5a:	4641      	mov	r1, r8
  403d5c:	f002 f93a 	bl	405fd4 <__aeabi_d2iz>
  403d60:	4605      	mov	r5, r0
  403d62:	f001 fe21 	bl	4059a8 <__aeabi_i2d>
  403d66:	460b      	mov	r3, r1
  403d68:	4602      	mov	r2, r0
  403d6a:	4641      	mov	r1, r8
  403d6c:	4638      	mov	r0, r7
  403d6e:	f001 fccd 	bl	40570c <__aeabi_dsub>
  403d72:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403d74:	460f      	mov	r7, r1
  403d76:	9904      	ldr	r1, [sp, #16]
  403d78:	3530      	adds	r5, #48	; 0x30
  403d7a:	2b01      	cmp	r3, #1
  403d7c:	700d      	strb	r5, [r1, #0]
  403d7e:	4606      	mov	r6, r0
  403d80:	f101 0501 	add.w	r5, r1, #1
  403d84:	d026      	beq.n	403dd4 <_dtoa_r+0xcbc>
  403d86:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403d88:	9a04      	ldr	r2, [sp, #16]
  403d8a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 403ec8 <_dtoa_r+0xdb0>
  403d8e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403d92:	4413      	add	r3, r2
  403d94:	f04f 0a00 	mov.w	sl, #0
  403d98:	4699      	mov	r9, r3
  403d9a:	4652      	mov	r2, sl
  403d9c:	465b      	mov	r3, fp
  403d9e:	4630      	mov	r0, r6
  403da0:	4639      	mov	r1, r7
  403da2:	f001 fe67 	bl	405a74 <__aeabi_dmul>
  403da6:	460f      	mov	r7, r1
  403da8:	4606      	mov	r6, r0
  403daa:	f002 f913 	bl	405fd4 <__aeabi_d2iz>
  403dae:	4680      	mov	r8, r0
  403db0:	f001 fdfa 	bl	4059a8 <__aeabi_i2d>
  403db4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403db8:	4602      	mov	r2, r0
  403dba:	460b      	mov	r3, r1
  403dbc:	4630      	mov	r0, r6
  403dbe:	4639      	mov	r1, r7
  403dc0:	f001 fca4 	bl	40570c <__aeabi_dsub>
  403dc4:	f805 8b01 	strb.w	r8, [r5], #1
  403dc8:	454d      	cmp	r5, r9
  403dca:	4606      	mov	r6, r0
  403dcc:	460f      	mov	r7, r1
  403dce:	d1e4      	bne.n	403d9a <_dtoa_r+0xc82>
  403dd0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403dd4:	4b3b      	ldr	r3, [pc, #236]	; (403ec4 <_dtoa_r+0xdac>)
  403dd6:	2200      	movs	r2, #0
  403dd8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  403ddc:	f001 fc98 	bl	405710 <__adddf3>
  403de0:	4632      	mov	r2, r6
  403de2:	463b      	mov	r3, r7
  403de4:	f002 f8b8 	bl	405f58 <__aeabi_dcmplt>
  403de8:	2800      	cmp	r0, #0
  403dea:	d046      	beq.n	403e7a <_dtoa_r+0xd62>
  403dec:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403dee:	9302      	str	r3, [sp, #8]
  403df0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403df4:	f7ff bb43 	b.w	40347e <_dtoa_r+0x366>
  403df8:	f04f 0800 	mov.w	r8, #0
  403dfc:	4646      	mov	r6, r8
  403dfe:	e6a9      	b.n	403b54 <_dtoa_r+0xa3c>
  403e00:	9b08      	ldr	r3, [sp, #32]
  403e02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403e04:	1a9d      	subs	r5, r3, r2
  403e06:	2300      	movs	r3, #0
  403e08:	f7ff bb71 	b.w	4034ee <_dtoa_r+0x3d6>
  403e0c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  403e0e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403e10:	9d08      	ldr	r5, [sp, #32]
  403e12:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  403e16:	f7ff bb6a 	b.w	4034ee <_dtoa_r+0x3d6>
  403e1a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  403e1e:	f04f 0a02 	mov.w	sl, #2
  403e22:	e56e      	b.n	403902 <_dtoa_r+0x7ea>
  403e24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e26:	2b00      	cmp	r3, #0
  403e28:	f43f aeb8 	beq.w	403b9c <_dtoa_r+0xa84>
  403e2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403e2e:	2b00      	cmp	r3, #0
  403e30:	f77f aede 	ble.w	403bf0 <_dtoa_r+0xad8>
  403e34:	2200      	movs	r2, #0
  403e36:	4b24      	ldr	r3, [pc, #144]	; (403ec8 <_dtoa_r+0xdb0>)
  403e38:	4638      	mov	r0, r7
  403e3a:	4641      	mov	r1, r8
  403e3c:	f001 fe1a 	bl	405a74 <__aeabi_dmul>
  403e40:	4607      	mov	r7, r0
  403e42:	4688      	mov	r8, r1
  403e44:	f10a 0001 	add.w	r0, sl, #1
  403e48:	f001 fdae 	bl	4059a8 <__aeabi_i2d>
  403e4c:	463a      	mov	r2, r7
  403e4e:	4643      	mov	r3, r8
  403e50:	f001 fe10 	bl	405a74 <__aeabi_dmul>
  403e54:	2200      	movs	r2, #0
  403e56:	4b17      	ldr	r3, [pc, #92]	; (403eb4 <_dtoa_r+0xd9c>)
  403e58:	f001 fc5a 	bl	405710 <__adddf3>
  403e5c:	9a02      	ldr	r2, [sp, #8]
  403e5e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403e60:	9312      	str	r3, [sp, #72]	; 0x48
  403e62:	3a01      	subs	r2, #1
  403e64:	4605      	mov	r5, r0
  403e66:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403e6a:	9215      	str	r2, [sp, #84]	; 0x54
  403e6c:	e56a      	b.n	403944 <_dtoa_r+0x82c>
  403e6e:	2239      	movs	r2, #57	; 0x39
  403e70:	46b3      	mov	fp, r6
  403e72:	703a      	strb	r2, [r7, #0]
  403e74:	9e06      	ldr	r6, [sp, #24]
  403e76:	1c7d      	adds	r5, r7, #1
  403e78:	e4c0      	b.n	4037fc <_dtoa_r+0x6e4>
  403e7a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  403e7e:	2000      	movs	r0, #0
  403e80:	4910      	ldr	r1, [pc, #64]	; (403ec4 <_dtoa_r+0xdac>)
  403e82:	f001 fc43 	bl	40570c <__aeabi_dsub>
  403e86:	4632      	mov	r2, r6
  403e88:	463b      	mov	r3, r7
  403e8a:	f002 f883 	bl	405f94 <__aeabi_dcmpgt>
  403e8e:	b908      	cbnz	r0, 403e94 <_dtoa_r+0xd7c>
  403e90:	e6ae      	b.n	403bf0 <_dtoa_r+0xad8>
  403e92:	4615      	mov	r5, r2
  403e94:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403e98:	2b30      	cmp	r3, #48	; 0x30
  403e9a:	f105 32ff 	add.w	r2, r5, #4294967295
  403e9e:	d0f8      	beq.n	403e92 <_dtoa_r+0xd7a>
  403ea0:	e5d7      	b.n	403a52 <_dtoa_r+0x93a>
  403ea2:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403ea6:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403ea8:	9302      	str	r3, [sp, #8]
  403eaa:	f7ff bae8 	b.w	40347e <_dtoa_r+0x366>
  403eae:	970c      	str	r7, [sp, #48]	; 0x30
  403eb0:	f7ff bba5 	b.w	4035fe <_dtoa_r+0x4e6>
  403eb4:	401c0000 	.word	0x401c0000
  403eb8:	40140000 	.word	0x40140000
  403ebc:	00407498 	.word	0x00407498
  403ec0:	00407470 	.word	0x00407470
  403ec4:	3fe00000 	.word	0x3fe00000
  403ec8:	40240000 	.word	0x40240000
  403ecc:	2b39      	cmp	r3, #57	; 0x39
  403ece:	f8cd b018 	str.w	fp, [sp, #24]
  403ed2:	46d0      	mov	r8, sl
  403ed4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403ed8:	469a      	mov	sl, r3
  403eda:	d0c8      	beq.n	403e6e <_dtoa_r+0xd56>
  403edc:	f1bb 0f00 	cmp.w	fp, #0
  403ee0:	f73f aebf 	bgt.w	403c62 <_dtoa_r+0xb4a>
  403ee4:	e6bf      	b.n	403c66 <_dtoa_r+0xb4e>
  403ee6:	f47f aebe 	bne.w	403c66 <_dtoa_r+0xb4e>
  403eea:	f01a 0f01 	tst.w	sl, #1
  403eee:	f43f aeba 	beq.w	403c66 <_dtoa_r+0xb4e>
  403ef2:	e6b2      	b.n	403c5a <_dtoa_r+0xb42>
  403ef4:	f04f 0800 	mov.w	r8, #0
  403ef8:	4646      	mov	r6, r8
  403efa:	e5e9      	b.n	403ad0 <_dtoa_r+0x9b8>
  403efc:	4631      	mov	r1, r6
  403efe:	2300      	movs	r3, #0
  403f00:	220a      	movs	r2, #10
  403f02:	4620      	mov	r0, r4
  403f04:	f000 fc3a 	bl	40477c <__multadd>
  403f08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403f0a:	2b00      	cmp	r3, #0
  403f0c:	4606      	mov	r6, r0
  403f0e:	dd0a      	ble.n	403f26 <_dtoa_r+0xe0e>
  403f10:	930a      	str	r3, [sp, #40]	; 0x28
  403f12:	f7ff bbaa 	b.w	40366a <_dtoa_r+0x552>
  403f16:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403f18:	2b02      	cmp	r3, #2
  403f1a:	dc23      	bgt.n	403f64 <_dtoa_r+0xe4c>
  403f1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403f1e:	e43b      	b.n	403798 <_dtoa_r+0x680>
  403f20:	f04f 0a02 	mov.w	sl, #2
  403f24:	e4ed      	b.n	403902 <_dtoa_r+0x7ea>
  403f26:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403f28:	2b02      	cmp	r3, #2
  403f2a:	dc1b      	bgt.n	403f64 <_dtoa_r+0xe4c>
  403f2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403f2e:	e7ef      	b.n	403f10 <_dtoa_r+0xdf8>
  403f30:	2500      	movs	r5, #0
  403f32:	6465      	str	r5, [r4, #68]	; 0x44
  403f34:	4629      	mov	r1, r5
  403f36:	4620      	mov	r0, r4
  403f38:	f000 fbf0 	bl	40471c <_Balloc>
  403f3c:	f04f 33ff 	mov.w	r3, #4294967295
  403f40:	930a      	str	r3, [sp, #40]	; 0x28
  403f42:	930f      	str	r3, [sp, #60]	; 0x3c
  403f44:	2301      	movs	r3, #1
  403f46:	9004      	str	r0, [sp, #16]
  403f48:	9525      	str	r5, [sp, #148]	; 0x94
  403f4a:	6420      	str	r0, [r4, #64]	; 0x40
  403f4c:	930b      	str	r3, [sp, #44]	; 0x2c
  403f4e:	f7ff b9dd 	b.w	40330c <_dtoa_r+0x1f4>
  403f52:	2501      	movs	r5, #1
  403f54:	f7ff b9a5 	b.w	4032a2 <_dtoa_r+0x18a>
  403f58:	f43f ab69 	beq.w	40362e <_dtoa_r+0x516>
  403f5c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  403f60:	f7ff bbf9 	b.w	403756 <_dtoa_r+0x63e>
  403f64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403f66:	930a      	str	r3, [sp, #40]	; 0x28
  403f68:	e5e5      	b.n	403b36 <_dtoa_r+0xa1e>
  403f6a:	bf00      	nop

00403f6c <__libc_fini_array>:
  403f6c:	b538      	push	{r3, r4, r5, lr}
  403f6e:	4c0a      	ldr	r4, [pc, #40]	; (403f98 <__libc_fini_array+0x2c>)
  403f70:	4d0a      	ldr	r5, [pc, #40]	; (403f9c <__libc_fini_array+0x30>)
  403f72:	1b64      	subs	r4, r4, r5
  403f74:	10a4      	asrs	r4, r4, #2
  403f76:	d00a      	beq.n	403f8e <__libc_fini_array+0x22>
  403f78:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  403f7c:	3b01      	subs	r3, #1
  403f7e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  403f82:	3c01      	subs	r4, #1
  403f84:	f855 3904 	ldr.w	r3, [r5], #-4
  403f88:	4798      	blx	r3
  403f8a:	2c00      	cmp	r4, #0
  403f8c:	d1f9      	bne.n	403f82 <__libc_fini_array+0x16>
  403f8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  403f92:	f003 bb7f 	b.w	407694 <_fini>
  403f96:	bf00      	nop
  403f98:	004076a4 	.word	0x004076a4
  403f9c:	004076a0 	.word	0x004076a0

00403fa0 <_localeconv_r>:
  403fa0:	4a04      	ldr	r2, [pc, #16]	; (403fb4 <_localeconv_r+0x14>)
  403fa2:	4b05      	ldr	r3, [pc, #20]	; (403fb8 <_localeconv_r+0x18>)
  403fa4:	6812      	ldr	r2, [r2, #0]
  403fa6:	6b50      	ldr	r0, [r2, #52]	; 0x34
  403fa8:	2800      	cmp	r0, #0
  403faa:	bf08      	it	eq
  403fac:	4618      	moveq	r0, r3
  403fae:	30f0      	adds	r0, #240	; 0xf0
  403fb0:	4770      	bx	lr
  403fb2:	bf00      	nop
  403fb4:	20400020 	.word	0x20400020
  403fb8:	20400864 	.word	0x20400864

00403fbc <__retarget_lock_acquire_recursive>:
  403fbc:	4770      	bx	lr
  403fbe:	bf00      	nop

00403fc0 <__retarget_lock_release_recursive>:
  403fc0:	4770      	bx	lr
  403fc2:	bf00      	nop

00403fc4 <_malloc_r>:
  403fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403fc8:	f101 060b 	add.w	r6, r1, #11
  403fcc:	2e16      	cmp	r6, #22
  403fce:	b083      	sub	sp, #12
  403fd0:	4605      	mov	r5, r0
  403fd2:	f240 809e 	bls.w	404112 <_malloc_r+0x14e>
  403fd6:	f036 0607 	bics.w	r6, r6, #7
  403fda:	f100 80bd 	bmi.w	404158 <_malloc_r+0x194>
  403fde:	42b1      	cmp	r1, r6
  403fe0:	f200 80ba 	bhi.w	404158 <_malloc_r+0x194>
  403fe4:	f000 fb8e 	bl	404704 <__malloc_lock>
  403fe8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403fec:	f0c0 8293 	bcc.w	404516 <_malloc_r+0x552>
  403ff0:	0a73      	lsrs	r3, r6, #9
  403ff2:	f000 80b8 	beq.w	404166 <_malloc_r+0x1a2>
  403ff6:	2b04      	cmp	r3, #4
  403ff8:	f200 8179 	bhi.w	4042ee <_malloc_r+0x32a>
  403ffc:	09b3      	lsrs	r3, r6, #6
  403ffe:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404002:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  404006:	00c3      	lsls	r3, r0, #3
  404008:	4fbf      	ldr	r7, [pc, #764]	; (404308 <_malloc_r+0x344>)
  40400a:	443b      	add	r3, r7
  40400c:	f1a3 0108 	sub.w	r1, r3, #8
  404010:	685c      	ldr	r4, [r3, #4]
  404012:	42a1      	cmp	r1, r4
  404014:	d106      	bne.n	404024 <_malloc_r+0x60>
  404016:	e00c      	b.n	404032 <_malloc_r+0x6e>
  404018:	2a00      	cmp	r2, #0
  40401a:	f280 80aa 	bge.w	404172 <_malloc_r+0x1ae>
  40401e:	68e4      	ldr	r4, [r4, #12]
  404020:	42a1      	cmp	r1, r4
  404022:	d006      	beq.n	404032 <_malloc_r+0x6e>
  404024:	6863      	ldr	r3, [r4, #4]
  404026:	f023 0303 	bic.w	r3, r3, #3
  40402a:	1b9a      	subs	r2, r3, r6
  40402c:	2a0f      	cmp	r2, #15
  40402e:	ddf3      	ble.n	404018 <_malloc_r+0x54>
  404030:	4670      	mov	r0, lr
  404032:	693c      	ldr	r4, [r7, #16]
  404034:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 40431c <_malloc_r+0x358>
  404038:	4574      	cmp	r4, lr
  40403a:	f000 81ab 	beq.w	404394 <_malloc_r+0x3d0>
  40403e:	6863      	ldr	r3, [r4, #4]
  404040:	f023 0303 	bic.w	r3, r3, #3
  404044:	1b9a      	subs	r2, r3, r6
  404046:	2a0f      	cmp	r2, #15
  404048:	f300 8190 	bgt.w	40436c <_malloc_r+0x3a8>
  40404c:	2a00      	cmp	r2, #0
  40404e:	f8c7 e014 	str.w	lr, [r7, #20]
  404052:	f8c7 e010 	str.w	lr, [r7, #16]
  404056:	f280 809d 	bge.w	404194 <_malloc_r+0x1d0>
  40405a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40405e:	f080 8161 	bcs.w	404324 <_malloc_r+0x360>
  404062:	08db      	lsrs	r3, r3, #3
  404064:	f103 0c01 	add.w	ip, r3, #1
  404068:	1099      	asrs	r1, r3, #2
  40406a:	687a      	ldr	r2, [r7, #4]
  40406c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404070:	f8c4 8008 	str.w	r8, [r4, #8]
  404074:	2301      	movs	r3, #1
  404076:	408b      	lsls	r3, r1
  404078:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40407c:	4313      	orrs	r3, r2
  40407e:	3908      	subs	r1, #8
  404080:	60e1      	str	r1, [r4, #12]
  404082:	607b      	str	r3, [r7, #4]
  404084:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404088:	f8c8 400c 	str.w	r4, [r8, #12]
  40408c:	1082      	asrs	r2, r0, #2
  40408e:	2401      	movs	r4, #1
  404090:	4094      	lsls	r4, r2
  404092:	429c      	cmp	r4, r3
  404094:	f200 808b 	bhi.w	4041ae <_malloc_r+0x1ea>
  404098:	421c      	tst	r4, r3
  40409a:	d106      	bne.n	4040aa <_malloc_r+0xe6>
  40409c:	f020 0003 	bic.w	r0, r0, #3
  4040a0:	0064      	lsls	r4, r4, #1
  4040a2:	421c      	tst	r4, r3
  4040a4:	f100 0004 	add.w	r0, r0, #4
  4040a8:	d0fa      	beq.n	4040a0 <_malloc_r+0xdc>
  4040aa:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4040ae:	46cc      	mov	ip, r9
  4040b0:	4680      	mov	r8, r0
  4040b2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4040b6:	459c      	cmp	ip, r3
  4040b8:	d107      	bne.n	4040ca <_malloc_r+0x106>
  4040ba:	e16d      	b.n	404398 <_malloc_r+0x3d4>
  4040bc:	2a00      	cmp	r2, #0
  4040be:	f280 817b 	bge.w	4043b8 <_malloc_r+0x3f4>
  4040c2:	68db      	ldr	r3, [r3, #12]
  4040c4:	459c      	cmp	ip, r3
  4040c6:	f000 8167 	beq.w	404398 <_malloc_r+0x3d4>
  4040ca:	6859      	ldr	r1, [r3, #4]
  4040cc:	f021 0103 	bic.w	r1, r1, #3
  4040d0:	1b8a      	subs	r2, r1, r6
  4040d2:	2a0f      	cmp	r2, #15
  4040d4:	ddf2      	ble.n	4040bc <_malloc_r+0xf8>
  4040d6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4040da:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4040de:	9300      	str	r3, [sp, #0]
  4040e0:	199c      	adds	r4, r3, r6
  4040e2:	4628      	mov	r0, r5
  4040e4:	f046 0601 	orr.w	r6, r6, #1
  4040e8:	f042 0501 	orr.w	r5, r2, #1
  4040ec:	605e      	str	r6, [r3, #4]
  4040ee:	f8c8 c00c 	str.w	ip, [r8, #12]
  4040f2:	f8cc 8008 	str.w	r8, [ip, #8]
  4040f6:	617c      	str	r4, [r7, #20]
  4040f8:	613c      	str	r4, [r7, #16]
  4040fa:	f8c4 e00c 	str.w	lr, [r4, #12]
  4040fe:	f8c4 e008 	str.w	lr, [r4, #8]
  404102:	6065      	str	r5, [r4, #4]
  404104:	505a      	str	r2, [r3, r1]
  404106:	f000 fb03 	bl	404710 <__malloc_unlock>
  40410a:	9b00      	ldr	r3, [sp, #0]
  40410c:	f103 0408 	add.w	r4, r3, #8
  404110:	e01e      	b.n	404150 <_malloc_r+0x18c>
  404112:	2910      	cmp	r1, #16
  404114:	d820      	bhi.n	404158 <_malloc_r+0x194>
  404116:	f000 faf5 	bl	404704 <__malloc_lock>
  40411a:	2610      	movs	r6, #16
  40411c:	2318      	movs	r3, #24
  40411e:	2002      	movs	r0, #2
  404120:	4f79      	ldr	r7, [pc, #484]	; (404308 <_malloc_r+0x344>)
  404122:	443b      	add	r3, r7
  404124:	f1a3 0208 	sub.w	r2, r3, #8
  404128:	685c      	ldr	r4, [r3, #4]
  40412a:	4294      	cmp	r4, r2
  40412c:	f000 813d 	beq.w	4043aa <_malloc_r+0x3e6>
  404130:	6863      	ldr	r3, [r4, #4]
  404132:	68e1      	ldr	r1, [r4, #12]
  404134:	68a6      	ldr	r6, [r4, #8]
  404136:	f023 0303 	bic.w	r3, r3, #3
  40413a:	4423      	add	r3, r4
  40413c:	4628      	mov	r0, r5
  40413e:	685a      	ldr	r2, [r3, #4]
  404140:	60f1      	str	r1, [r6, #12]
  404142:	f042 0201 	orr.w	r2, r2, #1
  404146:	608e      	str	r6, [r1, #8]
  404148:	605a      	str	r2, [r3, #4]
  40414a:	f000 fae1 	bl	404710 <__malloc_unlock>
  40414e:	3408      	adds	r4, #8
  404150:	4620      	mov	r0, r4
  404152:	b003      	add	sp, #12
  404154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404158:	2400      	movs	r4, #0
  40415a:	230c      	movs	r3, #12
  40415c:	4620      	mov	r0, r4
  40415e:	602b      	str	r3, [r5, #0]
  404160:	b003      	add	sp, #12
  404162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404166:	2040      	movs	r0, #64	; 0x40
  404168:	f44f 7300 	mov.w	r3, #512	; 0x200
  40416c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404170:	e74a      	b.n	404008 <_malloc_r+0x44>
  404172:	4423      	add	r3, r4
  404174:	68e1      	ldr	r1, [r4, #12]
  404176:	685a      	ldr	r2, [r3, #4]
  404178:	68a6      	ldr	r6, [r4, #8]
  40417a:	f042 0201 	orr.w	r2, r2, #1
  40417e:	60f1      	str	r1, [r6, #12]
  404180:	4628      	mov	r0, r5
  404182:	608e      	str	r6, [r1, #8]
  404184:	605a      	str	r2, [r3, #4]
  404186:	f000 fac3 	bl	404710 <__malloc_unlock>
  40418a:	3408      	adds	r4, #8
  40418c:	4620      	mov	r0, r4
  40418e:	b003      	add	sp, #12
  404190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404194:	4423      	add	r3, r4
  404196:	4628      	mov	r0, r5
  404198:	685a      	ldr	r2, [r3, #4]
  40419a:	f042 0201 	orr.w	r2, r2, #1
  40419e:	605a      	str	r2, [r3, #4]
  4041a0:	f000 fab6 	bl	404710 <__malloc_unlock>
  4041a4:	3408      	adds	r4, #8
  4041a6:	4620      	mov	r0, r4
  4041a8:	b003      	add	sp, #12
  4041aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4041ae:	68bc      	ldr	r4, [r7, #8]
  4041b0:	6863      	ldr	r3, [r4, #4]
  4041b2:	f023 0803 	bic.w	r8, r3, #3
  4041b6:	45b0      	cmp	r8, r6
  4041b8:	d304      	bcc.n	4041c4 <_malloc_r+0x200>
  4041ba:	eba8 0306 	sub.w	r3, r8, r6
  4041be:	2b0f      	cmp	r3, #15
  4041c0:	f300 8085 	bgt.w	4042ce <_malloc_r+0x30a>
  4041c4:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404320 <_malloc_r+0x35c>
  4041c8:	4b50      	ldr	r3, [pc, #320]	; (40430c <_malloc_r+0x348>)
  4041ca:	f8d9 2000 	ldr.w	r2, [r9]
  4041ce:	681b      	ldr	r3, [r3, #0]
  4041d0:	3201      	adds	r2, #1
  4041d2:	4433      	add	r3, r6
  4041d4:	eb04 0a08 	add.w	sl, r4, r8
  4041d8:	f000 8155 	beq.w	404486 <_malloc_r+0x4c2>
  4041dc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4041e0:	330f      	adds	r3, #15
  4041e2:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4041e6:	f02b 0b0f 	bic.w	fp, fp, #15
  4041ea:	4659      	mov	r1, fp
  4041ec:	4628      	mov	r0, r5
  4041ee:	f000 fd8f 	bl	404d10 <_sbrk_r>
  4041f2:	1c41      	adds	r1, r0, #1
  4041f4:	4602      	mov	r2, r0
  4041f6:	f000 80fc 	beq.w	4043f2 <_malloc_r+0x42e>
  4041fa:	4582      	cmp	sl, r0
  4041fc:	f200 80f7 	bhi.w	4043ee <_malloc_r+0x42a>
  404200:	4b43      	ldr	r3, [pc, #268]	; (404310 <_malloc_r+0x34c>)
  404202:	6819      	ldr	r1, [r3, #0]
  404204:	4459      	add	r1, fp
  404206:	6019      	str	r1, [r3, #0]
  404208:	f000 814d 	beq.w	4044a6 <_malloc_r+0x4e2>
  40420c:	f8d9 0000 	ldr.w	r0, [r9]
  404210:	3001      	adds	r0, #1
  404212:	bf1b      	ittet	ne
  404214:	eba2 0a0a 	subne.w	sl, r2, sl
  404218:	4451      	addne	r1, sl
  40421a:	f8c9 2000 	streq.w	r2, [r9]
  40421e:	6019      	strne	r1, [r3, #0]
  404220:	f012 0107 	ands.w	r1, r2, #7
  404224:	f000 8115 	beq.w	404452 <_malloc_r+0x48e>
  404228:	f1c1 0008 	rsb	r0, r1, #8
  40422c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404230:	4402      	add	r2, r0
  404232:	3108      	adds	r1, #8
  404234:	eb02 090b 	add.w	r9, r2, fp
  404238:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40423c:	eba1 0909 	sub.w	r9, r1, r9
  404240:	4649      	mov	r1, r9
  404242:	4628      	mov	r0, r5
  404244:	9301      	str	r3, [sp, #4]
  404246:	9200      	str	r2, [sp, #0]
  404248:	f000 fd62 	bl	404d10 <_sbrk_r>
  40424c:	1c43      	adds	r3, r0, #1
  40424e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404252:	f000 8143 	beq.w	4044dc <_malloc_r+0x518>
  404256:	1a80      	subs	r0, r0, r2
  404258:	4448      	add	r0, r9
  40425a:	f040 0001 	orr.w	r0, r0, #1
  40425e:	6819      	ldr	r1, [r3, #0]
  404260:	60ba      	str	r2, [r7, #8]
  404262:	4449      	add	r1, r9
  404264:	42bc      	cmp	r4, r7
  404266:	6050      	str	r0, [r2, #4]
  404268:	6019      	str	r1, [r3, #0]
  40426a:	d017      	beq.n	40429c <_malloc_r+0x2d8>
  40426c:	f1b8 0f0f 	cmp.w	r8, #15
  404270:	f240 80fb 	bls.w	40446a <_malloc_r+0x4a6>
  404274:	6860      	ldr	r0, [r4, #4]
  404276:	f1a8 020c 	sub.w	r2, r8, #12
  40427a:	f022 0207 	bic.w	r2, r2, #7
  40427e:	eb04 0e02 	add.w	lr, r4, r2
  404282:	f000 0001 	and.w	r0, r0, #1
  404286:	f04f 0c05 	mov.w	ip, #5
  40428a:	4310      	orrs	r0, r2
  40428c:	2a0f      	cmp	r2, #15
  40428e:	6060      	str	r0, [r4, #4]
  404290:	f8ce c004 	str.w	ip, [lr, #4]
  404294:	f8ce c008 	str.w	ip, [lr, #8]
  404298:	f200 8117 	bhi.w	4044ca <_malloc_r+0x506>
  40429c:	4b1d      	ldr	r3, [pc, #116]	; (404314 <_malloc_r+0x350>)
  40429e:	68bc      	ldr	r4, [r7, #8]
  4042a0:	681a      	ldr	r2, [r3, #0]
  4042a2:	4291      	cmp	r1, r2
  4042a4:	bf88      	it	hi
  4042a6:	6019      	strhi	r1, [r3, #0]
  4042a8:	4b1b      	ldr	r3, [pc, #108]	; (404318 <_malloc_r+0x354>)
  4042aa:	681a      	ldr	r2, [r3, #0]
  4042ac:	4291      	cmp	r1, r2
  4042ae:	6862      	ldr	r2, [r4, #4]
  4042b0:	bf88      	it	hi
  4042b2:	6019      	strhi	r1, [r3, #0]
  4042b4:	f022 0203 	bic.w	r2, r2, #3
  4042b8:	4296      	cmp	r6, r2
  4042ba:	eba2 0306 	sub.w	r3, r2, r6
  4042be:	d801      	bhi.n	4042c4 <_malloc_r+0x300>
  4042c0:	2b0f      	cmp	r3, #15
  4042c2:	dc04      	bgt.n	4042ce <_malloc_r+0x30a>
  4042c4:	4628      	mov	r0, r5
  4042c6:	f000 fa23 	bl	404710 <__malloc_unlock>
  4042ca:	2400      	movs	r4, #0
  4042cc:	e740      	b.n	404150 <_malloc_r+0x18c>
  4042ce:	19a2      	adds	r2, r4, r6
  4042d0:	f043 0301 	orr.w	r3, r3, #1
  4042d4:	f046 0601 	orr.w	r6, r6, #1
  4042d8:	6066      	str	r6, [r4, #4]
  4042da:	4628      	mov	r0, r5
  4042dc:	60ba      	str	r2, [r7, #8]
  4042de:	6053      	str	r3, [r2, #4]
  4042e0:	f000 fa16 	bl	404710 <__malloc_unlock>
  4042e4:	3408      	adds	r4, #8
  4042e6:	4620      	mov	r0, r4
  4042e8:	b003      	add	sp, #12
  4042ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4042ee:	2b14      	cmp	r3, #20
  4042f0:	d971      	bls.n	4043d6 <_malloc_r+0x412>
  4042f2:	2b54      	cmp	r3, #84	; 0x54
  4042f4:	f200 80a3 	bhi.w	40443e <_malloc_r+0x47a>
  4042f8:	0b33      	lsrs	r3, r6, #12
  4042fa:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4042fe:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404302:	00c3      	lsls	r3, r0, #3
  404304:	e680      	b.n	404008 <_malloc_r+0x44>
  404306:	bf00      	nop
  404308:	20400454 	.word	0x20400454
  40430c:	20400cb4 	.word	0x20400cb4
  404310:	20400c84 	.word	0x20400c84
  404314:	20400cac 	.word	0x20400cac
  404318:	20400cb0 	.word	0x20400cb0
  40431c:	2040045c 	.word	0x2040045c
  404320:	2040085c 	.word	0x2040085c
  404324:	0a5a      	lsrs	r2, r3, #9
  404326:	2a04      	cmp	r2, #4
  404328:	d95b      	bls.n	4043e2 <_malloc_r+0x41e>
  40432a:	2a14      	cmp	r2, #20
  40432c:	f200 80ae 	bhi.w	40448c <_malloc_r+0x4c8>
  404330:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404334:	00c9      	lsls	r1, r1, #3
  404336:	325b      	adds	r2, #91	; 0x5b
  404338:	eb07 0c01 	add.w	ip, r7, r1
  40433c:	5879      	ldr	r1, [r7, r1]
  40433e:	f1ac 0c08 	sub.w	ip, ip, #8
  404342:	458c      	cmp	ip, r1
  404344:	f000 8088 	beq.w	404458 <_malloc_r+0x494>
  404348:	684a      	ldr	r2, [r1, #4]
  40434a:	f022 0203 	bic.w	r2, r2, #3
  40434e:	4293      	cmp	r3, r2
  404350:	d273      	bcs.n	40443a <_malloc_r+0x476>
  404352:	6889      	ldr	r1, [r1, #8]
  404354:	458c      	cmp	ip, r1
  404356:	d1f7      	bne.n	404348 <_malloc_r+0x384>
  404358:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40435c:	687b      	ldr	r3, [r7, #4]
  40435e:	60e2      	str	r2, [r4, #12]
  404360:	f8c4 c008 	str.w	ip, [r4, #8]
  404364:	6094      	str	r4, [r2, #8]
  404366:	f8cc 400c 	str.w	r4, [ip, #12]
  40436a:	e68f      	b.n	40408c <_malloc_r+0xc8>
  40436c:	19a1      	adds	r1, r4, r6
  40436e:	f046 0c01 	orr.w	ip, r6, #1
  404372:	f042 0601 	orr.w	r6, r2, #1
  404376:	f8c4 c004 	str.w	ip, [r4, #4]
  40437a:	4628      	mov	r0, r5
  40437c:	6179      	str	r1, [r7, #20]
  40437e:	6139      	str	r1, [r7, #16]
  404380:	f8c1 e00c 	str.w	lr, [r1, #12]
  404384:	f8c1 e008 	str.w	lr, [r1, #8]
  404388:	604e      	str	r6, [r1, #4]
  40438a:	50e2      	str	r2, [r4, r3]
  40438c:	f000 f9c0 	bl	404710 <__malloc_unlock>
  404390:	3408      	adds	r4, #8
  404392:	e6dd      	b.n	404150 <_malloc_r+0x18c>
  404394:	687b      	ldr	r3, [r7, #4]
  404396:	e679      	b.n	40408c <_malloc_r+0xc8>
  404398:	f108 0801 	add.w	r8, r8, #1
  40439c:	f018 0f03 	tst.w	r8, #3
  4043a0:	f10c 0c08 	add.w	ip, ip, #8
  4043a4:	f47f ae85 	bne.w	4040b2 <_malloc_r+0xee>
  4043a8:	e02d      	b.n	404406 <_malloc_r+0x442>
  4043aa:	68dc      	ldr	r4, [r3, #12]
  4043ac:	42a3      	cmp	r3, r4
  4043ae:	bf08      	it	eq
  4043b0:	3002      	addeq	r0, #2
  4043b2:	f43f ae3e 	beq.w	404032 <_malloc_r+0x6e>
  4043b6:	e6bb      	b.n	404130 <_malloc_r+0x16c>
  4043b8:	4419      	add	r1, r3
  4043ba:	461c      	mov	r4, r3
  4043bc:	684a      	ldr	r2, [r1, #4]
  4043be:	68db      	ldr	r3, [r3, #12]
  4043c0:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4043c4:	f042 0201 	orr.w	r2, r2, #1
  4043c8:	604a      	str	r2, [r1, #4]
  4043ca:	4628      	mov	r0, r5
  4043cc:	60f3      	str	r3, [r6, #12]
  4043ce:	609e      	str	r6, [r3, #8]
  4043d0:	f000 f99e 	bl	404710 <__malloc_unlock>
  4043d4:	e6bc      	b.n	404150 <_malloc_r+0x18c>
  4043d6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4043da:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4043de:	00c3      	lsls	r3, r0, #3
  4043e0:	e612      	b.n	404008 <_malloc_r+0x44>
  4043e2:	099a      	lsrs	r2, r3, #6
  4043e4:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4043e8:	00c9      	lsls	r1, r1, #3
  4043ea:	3238      	adds	r2, #56	; 0x38
  4043ec:	e7a4      	b.n	404338 <_malloc_r+0x374>
  4043ee:	42bc      	cmp	r4, r7
  4043f0:	d054      	beq.n	40449c <_malloc_r+0x4d8>
  4043f2:	68bc      	ldr	r4, [r7, #8]
  4043f4:	6862      	ldr	r2, [r4, #4]
  4043f6:	f022 0203 	bic.w	r2, r2, #3
  4043fa:	e75d      	b.n	4042b8 <_malloc_r+0x2f4>
  4043fc:	f859 3908 	ldr.w	r3, [r9], #-8
  404400:	4599      	cmp	r9, r3
  404402:	f040 8086 	bne.w	404512 <_malloc_r+0x54e>
  404406:	f010 0f03 	tst.w	r0, #3
  40440a:	f100 30ff 	add.w	r0, r0, #4294967295
  40440e:	d1f5      	bne.n	4043fc <_malloc_r+0x438>
  404410:	687b      	ldr	r3, [r7, #4]
  404412:	ea23 0304 	bic.w	r3, r3, r4
  404416:	607b      	str	r3, [r7, #4]
  404418:	0064      	lsls	r4, r4, #1
  40441a:	429c      	cmp	r4, r3
  40441c:	f63f aec7 	bhi.w	4041ae <_malloc_r+0x1ea>
  404420:	2c00      	cmp	r4, #0
  404422:	f43f aec4 	beq.w	4041ae <_malloc_r+0x1ea>
  404426:	421c      	tst	r4, r3
  404428:	4640      	mov	r0, r8
  40442a:	f47f ae3e 	bne.w	4040aa <_malloc_r+0xe6>
  40442e:	0064      	lsls	r4, r4, #1
  404430:	421c      	tst	r4, r3
  404432:	f100 0004 	add.w	r0, r0, #4
  404436:	d0fa      	beq.n	40442e <_malloc_r+0x46a>
  404438:	e637      	b.n	4040aa <_malloc_r+0xe6>
  40443a:	468c      	mov	ip, r1
  40443c:	e78c      	b.n	404358 <_malloc_r+0x394>
  40443e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404442:	d815      	bhi.n	404470 <_malloc_r+0x4ac>
  404444:	0bf3      	lsrs	r3, r6, #15
  404446:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40444a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40444e:	00c3      	lsls	r3, r0, #3
  404450:	e5da      	b.n	404008 <_malloc_r+0x44>
  404452:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404456:	e6ed      	b.n	404234 <_malloc_r+0x270>
  404458:	687b      	ldr	r3, [r7, #4]
  40445a:	1092      	asrs	r2, r2, #2
  40445c:	2101      	movs	r1, #1
  40445e:	fa01 f202 	lsl.w	r2, r1, r2
  404462:	4313      	orrs	r3, r2
  404464:	607b      	str	r3, [r7, #4]
  404466:	4662      	mov	r2, ip
  404468:	e779      	b.n	40435e <_malloc_r+0x39a>
  40446a:	2301      	movs	r3, #1
  40446c:	6053      	str	r3, [r2, #4]
  40446e:	e729      	b.n	4042c4 <_malloc_r+0x300>
  404470:	f240 5254 	movw	r2, #1364	; 0x554
  404474:	4293      	cmp	r3, r2
  404476:	d822      	bhi.n	4044be <_malloc_r+0x4fa>
  404478:	0cb3      	lsrs	r3, r6, #18
  40447a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40447e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404482:	00c3      	lsls	r3, r0, #3
  404484:	e5c0      	b.n	404008 <_malloc_r+0x44>
  404486:	f103 0b10 	add.w	fp, r3, #16
  40448a:	e6ae      	b.n	4041ea <_malloc_r+0x226>
  40448c:	2a54      	cmp	r2, #84	; 0x54
  40448e:	d829      	bhi.n	4044e4 <_malloc_r+0x520>
  404490:	0b1a      	lsrs	r2, r3, #12
  404492:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404496:	00c9      	lsls	r1, r1, #3
  404498:	326e      	adds	r2, #110	; 0x6e
  40449a:	e74d      	b.n	404338 <_malloc_r+0x374>
  40449c:	4b20      	ldr	r3, [pc, #128]	; (404520 <_malloc_r+0x55c>)
  40449e:	6819      	ldr	r1, [r3, #0]
  4044a0:	4459      	add	r1, fp
  4044a2:	6019      	str	r1, [r3, #0]
  4044a4:	e6b2      	b.n	40420c <_malloc_r+0x248>
  4044a6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4044aa:	2800      	cmp	r0, #0
  4044ac:	f47f aeae 	bne.w	40420c <_malloc_r+0x248>
  4044b0:	eb08 030b 	add.w	r3, r8, fp
  4044b4:	68ba      	ldr	r2, [r7, #8]
  4044b6:	f043 0301 	orr.w	r3, r3, #1
  4044ba:	6053      	str	r3, [r2, #4]
  4044bc:	e6ee      	b.n	40429c <_malloc_r+0x2d8>
  4044be:	207f      	movs	r0, #127	; 0x7f
  4044c0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4044c4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4044c8:	e59e      	b.n	404008 <_malloc_r+0x44>
  4044ca:	f104 0108 	add.w	r1, r4, #8
  4044ce:	4628      	mov	r0, r5
  4044d0:	9300      	str	r3, [sp, #0]
  4044d2:	f000 fe03 	bl	4050dc <_free_r>
  4044d6:	9b00      	ldr	r3, [sp, #0]
  4044d8:	6819      	ldr	r1, [r3, #0]
  4044da:	e6df      	b.n	40429c <_malloc_r+0x2d8>
  4044dc:	2001      	movs	r0, #1
  4044de:	f04f 0900 	mov.w	r9, #0
  4044e2:	e6bc      	b.n	40425e <_malloc_r+0x29a>
  4044e4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4044e8:	d805      	bhi.n	4044f6 <_malloc_r+0x532>
  4044ea:	0bda      	lsrs	r2, r3, #15
  4044ec:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4044f0:	00c9      	lsls	r1, r1, #3
  4044f2:	3277      	adds	r2, #119	; 0x77
  4044f4:	e720      	b.n	404338 <_malloc_r+0x374>
  4044f6:	f240 5154 	movw	r1, #1364	; 0x554
  4044fa:	428a      	cmp	r2, r1
  4044fc:	d805      	bhi.n	40450a <_malloc_r+0x546>
  4044fe:	0c9a      	lsrs	r2, r3, #18
  404500:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404504:	00c9      	lsls	r1, r1, #3
  404506:	327c      	adds	r2, #124	; 0x7c
  404508:	e716      	b.n	404338 <_malloc_r+0x374>
  40450a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40450e:	227e      	movs	r2, #126	; 0x7e
  404510:	e712      	b.n	404338 <_malloc_r+0x374>
  404512:	687b      	ldr	r3, [r7, #4]
  404514:	e780      	b.n	404418 <_malloc_r+0x454>
  404516:	08f0      	lsrs	r0, r6, #3
  404518:	f106 0308 	add.w	r3, r6, #8
  40451c:	e600      	b.n	404120 <_malloc_r+0x15c>
  40451e:	bf00      	nop
  404520:	20400c84 	.word	0x20400c84
	...

00404530 <memchr>:
  404530:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404534:	2a10      	cmp	r2, #16
  404536:	db2b      	blt.n	404590 <memchr+0x60>
  404538:	f010 0f07 	tst.w	r0, #7
  40453c:	d008      	beq.n	404550 <memchr+0x20>
  40453e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404542:	3a01      	subs	r2, #1
  404544:	428b      	cmp	r3, r1
  404546:	d02d      	beq.n	4045a4 <memchr+0x74>
  404548:	f010 0f07 	tst.w	r0, #7
  40454c:	b342      	cbz	r2, 4045a0 <memchr+0x70>
  40454e:	d1f6      	bne.n	40453e <memchr+0xe>
  404550:	b4f0      	push	{r4, r5, r6, r7}
  404552:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404556:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40455a:	f022 0407 	bic.w	r4, r2, #7
  40455e:	f07f 0700 	mvns.w	r7, #0
  404562:	2300      	movs	r3, #0
  404564:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404568:	3c08      	subs	r4, #8
  40456a:	ea85 0501 	eor.w	r5, r5, r1
  40456e:	ea86 0601 	eor.w	r6, r6, r1
  404572:	fa85 f547 	uadd8	r5, r5, r7
  404576:	faa3 f587 	sel	r5, r3, r7
  40457a:	fa86 f647 	uadd8	r6, r6, r7
  40457e:	faa5 f687 	sel	r6, r5, r7
  404582:	b98e      	cbnz	r6, 4045a8 <memchr+0x78>
  404584:	d1ee      	bne.n	404564 <memchr+0x34>
  404586:	bcf0      	pop	{r4, r5, r6, r7}
  404588:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40458c:	f002 0207 	and.w	r2, r2, #7
  404590:	b132      	cbz	r2, 4045a0 <memchr+0x70>
  404592:	f810 3b01 	ldrb.w	r3, [r0], #1
  404596:	3a01      	subs	r2, #1
  404598:	ea83 0301 	eor.w	r3, r3, r1
  40459c:	b113      	cbz	r3, 4045a4 <memchr+0x74>
  40459e:	d1f8      	bne.n	404592 <memchr+0x62>
  4045a0:	2000      	movs	r0, #0
  4045a2:	4770      	bx	lr
  4045a4:	3801      	subs	r0, #1
  4045a6:	4770      	bx	lr
  4045a8:	2d00      	cmp	r5, #0
  4045aa:	bf06      	itte	eq
  4045ac:	4635      	moveq	r5, r6
  4045ae:	3803      	subeq	r0, #3
  4045b0:	3807      	subne	r0, #7
  4045b2:	f015 0f01 	tst.w	r5, #1
  4045b6:	d107      	bne.n	4045c8 <memchr+0x98>
  4045b8:	3001      	adds	r0, #1
  4045ba:	f415 7f80 	tst.w	r5, #256	; 0x100
  4045be:	bf02      	ittt	eq
  4045c0:	3001      	addeq	r0, #1
  4045c2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4045c6:	3001      	addeq	r0, #1
  4045c8:	bcf0      	pop	{r4, r5, r6, r7}
  4045ca:	3801      	subs	r0, #1
  4045cc:	4770      	bx	lr
  4045ce:	bf00      	nop

004045d0 <memcpy>:
  4045d0:	4684      	mov	ip, r0
  4045d2:	ea41 0300 	orr.w	r3, r1, r0
  4045d6:	f013 0303 	ands.w	r3, r3, #3
  4045da:	d16d      	bne.n	4046b8 <memcpy+0xe8>
  4045dc:	3a40      	subs	r2, #64	; 0x40
  4045de:	d341      	bcc.n	404664 <memcpy+0x94>
  4045e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045e4:	f840 3b04 	str.w	r3, [r0], #4
  4045e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4045ec:	f840 3b04 	str.w	r3, [r0], #4
  4045f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045f4:	f840 3b04 	str.w	r3, [r0], #4
  4045f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4045fc:	f840 3b04 	str.w	r3, [r0], #4
  404600:	f851 3b04 	ldr.w	r3, [r1], #4
  404604:	f840 3b04 	str.w	r3, [r0], #4
  404608:	f851 3b04 	ldr.w	r3, [r1], #4
  40460c:	f840 3b04 	str.w	r3, [r0], #4
  404610:	f851 3b04 	ldr.w	r3, [r1], #4
  404614:	f840 3b04 	str.w	r3, [r0], #4
  404618:	f851 3b04 	ldr.w	r3, [r1], #4
  40461c:	f840 3b04 	str.w	r3, [r0], #4
  404620:	f851 3b04 	ldr.w	r3, [r1], #4
  404624:	f840 3b04 	str.w	r3, [r0], #4
  404628:	f851 3b04 	ldr.w	r3, [r1], #4
  40462c:	f840 3b04 	str.w	r3, [r0], #4
  404630:	f851 3b04 	ldr.w	r3, [r1], #4
  404634:	f840 3b04 	str.w	r3, [r0], #4
  404638:	f851 3b04 	ldr.w	r3, [r1], #4
  40463c:	f840 3b04 	str.w	r3, [r0], #4
  404640:	f851 3b04 	ldr.w	r3, [r1], #4
  404644:	f840 3b04 	str.w	r3, [r0], #4
  404648:	f851 3b04 	ldr.w	r3, [r1], #4
  40464c:	f840 3b04 	str.w	r3, [r0], #4
  404650:	f851 3b04 	ldr.w	r3, [r1], #4
  404654:	f840 3b04 	str.w	r3, [r0], #4
  404658:	f851 3b04 	ldr.w	r3, [r1], #4
  40465c:	f840 3b04 	str.w	r3, [r0], #4
  404660:	3a40      	subs	r2, #64	; 0x40
  404662:	d2bd      	bcs.n	4045e0 <memcpy+0x10>
  404664:	3230      	adds	r2, #48	; 0x30
  404666:	d311      	bcc.n	40468c <memcpy+0xbc>
  404668:	f851 3b04 	ldr.w	r3, [r1], #4
  40466c:	f840 3b04 	str.w	r3, [r0], #4
  404670:	f851 3b04 	ldr.w	r3, [r1], #4
  404674:	f840 3b04 	str.w	r3, [r0], #4
  404678:	f851 3b04 	ldr.w	r3, [r1], #4
  40467c:	f840 3b04 	str.w	r3, [r0], #4
  404680:	f851 3b04 	ldr.w	r3, [r1], #4
  404684:	f840 3b04 	str.w	r3, [r0], #4
  404688:	3a10      	subs	r2, #16
  40468a:	d2ed      	bcs.n	404668 <memcpy+0x98>
  40468c:	320c      	adds	r2, #12
  40468e:	d305      	bcc.n	40469c <memcpy+0xcc>
  404690:	f851 3b04 	ldr.w	r3, [r1], #4
  404694:	f840 3b04 	str.w	r3, [r0], #4
  404698:	3a04      	subs	r2, #4
  40469a:	d2f9      	bcs.n	404690 <memcpy+0xc0>
  40469c:	3204      	adds	r2, #4
  40469e:	d008      	beq.n	4046b2 <memcpy+0xe2>
  4046a0:	07d2      	lsls	r2, r2, #31
  4046a2:	bf1c      	itt	ne
  4046a4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4046a8:	f800 3b01 	strbne.w	r3, [r0], #1
  4046ac:	d301      	bcc.n	4046b2 <memcpy+0xe2>
  4046ae:	880b      	ldrh	r3, [r1, #0]
  4046b0:	8003      	strh	r3, [r0, #0]
  4046b2:	4660      	mov	r0, ip
  4046b4:	4770      	bx	lr
  4046b6:	bf00      	nop
  4046b8:	2a08      	cmp	r2, #8
  4046ba:	d313      	bcc.n	4046e4 <memcpy+0x114>
  4046bc:	078b      	lsls	r3, r1, #30
  4046be:	d08d      	beq.n	4045dc <memcpy+0xc>
  4046c0:	f010 0303 	ands.w	r3, r0, #3
  4046c4:	d08a      	beq.n	4045dc <memcpy+0xc>
  4046c6:	f1c3 0304 	rsb	r3, r3, #4
  4046ca:	1ad2      	subs	r2, r2, r3
  4046cc:	07db      	lsls	r3, r3, #31
  4046ce:	bf1c      	itt	ne
  4046d0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4046d4:	f800 3b01 	strbne.w	r3, [r0], #1
  4046d8:	d380      	bcc.n	4045dc <memcpy+0xc>
  4046da:	f831 3b02 	ldrh.w	r3, [r1], #2
  4046de:	f820 3b02 	strh.w	r3, [r0], #2
  4046e2:	e77b      	b.n	4045dc <memcpy+0xc>
  4046e4:	3a04      	subs	r2, #4
  4046e6:	d3d9      	bcc.n	40469c <memcpy+0xcc>
  4046e8:	3a01      	subs	r2, #1
  4046ea:	f811 3b01 	ldrb.w	r3, [r1], #1
  4046ee:	f800 3b01 	strb.w	r3, [r0], #1
  4046f2:	d2f9      	bcs.n	4046e8 <memcpy+0x118>
  4046f4:	780b      	ldrb	r3, [r1, #0]
  4046f6:	7003      	strb	r3, [r0, #0]
  4046f8:	784b      	ldrb	r3, [r1, #1]
  4046fa:	7043      	strb	r3, [r0, #1]
  4046fc:	788b      	ldrb	r3, [r1, #2]
  4046fe:	7083      	strb	r3, [r0, #2]
  404700:	4660      	mov	r0, ip
  404702:	4770      	bx	lr

00404704 <__malloc_lock>:
  404704:	4801      	ldr	r0, [pc, #4]	; (40470c <__malloc_lock+0x8>)
  404706:	f7ff bc59 	b.w	403fbc <__retarget_lock_acquire_recursive>
  40470a:	bf00      	nop
  40470c:	20400cc8 	.word	0x20400cc8

00404710 <__malloc_unlock>:
  404710:	4801      	ldr	r0, [pc, #4]	; (404718 <__malloc_unlock+0x8>)
  404712:	f7ff bc55 	b.w	403fc0 <__retarget_lock_release_recursive>
  404716:	bf00      	nop
  404718:	20400cc8 	.word	0x20400cc8

0040471c <_Balloc>:
  40471c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40471e:	b570      	push	{r4, r5, r6, lr}
  404720:	4605      	mov	r5, r0
  404722:	460c      	mov	r4, r1
  404724:	b14b      	cbz	r3, 40473a <_Balloc+0x1e>
  404726:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40472a:	b180      	cbz	r0, 40474e <_Balloc+0x32>
  40472c:	6802      	ldr	r2, [r0, #0]
  40472e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404732:	2300      	movs	r3, #0
  404734:	6103      	str	r3, [r0, #16]
  404736:	60c3      	str	r3, [r0, #12]
  404738:	bd70      	pop	{r4, r5, r6, pc}
  40473a:	2221      	movs	r2, #33	; 0x21
  40473c:	2104      	movs	r1, #4
  40473e:	f000 fc4d 	bl	404fdc <_calloc_r>
  404742:	64e8      	str	r0, [r5, #76]	; 0x4c
  404744:	4603      	mov	r3, r0
  404746:	2800      	cmp	r0, #0
  404748:	d1ed      	bne.n	404726 <_Balloc+0xa>
  40474a:	2000      	movs	r0, #0
  40474c:	bd70      	pop	{r4, r5, r6, pc}
  40474e:	2101      	movs	r1, #1
  404750:	fa01 f604 	lsl.w	r6, r1, r4
  404754:	1d72      	adds	r2, r6, #5
  404756:	4628      	mov	r0, r5
  404758:	0092      	lsls	r2, r2, #2
  40475a:	f000 fc3f 	bl	404fdc <_calloc_r>
  40475e:	2800      	cmp	r0, #0
  404760:	d0f3      	beq.n	40474a <_Balloc+0x2e>
  404762:	6044      	str	r4, [r0, #4]
  404764:	6086      	str	r6, [r0, #8]
  404766:	e7e4      	b.n	404732 <_Balloc+0x16>

00404768 <_Bfree>:
  404768:	b131      	cbz	r1, 404778 <_Bfree+0x10>
  40476a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40476c:	684a      	ldr	r2, [r1, #4]
  40476e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404772:	6008      	str	r0, [r1, #0]
  404774:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404778:	4770      	bx	lr
  40477a:	bf00      	nop

0040477c <__multadd>:
  40477c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40477e:	690c      	ldr	r4, [r1, #16]
  404780:	b083      	sub	sp, #12
  404782:	460d      	mov	r5, r1
  404784:	4606      	mov	r6, r0
  404786:	f101 0e14 	add.w	lr, r1, #20
  40478a:	2700      	movs	r7, #0
  40478c:	f8de 0000 	ldr.w	r0, [lr]
  404790:	b281      	uxth	r1, r0
  404792:	fb02 3301 	mla	r3, r2, r1, r3
  404796:	0c01      	lsrs	r1, r0, #16
  404798:	0c18      	lsrs	r0, r3, #16
  40479a:	fb02 0101 	mla	r1, r2, r1, r0
  40479e:	b29b      	uxth	r3, r3
  4047a0:	3701      	adds	r7, #1
  4047a2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4047a6:	42bc      	cmp	r4, r7
  4047a8:	f84e 3b04 	str.w	r3, [lr], #4
  4047ac:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4047b0:	dcec      	bgt.n	40478c <__multadd+0x10>
  4047b2:	b13b      	cbz	r3, 4047c4 <__multadd+0x48>
  4047b4:	68aa      	ldr	r2, [r5, #8]
  4047b6:	4294      	cmp	r4, r2
  4047b8:	da07      	bge.n	4047ca <__multadd+0x4e>
  4047ba:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4047be:	3401      	adds	r4, #1
  4047c0:	6153      	str	r3, [r2, #20]
  4047c2:	612c      	str	r4, [r5, #16]
  4047c4:	4628      	mov	r0, r5
  4047c6:	b003      	add	sp, #12
  4047c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4047ca:	6869      	ldr	r1, [r5, #4]
  4047cc:	9301      	str	r3, [sp, #4]
  4047ce:	3101      	adds	r1, #1
  4047d0:	4630      	mov	r0, r6
  4047d2:	f7ff ffa3 	bl	40471c <_Balloc>
  4047d6:	692a      	ldr	r2, [r5, #16]
  4047d8:	3202      	adds	r2, #2
  4047da:	f105 010c 	add.w	r1, r5, #12
  4047de:	4607      	mov	r7, r0
  4047e0:	0092      	lsls	r2, r2, #2
  4047e2:	300c      	adds	r0, #12
  4047e4:	f7ff fef4 	bl	4045d0 <memcpy>
  4047e8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  4047ea:	6869      	ldr	r1, [r5, #4]
  4047ec:	9b01      	ldr	r3, [sp, #4]
  4047ee:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  4047f2:	6028      	str	r0, [r5, #0]
  4047f4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  4047f8:	463d      	mov	r5, r7
  4047fa:	e7de      	b.n	4047ba <__multadd+0x3e>

004047fc <__hi0bits>:
  4047fc:	0c02      	lsrs	r2, r0, #16
  4047fe:	0412      	lsls	r2, r2, #16
  404800:	4603      	mov	r3, r0
  404802:	b9b2      	cbnz	r2, 404832 <__hi0bits+0x36>
  404804:	0403      	lsls	r3, r0, #16
  404806:	2010      	movs	r0, #16
  404808:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40480c:	bf04      	itt	eq
  40480e:	021b      	lsleq	r3, r3, #8
  404810:	3008      	addeq	r0, #8
  404812:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404816:	bf04      	itt	eq
  404818:	011b      	lsleq	r3, r3, #4
  40481a:	3004      	addeq	r0, #4
  40481c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404820:	bf04      	itt	eq
  404822:	009b      	lsleq	r3, r3, #2
  404824:	3002      	addeq	r0, #2
  404826:	2b00      	cmp	r3, #0
  404828:	db02      	blt.n	404830 <__hi0bits+0x34>
  40482a:	005b      	lsls	r3, r3, #1
  40482c:	d403      	bmi.n	404836 <__hi0bits+0x3a>
  40482e:	2020      	movs	r0, #32
  404830:	4770      	bx	lr
  404832:	2000      	movs	r0, #0
  404834:	e7e8      	b.n	404808 <__hi0bits+0xc>
  404836:	3001      	adds	r0, #1
  404838:	4770      	bx	lr
  40483a:	bf00      	nop

0040483c <__lo0bits>:
  40483c:	6803      	ldr	r3, [r0, #0]
  40483e:	f013 0207 	ands.w	r2, r3, #7
  404842:	4601      	mov	r1, r0
  404844:	d007      	beq.n	404856 <__lo0bits+0x1a>
  404846:	07da      	lsls	r2, r3, #31
  404848:	d421      	bmi.n	40488e <__lo0bits+0x52>
  40484a:	0798      	lsls	r0, r3, #30
  40484c:	d421      	bmi.n	404892 <__lo0bits+0x56>
  40484e:	089b      	lsrs	r3, r3, #2
  404850:	600b      	str	r3, [r1, #0]
  404852:	2002      	movs	r0, #2
  404854:	4770      	bx	lr
  404856:	b298      	uxth	r0, r3
  404858:	b198      	cbz	r0, 404882 <__lo0bits+0x46>
  40485a:	4610      	mov	r0, r2
  40485c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404860:	bf04      	itt	eq
  404862:	0a1b      	lsreq	r3, r3, #8
  404864:	3008      	addeq	r0, #8
  404866:	071a      	lsls	r2, r3, #28
  404868:	bf04      	itt	eq
  40486a:	091b      	lsreq	r3, r3, #4
  40486c:	3004      	addeq	r0, #4
  40486e:	079a      	lsls	r2, r3, #30
  404870:	bf04      	itt	eq
  404872:	089b      	lsreq	r3, r3, #2
  404874:	3002      	addeq	r0, #2
  404876:	07da      	lsls	r2, r3, #31
  404878:	d407      	bmi.n	40488a <__lo0bits+0x4e>
  40487a:	085b      	lsrs	r3, r3, #1
  40487c:	d104      	bne.n	404888 <__lo0bits+0x4c>
  40487e:	2020      	movs	r0, #32
  404880:	4770      	bx	lr
  404882:	0c1b      	lsrs	r3, r3, #16
  404884:	2010      	movs	r0, #16
  404886:	e7e9      	b.n	40485c <__lo0bits+0x20>
  404888:	3001      	adds	r0, #1
  40488a:	600b      	str	r3, [r1, #0]
  40488c:	4770      	bx	lr
  40488e:	2000      	movs	r0, #0
  404890:	4770      	bx	lr
  404892:	085b      	lsrs	r3, r3, #1
  404894:	600b      	str	r3, [r1, #0]
  404896:	2001      	movs	r0, #1
  404898:	4770      	bx	lr
  40489a:	bf00      	nop

0040489c <__i2b>:
  40489c:	b510      	push	{r4, lr}
  40489e:	460c      	mov	r4, r1
  4048a0:	2101      	movs	r1, #1
  4048a2:	f7ff ff3b 	bl	40471c <_Balloc>
  4048a6:	2201      	movs	r2, #1
  4048a8:	6144      	str	r4, [r0, #20]
  4048aa:	6102      	str	r2, [r0, #16]
  4048ac:	bd10      	pop	{r4, pc}
  4048ae:	bf00      	nop

004048b0 <__multiply>:
  4048b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4048b4:	690c      	ldr	r4, [r1, #16]
  4048b6:	6915      	ldr	r5, [r2, #16]
  4048b8:	42ac      	cmp	r4, r5
  4048ba:	b083      	sub	sp, #12
  4048bc:	468b      	mov	fp, r1
  4048be:	4616      	mov	r6, r2
  4048c0:	da04      	bge.n	4048cc <__multiply+0x1c>
  4048c2:	4622      	mov	r2, r4
  4048c4:	46b3      	mov	fp, r6
  4048c6:	462c      	mov	r4, r5
  4048c8:	460e      	mov	r6, r1
  4048ca:	4615      	mov	r5, r2
  4048cc:	f8db 3008 	ldr.w	r3, [fp, #8]
  4048d0:	f8db 1004 	ldr.w	r1, [fp, #4]
  4048d4:	eb04 0805 	add.w	r8, r4, r5
  4048d8:	4598      	cmp	r8, r3
  4048da:	bfc8      	it	gt
  4048dc:	3101      	addgt	r1, #1
  4048de:	f7ff ff1d 	bl	40471c <_Balloc>
  4048e2:	f100 0914 	add.w	r9, r0, #20
  4048e6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  4048ea:	45d1      	cmp	r9, sl
  4048ec:	9000      	str	r0, [sp, #0]
  4048ee:	d205      	bcs.n	4048fc <__multiply+0x4c>
  4048f0:	464b      	mov	r3, r9
  4048f2:	2100      	movs	r1, #0
  4048f4:	f843 1b04 	str.w	r1, [r3], #4
  4048f8:	459a      	cmp	sl, r3
  4048fa:	d8fb      	bhi.n	4048f4 <__multiply+0x44>
  4048fc:	f106 0c14 	add.w	ip, r6, #20
  404900:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404904:	f10b 0b14 	add.w	fp, fp, #20
  404908:	459c      	cmp	ip, r3
  40490a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40490e:	d24c      	bcs.n	4049aa <__multiply+0xfa>
  404910:	f8cd a004 	str.w	sl, [sp, #4]
  404914:	469a      	mov	sl, r3
  404916:	f8dc 5000 	ldr.w	r5, [ip]
  40491a:	b2af      	uxth	r7, r5
  40491c:	b1ef      	cbz	r7, 40495a <__multiply+0xaa>
  40491e:	2100      	movs	r1, #0
  404920:	464d      	mov	r5, r9
  404922:	465e      	mov	r6, fp
  404924:	460c      	mov	r4, r1
  404926:	f856 2b04 	ldr.w	r2, [r6], #4
  40492a:	6828      	ldr	r0, [r5, #0]
  40492c:	b293      	uxth	r3, r2
  40492e:	b281      	uxth	r1, r0
  404930:	fb07 1303 	mla	r3, r7, r3, r1
  404934:	0c12      	lsrs	r2, r2, #16
  404936:	0c01      	lsrs	r1, r0, #16
  404938:	4423      	add	r3, r4
  40493a:	fb07 1102 	mla	r1, r7, r2, r1
  40493e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404942:	b29b      	uxth	r3, r3
  404944:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404948:	45b6      	cmp	lr, r6
  40494a:	f845 3b04 	str.w	r3, [r5], #4
  40494e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404952:	d8e8      	bhi.n	404926 <__multiply+0x76>
  404954:	602c      	str	r4, [r5, #0]
  404956:	f8dc 5000 	ldr.w	r5, [ip]
  40495a:	0c2d      	lsrs	r5, r5, #16
  40495c:	d01d      	beq.n	40499a <__multiply+0xea>
  40495e:	f8d9 3000 	ldr.w	r3, [r9]
  404962:	4648      	mov	r0, r9
  404964:	461c      	mov	r4, r3
  404966:	4659      	mov	r1, fp
  404968:	2200      	movs	r2, #0
  40496a:	880e      	ldrh	r6, [r1, #0]
  40496c:	0c24      	lsrs	r4, r4, #16
  40496e:	fb05 4406 	mla	r4, r5, r6, r4
  404972:	4422      	add	r2, r4
  404974:	b29b      	uxth	r3, r3
  404976:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40497a:	f840 3b04 	str.w	r3, [r0], #4
  40497e:	f851 3b04 	ldr.w	r3, [r1], #4
  404982:	6804      	ldr	r4, [r0, #0]
  404984:	0c1b      	lsrs	r3, r3, #16
  404986:	b2a6      	uxth	r6, r4
  404988:	fb05 6303 	mla	r3, r5, r3, r6
  40498c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404990:	458e      	cmp	lr, r1
  404992:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404996:	d8e8      	bhi.n	40496a <__multiply+0xba>
  404998:	6003      	str	r3, [r0, #0]
  40499a:	f10c 0c04 	add.w	ip, ip, #4
  40499e:	45e2      	cmp	sl, ip
  4049a0:	f109 0904 	add.w	r9, r9, #4
  4049a4:	d8b7      	bhi.n	404916 <__multiply+0x66>
  4049a6:	f8dd a004 	ldr.w	sl, [sp, #4]
  4049aa:	f1b8 0f00 	cmp.w	r8, #0
  4049ae:	dd0b      	ble.n	4049c8 <__multiply+0x118>
  4049b0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4049b4:	f1aa 0a04 	sub.w	sl, sl, #4
  4049b8:	b11b      	cbz	r3, 4049c2 <__multiply+0x112>
  4049ba:	e005      	b.n	4049c8 <__multiply+0x118>
  4049bc:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4049c0:	b913      	cbnz	r3, 4049c8 <__multiply+0x118>
  4049c2:	f1b8 0801 	subs.w	r8, r8, #1
  4049c6:	d1f9      	bne.n	4049bc <__multiply+0x10c>
  4049c8:	9800      	ldr	r0, [sp, #0]
  4049ca:	f8c0 8010 	str.w	r8, [r0, #16]
  4049ce:	b003      	add	sp, #12
  4049d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004049d4 <__pow5mult>:
  4049d4:	f012 0303 	ands.w	r3, r2, #3
  4049d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4049dc:	4614      	mov	r4, r2
  4049de:	4607      	mov	r7, r0
  4049e0:	d12e      	bne.n	404a40 <__pow5mult+0x6c>
  4049e2:	460d      	mov	r5, r1
  4049e4:	10a4      	asrs	r4, r4, #2
  4049e6:	d01c      	beq.n	404a22 <__pow5mult+0x4e>
  4049e8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  4049ea:	b396      	cbz	r6, 404a52 <__pow5mult+0x7e>
  4049ec:	07e3      	lsls	r3, r4, #31
  4049ee:	f04f 0800 	mov.w	r8, #0
  4049f2:	d406      	bmi.n	404a02 <__pow5mult+0x2e>
  4049f4:	1064      	asrs	r4, r4, #1
  4049f6:	d014      	beq.n	404a22 <__pow5mult+0x4e>
  4049f8:	6830      	ldr	r0, [r6, #0]
  4049fa:	b1a8      	cbz	r0, 404a28 <__pow5mult+0x54>
  4049fc:	4606      	mov	r6, r0
  4049fe:	07e3      	lsls	r3, r4, #31
  404a00:	d5f8      	bpl.n	4049f4 <__pow5mult+0x20>
  404a02:	4632      	mov	r2, r6
  404a04:	4629      	mov	r1, r5
  404a06:	4638      	mov	r0, r7
  404a08:	f7ff ff52 	bl	4048b0 <__multiply>
  404a0c:	b1b5      	cbz	r5, 404a3c <__pow5mult+0x68>
  404a0e:	686a      	ldr	r2, [r5, #4]
  404a10:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404a12:	1064      	asrs	r4, r4, #1
  404a14:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404a18:	6029      	str	r1, [r5, #0]
  404a1a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404a1e:	4605      	mov	r5, r0
  404a20:	d1ea      	bne.n	4049f8 <__pow5mult+0x24>
  404a22:	4628      	mov	r0, r5
  404a24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404a28:	4632      	mov	r2, r6
  404a2a:	4631      	mov	r1, r6
  404a2c:	4638      	mov	r0, r7
  404a2e:	f7ff ff3f 	bl	4048b0 <__multiply>
  404a32:	6030      	str	r0, [r6, #0]
  404a34:	f8c0 8000 	str.w	r8, [r0]
  404a38:	4606      	mov	r6, r0
  404a3a:	e7e0      	b.n	4049fe <__pow5mult+0x2a>
  404a3c:	4605      	mov	r5, r0
  404a3e:	e7d9      	b.n	4049f4 <__pow5mult+0x20>
  404a40:	1e5a      	subs	r2, r3, #1
  404a42:	4d0b      	ldr	r5, [pc, #44]	; (404a70 <__pow5mult+0x9c>)
  404a44:	2300      	movs	r3, #0
  404a46:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404a4a:	f7ff fe97 	bl	40477c <__multadd>
  404a4e:	4605      	mov	r5, r0
  404a50:	e7c8      	b.n	4049e4 <__pow5mult+0x10>
  404a52:	2101      	movs	r1, #1
  404a54:	4638      	mov	r0, r7
  404a56:	f7ff fe61 	bl	40471c <_Balloc>
  404a5a:	f240 2171 	movw	r1, #625	; 0x271
  404a5e:	2201      	movs	r2, #1
  404a60:	2300      	movs	r3, #0
  404a62:	6141      	str	r1, [r0, #20]
  404a64:	6102      	str	r2, [r0, #16]
  404a66:	4606      	mov	r6, r0
  404a68:	64b8      	str	r0, [r7, #72]	; 0x48
  404a6a:	6003      	str	r3, [r0, #0]
  404a6c:	e7be      	b.n	4049ec <__pow5mult+0x18>
  404a6e:	bf00      	nop
  404a70:	00407560 	.word	0x00407560

00404a74 <__lshift>:
  404a74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404a78:	4691      	mov	r9, r2
  404a7a:	690a      	ldr	r2, [r1, #16]
  404a7c:	688b      	ldr	r3, [r1, #8]
  404a7e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404a82:	eb04 0802 	add.w	r8, r4, r2
  404a86:	f108 0501 	add.w	r5, r8, #1
  404a8a:	429d      	cmp	r5, r3
  404a8c:	460e      	mov	r6, r1
  404a8e:	4607      	mov	r7, r0
  404a90:	6849      	ldr	r1, [r1, #4]
  404a92:	dd04      	ble.n	404a9e <__lshift+0x2a>
  404a94:	005b      	lsls	r3, r3, #1
  404a96:	429d      	cmp	r5, r3
  404a98:	f101 0101 	add.w	r1, r1, #1
  404a9c:	dcfa      	bgt.n	404a94 <__lshift+0x20>
  404a9e:	4638      	mov	r0, r7
  404aa0:	f7ff fe3c 	bl	40471c <_Balloc>
  404aa4:	2c00      	cmp	r4, #0
  404aa6:	f100 0314 	add.w	r3, r0, #20
  404aaa:	dd06      	ble.n	404aba <__lshift+0x46>
  404aac:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404ab0:	2100      	movs	r1, #0
  404ab2:	f843 1b04 	str.w	r1, [r3], #4
  404ab6:	429a      	cmp	r2, r3
  404ab8:	d1fb      	bne.n	404ab2 <__lshift+0x3e>
  404aba:	6934      	ldr	r4, [r6, #16]
  404abc:	f106 0114 	add.w	r1, r6, #20
  404ac0:	f019 091f 	ands.w	r9, r9, #31
  404ac4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404ac8:	d01d      	beq.n	404b06 <__lshift+0x92>
  404aca:	f1c9 0c20 	rsb	ip, r9, #32
  404ace:	2200      	movs	r2, #0
  404ad0:	680c      	ldr	r4, [r1, #0]
  404ad2:	fa04 f409 	lsl.w	r4, r4, r9
  404ad6:	4314      	orrs	r4, r2
  404ad8:	f843 4b04 	str.w	r4, [r3], #4
  404adc:	f851 2b04 	ldr.w	r2, [r1], #4
  404ae0:	458e      	cmp	lr, r1
  404ae2:	fa22 f20c 	lsr.w	r2, r2, ip
  404ae6:	d8f3      	bhi.n	404ad0 <__lshift+0x5c>
  404ae8:	601a      	str	r2, [r3, #0]
  404aea:	b10a      	cbz	r2, 404af0 <__lshift+0x7c>
  404aec:	f108 0502 	add.w	r5, r8, #2
  404af0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404af2:	6872      	ldr	r2, [r6, #4]
  404af4:	3d01      	subs	r5, #1
  404af6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404afa:	6105      	str	r5, [r0, #16]
  404afc:	6031      	str	r1, [r6, #0]
  404afe:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404b02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404b06:	3b04      	subs	r3, #4
  404b08:	f851 2b04 	ldr.w	r2, [r1], #4
  404b0c:	f843 2f04 	str.w	r2, [r3, #4]!
  404b10:	458e      	cmp	lr, r1
  404b12:	d8f9      	bhi.n	404b08 <__lshift+0x94>
  404b14:	e7ec      	b.n	404af0 <__lshift+0x7c>
  404b16:	bf00      	nop

00404b18 <__mcmp>:
  404b18:	b430      	push	{r4, r5}
  404b1a:	690b      	ldr	r3, [r1, #16]
  404b1c:	4605      	mov	r5, r0
  404b1e:	6900      	ldr	r0, [r0, #16]
  404b20:	1ac0      	subs	r0, r0, r3
  404b22:	d10f      	bne.n	404b44 <__mcmp+0x2c>
  404b24:	009b      	lsls	r3, r3, #2
  404b26:	3514      	adds	r5, #20
  404b28:	3114      	adds	r1, #20
  404b2a:	4419      	add	r1, r3
  404b2c:	442b      	add	r3, r5
  404b2e:	e001      	b.n	404b34 <__mcmp+0x1c>
  404b30:	429d      	cmp	r5, r3
  404b32:	d207      	bcs.n	404b44 <__mcmp+0x2c>
  404b34:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404b38:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404b3c:	4294      	cmp	r4, r2
  404b3e:	d0f7      	beq.n	404b30 <__mcmp+0x18>
  404b40:	d302      	bcc.n	404b48 <__mcmp+0x30>
  404b42:	2001      	movs	r0, #1
  404b44:	bc30      	pop	{r4, r5}
  404b46:	4770      	bx	lr
  404b48:	f04f 30ff 	mov.w	r0, #4294967295
  404b4c:	e7fa      	b.n	404b44 <__mcmp+0x2c>
  404b4e:	bf00      	nop

00404b50 <__mdiff>:
  404b50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404b54:	690f      	ldr	r7, [r1, #16]
  404b56:	460e      	mov	r6, r1
  404b58:	6911      	ldr	r1, [r2, #16]
  404b5a:	1a7f      	subs	r7, r7, r1
  404b5c:	2f00      	cmp	r7, #0
  404b5e:	4690      	mov	r8, r2
  404b60:	d117      	bne.n	404b92 <__mdiff+0x42>
  404b62:	0089      	lsls	r1, r1, #2
  404b64:	f106 0514 	add.w	r5, r6, #20
  404b68:	f102 0e14 	add.w	lr, r2, #20
  404b6c:	186b      	adds	r3, r5, r1
  404b6e:	4471      	add	r1, lr
  404b70:	e001      	b.n	404b76 <__mdiff+0x26>
  404b72:	429d      	cmp	r5, r3
  404b74:	d25c      	bcs.n	404c30 <__mdiff+0xe0>
  404b76:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404b7a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404b7e:	42a2      	cmp	r2, r4
  404b80:	d0f7      	beq.n	404b72 <__mdiff+0x22>
  404b82:	d25e      	bcs.n	404c42 <__mdiff+0xf2>
  404b84:	4633      	mov	r3, r6
  404b86:	462c      	mov	r4, r5
  404b88:	4646      	mov	r6, r8
  404b8a:	4675      	mov	r5, lr
  404b8c:	4698      	mov	r8, r3
  404b8e:	2701      	movs	r7, #1
  404b90:	e005      	b.n	404b9e <__mdiff+0x4e>
  404b92:	db58      	blt.n	404c46 <__mdiff+0xf6>
  404b94:	f106 0514 	add.w	r5, r6, #20
  404b98:	f108 0414 	add.w	r4, r8, #20
  404b9c:	2700      	movs	r7, #0
  404b9e:	6871      	ldr	r1, [r6, #4]
  404ba0:	f7ff fdbc 	bl	40471c <_Balloc>
  404ba4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404ba8:	6936      	ldr	r6, [r6, #16]
  404baa:	60c7      	str	r7, [r0, #12]
  404bac:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404bb0:	46a6      	mov	lr, r4
  404bb2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404bb6:	f100 0414 	add.w	r4, r0, #20
  404bba:	2300      	movs	r3, #0
  404bbc:	f85e 1b04 	ldr.w	r1, [lr], #4
  404bc0:	f855 8b04 	ldr.w	r8, [r5], #4
  404bc4:	b28a      	uxth	r2, r1
  404bc6:	fa13 f388 	uxtah	r3, r3, r8
  404bca:	0c09      	lsrs	r1, r1, #16
  404bcc:	1a9a      	subs	r2, r3, r2
  404bce:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404bd2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404bd6:	b292      	uxth	r2, r2
  404bd8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404bdc:	45f4      	cmp	ip, lr
  404bde:	f844 2b04 	str.w	r2, [r4], #4
  404be2:	ea4f 4323 	mov.w	r3, r3, asr #16
  404be6:	d8e9      	bhi.n	404bbc <__mdiff+0x6c>
  404be8:	42af      	cmp	r7, r5
  404bea:	d917      	bls.n	404c1c <__mdiff+0xcc>
  404bec:	46a4      	mov	ip, r4
  404bee:	46ae      	mov	lr, r5
  404bf0:	f85e 2b04 	ldr.w	r2, [lr], #4
  404bf4:	fa13 f382 	uxtah	r3, r3, r2
  404bf8:	1419      	asrs	r1, r3, #16
  404bfa:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404bfe:	b29b      	uxth	r3, r3
  404c00:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404c04:	4577      	cmp	r7, lr
  404c06:	f84c 2b04 	str.w	r2, [ip], #4
  404c0a:	ea4f 4321 	mov.w	r3, r1, asr #16
  404c0e:	d8ef      	bhi.n	404bf0 <__mdiff+0xa0>
  404c10:	43ed      	mvns	r5, r5
  404c12:	442f      	add	r7, r5
  404c14:	f027 0703 	bic.w	r7, r7, #3
  404c18:	3704      	adds	r7, #4
  404c1a:	443c      	add	r4, r7
  404c1c:	3c04      	subs	r4, #4
  404c1e:	b922      	cbnz	r2, 404c2a <__mdiff+0xda>
  404c20:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404c24:	3e01      	subs	r6, #1
  404c26:	2b00      	cmp	r3, #0
  404c28:	d0fa      	beq.n	404c20 <__mdiff+0xd0>
  404c2a:	6106      	str	r6, [r0, #16]
  404c2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404c30:	2100      	movs	r1, #0
  404c32:	f7ff fd73 	bl	40471c <_Balloc>
  404c36:	2201      	movs	r2, #1
  404c38:	2300      	movs	r3, #0
  404c3a:	6102      	str	r2, [r0, #16]
  404c3c:	6143      	str	r3, [r0, #20]
  404c3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404c42:	4674      	mov	r4, lr
  404c44:	e7ab      	b.n	404b9e <__mdiff+0x4e>
  404c46:	4633      	mov	r3, r6
  404c48:	f106 0414 	add.w	r4, r6, #20
  404c4c:	f102 0514 	add.w	r5, r2, #20
  404c50:	4616      	mov	r6, r2
  404c52:	2701      	movs	r7, #1
  404c54:	4698      	mov	r8, r3
  404c56:	e7a2      	b.n	404b9e <__mdiff+0x4e>

00404c58 <__d2b>:
  404c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404c5c:	b082      	sub	sp, #8
  404c5e:	2101      	movs	r1, #1
  404c60:	461c      	mov	r4, r3
  404c62:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404c66:	4615      	mov	r5, r2
  404c68:	9e08      	ldr	r6, [sp, #32]
  404c6a:	f7ff fd57 	bl	40471c <_Balloc>
  404c6e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404c72:	4680      	mov	r8, r0
  404c74:	b10f      	cbz	r7, 404c7a <__d2b+0x22>
  404c76:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404c7a:	9401      	str	r4, [sp, #4]
  404c7c:	b31d      	cbz	r5, 404cc6 <__d2b+0x6e>
  404c7e:	a802      	add	r0, sp, #8
  404c80:	f840 5d08 	str.w	r5, [r0, #-8]!
  404c84:	f7ff fdda 	bl	40483c <__lo0bits>
  404c88:	2800      	cmp	r0, #0
  404c8a:	d134      	bne.n	404cf6 <__d2b+0x9e>
  404c8c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404c90:	f8c8 2014 	str.w	r2, [r8, #20]
  404c94:	2b00      	cmp	r3, #0
  404c96:	bf0c      	ite	eq
  404c98:	2101      	moveq	r1, #1
  404c9a:	2102      	movne	r1, #2
  404c9c:	f8c8 3018 	str.w	r3, [r8, #24]
  404ca0:	f8c8 1010 	str.w	r1, [r8, #16]
  404ca4:	b9df      	cbnz	r7, 404cde <__d2b+0x86>
  404ca6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404caa:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404cae:	6030      	str	r0, [r6, #0]
  404cb0:	6918      	ldr	r0, [r3, #16]
  404cb2:	f7ff fda3 	bl	4047fc <__hi0bits>
  404cb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404cb8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404cbc:	6018      	str	r0, [r3, #0]
  404cbe:	4640      	mov	r0, r8
  404cc0:	b002      	add	sp, #8
  404cc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404cc6:	a801      	add	r0, sp, #4
  404cc8:	f7ff fdb8 	bl	40483c <__lo0bits>
  404ccc:	9b01      	ldr	r3, [sp, #4]
  404cce:	f8c8 3014 	str.w	r3, [r8, #20]
  404cd2:	2101      	movs	r1, #1
  404cd4:	3020      	adds	r0, #32
  404cd6:	f8c8 1010 	str.w	r1, [r8, #16]
  404cda:	2f00      	cmp	r7, #0
  404cdc:	d0e3      	beq.n	404ca6 <__d2b+0x4e>
  404cde:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404ce0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404ce4:	4407      	add	r7, r0
  404ce6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404cea:	6037      	str	r7, [r6, #0]
  404cec:	6018      	str	r0, [r3, #0]
  404cee:	4640      	mov	r0, r8
  404cf0:	b002      	add	sp, #8
  404cf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404cf6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404cfa:	f1c0 0220 	rsb	r2, r0, #32
  404cfe:	fa03 f202 	lsl.w	r2, r3, r2
  404d02:	430a      	orrs	r2, r1
  404d04:	40c3      	lsrs	r3, r0
  404d06:	9301      	str	r3, [sp, #4]
  404d08:	f8c8 2014 	str.w	r2, [r8, #20]
  404d0c:	e7c2      	b.n	404c94 <__d2b+0x3c>
  404d0e:	bf00      	nop

00404d10 <_sbrk_r>:
  404d10:	b538      	push	{r3, r4, r5, lr}
  404d12:	4c07      	ldr	r4, [pc, #28]	; (404d30 <_sbrk_r+0x20>)
  404d14:	2300      	movs	r3, #0
  404d16:	4605      	mov	r5, r0
  404d18:	4608      	mov	r0, r1
  404d1a:	6023      	str	r3, [r4, #0]
  404d1c:	f7fc fb8e 	bl	40143c <_sbrk>
  404d20:	1c43      	adds	r3, r0, #1
  404d22:	d000      	beq.n	404d26 <_sbrk_r+0x16>
  404d24:	bd38      	pop	{r3, r4, r5, pc}
  404d26:	6823      	ldr	r3, [r4, #0]
  404d28:	2b00      	cmp	r3, #0
  404d2a:	d0fb      	beq.n	404d24 <_sbrk_r+0x14>
  404d2c:	602b      	str	r3, [r5, #0]
  404d2e:	bd38      	pop	{r3, r4, r5, pc}
  404d30:	20400cdc 	.word	0x20400cdc
	...

00404d40 <strlen>:
  404d40:	f890 f000 	pld	[r0]
  404d44:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404d48:	f020 0107 	bic.w	r1, r0, #7
  404d4c:	f06f 0c00 	mvn.w	ip, #0
  404d50:	f010 0407 	ands.w	r4, r0, #7
  404d54:	f891 f020 	pld	[r1, #32]
  404d58:	f040 8049 	bne.w	404dee <strlen+0xae>
  404d5c:	f04f 0400 	mov.w	r4, #0
  404d60:	f06f 0007 	mvn.w	r0, #7
  404d64:	e9d1 2300 	ldrd	r2, r3, [r1]
  404d68:	f891 f040 	pld	[r1, #64]	; 0x40
  404d6c:	f100 0008 	add.w	r0, r0, #8
  404d70:	fa82 f24c 	uadd8	r2, r2, ip
  404d74:	faa4 f28c 	sel	r2, r4, ip
  404d78:	fa83 f34c 	uadd8	r3, r3, ip
  404d7c:	faa2 f38c 	sel	r3, r2, ip
  404d80:	bb4b      	cbnz	r3, 404dd6 <strlen+0x96>
  404d82:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404d86:	fa82 f24c 	uadd8	r2, r2, ip
  404d8a:	f100 0008 	add.w	r0, r0, #8
  404d8e:	faa4 f28c 	sel	r2, r4, ip
  404d92:	fa83 f34c 	uadd8	r3, r3, ip
  404d96:	faa2 f38c 	sel	r3, r2, ip
  404d9a:	b9e3      	cbnz	r3, 404dd6 <strlen+0x96>
  404d9c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404da0:	fa82 f24c 	uadd8	r2, r2, ip
  404da4:	f100 0008 	add.w	r0, r0, #8
  404da8:	faa4 f28c 	sel	r2, r4, ip
  404dac:	fa83 f34c 	uadd8	r3, r3, ip
  404db0:	faa2 f38c 	sel	r3, r2, ip
  404db4:	b97b      	cbnz	r3, 404dd6 <strlen+0x96>
  404db6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404dba:	f101 0120 	add.w	r1, r1, #32
  404dbe:	fa82 f24c 	uadd8	r2, r2, ip
  404dc2:	f100 0008 	add.w	r0, r0, #8
  404dc6:	faa4 f28c 	sel	r2, r4, ip
  404dca:	fa83 f34c 	uadd8	r3, r3, ip
  404dce:	faa2 f38c 	sel	r3, r2, ip
  404dd2:	2b00      	cmp	r3, #0
  404dd4:	d0c6      	beq.n	404d64 <strlen+0x24>
  404dd6:	2a00      	cmp	r2, #0
  404dd8:	bf04      	itt	eq
  404dda:	3004      	addeq	r0, #4
  404ddc:	461a      	moveq	r2, r3
  404dde:	ba12      	rev	r2, r2
  404de0:	fab2 f282 	clz	r2, r2
  404de4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404de8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  404dec:	4770      	bx	lr
  404dee:	e9d1 2300 	ldrd	r2, r3, [r1]
  404df2:	f004 0503 	and.w	r5, r4, #3
  404df6:	f1c4 0000 	rsb	r0, r4, #0
  404dfa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  404dfe:	f014 0f04 	tst.w	r4, #4
  404e02:	f891 f040 	pld	[r1, #64]	; 0x40
  404e06:	fa0c f505 	lsl.w	r5, ip, r5
  404e0a:	ea62 0205 	orn	r2, r2, r5
  404e0e:	bf1c      	itt	ne
  404e10:	ea63 0305 	ornne	r3, r3, r5
  404e14:	4662      	movne	r2, ip
  404e16:	f04f 0400 	mov.w	r4, #0
  404e1a:	e7a9      	b.n	404d70 <strlen+0x30>

00404e1c <__ssprint_r>:
  404e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404e20:	6893      	ldr	r3, [r2, #8]
  404e22:	b083      	sub	sp, #12
  404e24:	4690      	mov	r8, r2
  404e26:	2b00      	cmp	r3, #0
  404e28:	d070      	beq.n	404f0c <__ssprint_r+0xf0>
  404e2a:	4682      	mov	sl, r0
  404e2c:	460c      	mov	r4, r1
  404e2e:	6817      	ldr	r7, [r2, #0]
  404e30:	688d      	ldr	r5, [r1, #8]
  404e32:	6808      	ldr	r0, [r1, #0]
  404e34:	e042      	b.n	404ebc <__ssprint_r+0xa0>
  404e36:	89a3      	ldrh	r3, [r4, #12]
  404e38:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404e3c:	d02e      	beq.n	404e9c <__ssprint_r+0x80>
  404e3e:	6965      	ldr	r5, [r4, #20]
  404e40:	6921      	ldr	r1, [r4, #16]
  404e42:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  404e46:	eba0 0b01 	sub.w	fp, r0, r1
  404e4a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  404e4e:	f10b 0001 	add.w	r0, fp, #1
  404e52:	106d      	asrs	r5, r5, #1
  404e54:	4430      	add	r0, r6
  404e56:	42a8      	cmp	r0, r5
  404e58:	462a      	mov	r2, r5
  404e5a:	bf84      	itt	hi
  404e5c:	4605      	movhi	r5, r0
  404e5e:	462a      	movhi	r2, r5
  404e60:	055b      	lsls	r3, r3, #21
  404e62:	d538      	bpl.n	404ed6 <__ssprint_r+0xba>
  404e64:	4611      	mov	r1, r2
  404e66:	4650      	mov	r0, sl
  404e68:	f7ff f8ac 	bl	403fc4 <_malloc_r>
  404e6c:	2800      	cmp	r0, #0
  404e6e:	d03c      	beq.n	404eea <__ssprint_r+0xce>
  404e70:	465a      	mov	r2, fp
  404e72:	6921      	ldr	r1, [r4, #16]
  404e74:	9001      	str	r0, [sp, #4]
  404e76:	f7ff fbab 	bl	4045d0 <memcpy>
  404e7a:	89a2      	ldrh	r2, [r4, #12]
  404e7c:	9b01      	ldr	r3, [sp, #4]
  404e7e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  404e82:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  404e86:	81a2      	strh	r2, [r4, #12]
  404e88:	eba5 020b 	sub.w	r2, r5, fp
  404e8c:	eb03 000b 	add.w	r0, r3, fp
  404e90:	6165      	str	r5, [r4, #20]
  404e92:	6123      	str	r3, [r4, #16]
  404e94:	6020      	str	r0, [r4, #0]
  404e96:	60a2      	str	r2, [r4, #8]
  404e98:	4635      	mov	r5, r6
  404e9a:	46b3      	mov	fp, r6
  404e9c:	465a      	mov	r2, fp
  404e9e:	4649      	mov	r1, r9
  404ea0:	f000 fa18 	bl	4052d4 <memmove>
  404ea4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  404ea8:	68a2      	ldr	r2, [r4, #8]
  404eaa:	6820      	ldr	r0, [r4, #0]
  404eac:	1b55      	subs	r5, r2, r5
  404eae:	4458      	add	r0, fp
  404eb0:	1b9e      	subs	r6, r3, r6
  404eb2:	60a5      	str	r5, [r4, #8]
  404eb4:	6020      	str	r0, [r4, #0]
  404eb6:	f8c8 6008 	str.w	r6, [r8, #8]
  404eba:	b33e      	cbz	r6, 404f0c <__ssprint_r+0xf0>
  404ebc:	687e      	ldr	r6, [r7, #4]
  404ebe:	463b      	mov	r3, r7
  404ec0:	3708      	adds	r7, #8
  404ec2:	2e00      	cmp	r6, #0
  404ec4:	d0fa      	beq.n	404ebc <__ssprint_r+0xa0>
  404ec6:	42ae      	cmp	r6, r5
  404ec8:	f8d3 9000 	ldr.w	r9, [r3]
  404ecc:	46ab      	mov	fp, r5
  404ece:	d2b2      	bcs.n	404e36 <__ssprint_r+0x1a>
  404ed0:	4635      	mov	r5, r6
  404ed2:	46b3      	mov	fp, r6
  404ed4:	e7e2      	b.n	404e9c <__ssprint_r+0x80>
  404ed6:	4650      	mov	r0, sl
  404ed8:	f000 fa60 	bl	40539c <_realloc_r>
  404edc:	4603      	mov	r3, r0
  404ede:	2800      	cmp	r0, #0
  404ee0:	d1d2      	bne.n	404e88 <__ssprint_r+0x6c>
  404ee2:	6921      	ldr	r1, [r4, #16]
  404ee4:	4650      	mov	r0, sl
  404ee6:	f000 f8f9 	bl	4050dc <_free_r>
  404eea:	230c      	movs	r3, #12
  404eec:	f8ca 3000 	str.w	r3, [sl]
  404ef0:	89a3      	ldrh	r3, [r4, #12]
  404ef2:	2200      	movs	r2, #0
  404ef4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404ef8:	f04f 30ff 	mov.w	r0, #4294967295
  404efc:	81a3      	strh	r3, [r4, #12]
  404efe:	f8c8 2008 	str.w	r2, [r8, #8]
  404f02:	f8c8 2004 	str.w	r2, [r8, #4]
  404f06:	b003      	add	sp, #12
  404f08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404f0c:	2000      	movs	r0, #0
  404f0e:	f8c8 0004 	str.w	r0, [r8, #4]
  404f12:	b003      	add	sp, #12
  404f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404f18 <__register_exitproc>:
  404f18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404f1c:	4d2c      	ldr	r5, [pc, #176]	; (404fd0 <__register_exitproc+0xb8>)
  404f1e:	4606      	mov	r6, r0
  404f20:	6828      	ldr	r0, [r5, #0]
  404f22:	4698      	mov	r8, r3
  404f24:	460f      	mov	r7, r1
  404f26:	4691      	mov	r9, r2
  404f28:	f7ff f848 	bl	403fbc <__retarget_lock_acquire_recursive>
  404f2c:	4b29      	ldr	r3, [pc, #164]	; (404fd4 <__register_exitproc+0xbc>)
  404f2e:	681c      	ldr	r4, [r3, #0]
  404f30:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  404f34:	2b00      	cmp	r3, #0
  404f36:	d03e      	beq.n	404fb6 <__register_exitproc+0x9e>
  404f38:	685a      	ldr	r2, [r3, #4]
  404f3a:	2a1f      	cmp	r2, #31
  404f3c:	dc1c      	bgt.n	404f78 <__register_exitproc+0x60>
  404f3e:	f102 0e01 	add.w	lr, r2, #1
  404f42:	b176      	cbz	r6, 404f62 <__register_exitproc+0x4a>
  404f44:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  404f48:	2401      	movs	r4, #1
  404f4a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  404f4e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  404f52:	4094      	lsls	r4, r2
  404f54:	4320      	orrs	r0, r4
  404f56:	2e02      	cmp	r6, #2
  404f58:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  404f5c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  404f60:	d023      	beq.n	404faa <__register_exitproc+0x92>
  404f62:	3202      	adds	r2, #2
  404f64:	f8c3 e004 	str.w	lr, [r3, #4]
  404f68:	6828      	ldr	r0, [r5, #0]
  404f6a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  404f6e:	f7ff f827 	bl	403fc0 <__retarget_lock_release_recursive>
  404f72:	2000      	movs	r0, #0
  404f74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404f78:	4b17      	ldr	r3, [pc, #92]	; (404fd8 <__register_exitproc+0xc0>)
  404f7a:	b30b      	cbz	r3, 404fc0 <__register_exitproc+0xa8>
  404f7c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  404f80:	f3af 8000 	nop.w
  404f84:	4603      	mov	r3, r0
  404f86:	b1d8      	cbz	r0, 404fc0 <__register_exitproc+0xa8>
  404f88:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  404f8c:	6002      	str	r2, [r0, #0]
  404f8e:	2100      	movs	r1, #0
  404f90:	6041      	str	r1, [r0, #4]
  404f92:	460a      	mov	r2, r1
  404f94:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  404f98:	f04f 0e01 	mov.w	lr, #1
  404f9c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  404fa0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  404fa4:	2e00      	cmp	r6, #0
  404fa6:	d0dc      	beq.n	404f62 <__register_exitproc+0x4a>
  404fa8:	e7cc      	b.n	404f44 <__register_exitproc+0x2c>
  404faa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  404fae:	430c      	orrs	r4, r1
  404fb0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  404fb4:	e7d5      	b.n	404f62 <__register_exitproc+0x4a>
  404fb6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  404fba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  404fbe:	e7bb      	b.n	404f38 <__register_exitproc+0x20>
  404fc0:	6828      	ldr	r0, [r5, #0]
  404fc2:	f7fe fffd 	bl	403fc0 <__retarget_lock_release_recursive>
  404fc6:	f04f 30ff 	mov.w	r0, #4294967295
  404fca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404fce:	bf00      	nop
  404fd0:	20400450 	.word	0x20400450
  404fd4:	004073f8 	.word	0x004073f8
  404fd8:	00000000 	.word	0x00000000

00404fdc <_calloc_r>:
  404fdc:	b510      	push	{r4, lr}
  404fde:	fb02 f101 	mul.w	r1, r2, r1
  404fe2:	f7fe ffef 	bl	403fc4 <_malloc_r>
  404fe6:	4604      	mov	r4, r0
  404fe8:	b1d8      	cbz	r0, 405022 <_calloc_r+0x46>
  404fea:	f850 2c04 	ldr.w	r2, [r0, #-4]
  404fee:	f022 0203 	bic.w	r2, r2, #3
  404ff2:	3a04      	subs	r2, #4
  404ff4:	2a24      	cmp	r2, #36	; 0x24
  404ff6:	d818      	bhi.n	40502a <_calloc_r+0x4e>
  404ff8:	2a13      	cmp	r2, #19
  404ffa:	d914      	bls.n	405026 <_calloc_r+0x4a>
  404ffc:	2300      	movs	r3, #0
  404ffe:	2a1b      	cmp	r2, #27
  405000:	6003      	str	r3, [r0, #0]
  405002:	6043      	str	r3, [r0, #4]
  405004:	d916      	bls.n	405034 <_calloc_r+0x58>
  405006:	2a24      	cmp	r2, #36	; 0x24
  405008:	6083      	str	r3, [r0, #8]
  40500a:	60c3      	str	r3, [r0, #12]
  40500c:	bf11      	iteee	ne
  40500e:	f100 0210 	addne.w	r2, r0, #16
  405012:	6103      	streq	r3, [r0, #16]
  405014:	6143      	streq	r3, [r0, #20]
  405016:	f100 0218 	addeq.w	r2, r0, #24
  40501a:	2300      	movs	r3, #0
  40501c:	6013      	str	r3, [r2, #0]
  40501e:	6053      	str	r3, [r2, #4]
  405020:	6093      	str	r3, [r2, #8]
  405022:	4620      	mov	r0, r4
  405024:	bd10      	pop	{r4, pc}
  405026:	4602      	mov	r2, r0
  405028:	e7f7      	b.n	40501a <_calloc_r+0x3e>
  40502a:	2100      	movs	r1, #0
  40502c:	f7fc fd2e 	bl	401a8c <memset>
  405030:	4620      	mov	r0, r4
  405032:	bd10      	pop	{r4, pc}
  405034:	f100 0208 	add.w	r2, r0, #8
  405038:	e7ef      	b.n	40501a <_calloc_r+0x3e>
  40503a:	bf00      	nop

0040503c <_malloc_trim_r>:
  40503c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40503e:	4f24      	ldr	r7, [pc, #144]	; (4050d0 <_malloc_trim_r+0x94>)
  405040:	460c      	mov	r4, r1
  405042:	4606      	mov	r6, r0
  405044:	f7ff fb5e 	bl	404704 <__malloc_lock>
  405048:	68bb      	ldr	r3, [r7, #8]
  40504a:	685d      	ldr	r5, [r3, #4]
  40504c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405050:	310f      	adds	r1, #15
  405052:	f025 0503 	bic.w	r5, r5, #3
  405056:	4429      	add	r1, r5
  405058:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40505c:	f021 010f 	bic.w	r1, r1, #15
  405060:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405064:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405068:	db07      	blt.n	40507a <_malloc_trim_r+0x3e>
  40506a:	2100      	movs	r1, #0
  40506c:	4630      	mov	r0, r6
  40506e:	f7ff fe4f 	bl	404d10 <_sbrk_r>
  405072:	68bb      	ldr	r3, [r7, #8]
  405074:	442b      	add	r3, r5
  405076:	4298      	cmp	r0, r3
  405078:	d004      	beq.n	405084 <_malloc_trim_r+0x48>
  40507a:	4630      	mov	r0, r6
  40507c:	f7ff fb48 	bl	404710 <__malloc_unlock>
  405080:	2000      	movs	r0, #0
  405082:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405084:	4261      	negs	r1, r4
  405086:	4630      	mov	r0, r6
  405088:	f7ff fe42 	bl	404d10 <_sbrk_r>
  40508c:	3001      	adds	r0, #1
  40508e:	d00d      	beq.n	4050ac <_malloc_trim_r+0x70>
  405090:	4b10      	ldr	r3, [pc, #64]	; (4050d4 <_malloc_trim_r+0x98>)
  405092:	68ba      	ldr	r2, [r7, #8]
  405094:	6819      	ldr	r1, [r3, #0]
  405096:	1b2d      	subs	r5, r5, r4
  405098:	f045 0501 	orr.w	r5, r5, #1
  40509c:	4630      	mov	r0, r6
  40509e:	1b09      	subs	r1, r1, r4
  4050a0:	6055      	str	r5, [r2, #4]
  4050a2:	6019      	str	r1, [r3, #0]
  4050a4:	f7ff fb34 	bl	404710 <__malloc_unlock>
  4050a8:	2001      	movs	r0, #1
  4050aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4050ac:	2100      	movs	r1, #0
  4050ae:	4630      	mov	r0, r6
  4050b0:	f7ff fe2e 	bl	404d10 <_sbrk_r>
  4050b4:	68ba      	ldr	r2, [r7, #8]
  4050b6:	1a83      	subs	r3, r0, r2
  4050b8:	2b0f      	cmp	r3, #15
  4050ba:	ddde      	ble.n	40507a <_malloc_trim_r+0x3e>
  4050bc:	4c06      	ldr	r4, [pc, #24]	; (4050d8 <_malloc_trim_r+0x9c>)
  4050be:	4905      	ldr	r1, [pc, #20]	; (4050d4 <_malloc_trim_r+0x98>)
  4050c0:	6824      	ldr	r4, [r4, #0]
  4050c2:	f043 0301 	orr.w	r3, r3, #1
  4050c6:	1b00      	subs	r0, r0, r4
  4050c8:	6053      	str	r3, [r2, #4]
  4050ca:	6008      	str	r0, [r1, #0]
  4050cc:	e7d5      	b.n	40507a <_malloc_trim_r+0x3e>
  4050ce:	bf00      	nop
  4050d0:	20400454 	.word	0x20400454
  4050d4:	20400c84 	.word	0x20400c84
  4050d8:	2040085c 	.word	0x2040085c

004050dc <_free_r>:
  4050dc:	2900      	cmp	r1, #0
  4050de:	d044      	beq.n	40516a <_free_r+0x8e>
  4050e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4050e4:	460d      	mov	r5, r1
  4050e6:	4680      	mov	r8, r0
  4050e8:	f7ff fb0c 	bl	404704 <__malloc_lock>
  4050ec:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4050f0:	4969      	ldr	r1, [pc, #420]	; (405298 <_free_r+0x1bc>)
  4050f2:	f027 0301 	bic.w	r3, r7, #1
  4050f6:	f1a5 0408 	sub.w	r4, r5, #8
  4050fa:	18e2      	adds	r2, r4, r3
  4050fc:	688e      	ldr	r6, [r1, #8]
  4050fe:	6850      	ldr	r0, [r2, #4]
  405100:	42b2      	cmp	r2, r6
  405102:	f020 0003 	bic.w	r0, r0, #3
  405106:	d05e      	beq.n	4051c6 <_free_r+0xea>
  405108:	07fe      	lsls	r6, r7, #31
  40510a:	6050      	str	r0, [r2, #4]
  40510c:	d40b      	bmi.n	405126 <_free_r+0x4a>
  40510e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405112:	1be4      	subs	r4, r4, r7
  405114:	f101 0e08 	add.w	lr, r1, #8
  405118:	68a5      	ldr	r5, [r4, #8]
  40511a:	4575      	cmp	r5, lr
  40511c:	443b      	add	r3, r7
  40511e:	d06d      	beq.n	4051fc <_free_r+0x120>
  405120:	68e7      	ldr	r7, [r4, #12]
  405122:	60ef      	str	r7, [r5, #12]
  405124:	60bd      	str	r5, [r7, #8]
  405126:	1815      	adds	r5, r2, r0
  405128:	686d      	ldr	r5, [r5, #4]
  40512a:	07ed      	lsls	r5, r5, #31
  40512c:	d53e      	bpl.n	4051ac <_free_r+0xd0>
  40512e:	f043 0201 	orr.w	r2, r3, #1
  405132:	6062      	str	r2, [r4, #4]
  405134:	50e3      	str	r3, [r4, r3]
  405136:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40513a:	d217      	bcs.n	40516c <_free_r+0x90>
  40513c:	08db      	lsrs	r3, r3, #3
  40513e:	1c58      	adds	r0, r3, #1
  405140:	109a      	asrs	r2, r3, #2
  405142:	684d      	ldr	r5, [r1, #4]
  405144:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405148:	60a7      	str	r7, [r4, #8]
  40514a:	2301      	movs	r3, #1
  40514c:	4093      	lsls	r3, r2
  40514e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405152:	432b      	orrs	r3, r5
  405154:	3a08      	subs	r2, #8
  405156:	60e2      	str	r2, [r4, #12]
  405158:	604b      	str	r3, [r1, #4]
  40515a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40515e:	60fc      	str	r4, [r7, #12]
  405160:	4640      	mov	r0, r8
  405162:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405166:	f7ff bad3 	b.w	404710 <__malloc_unlock>
  40516a:	4770      	bx	lr
  40516c:	0a5a      	lsrs	r2, r3, #9
  40516e:	2a04      	cmp	r2, #4
  405170:	d852      	bhi.n	405218 <_free_r+0x13c>
  405172:	099a      	lsrs	r2, r3, #6
  405174:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405178:	00ff      	lsls	r7, r7, #3
  40517a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40517e:	19c8      	adds	r0, r1, r7
  405180:	59ca      	ldr	r2, [r1, r7]
  405182:	3808      	subs	r0, #8
  405184:	4290      	cmp	r0, r2
  405186:	d04f      	beq.n	405228 <_free_r+0x14c>
  405188:	6851      	ldr	r1, [r2, #4]
  40518a:	f021 0103 	bic.w	r1, r1, #3
  40518e:	428b      	cmp	r3, r1
  405190:	d232      	bcs.n	4051f8 <_free_r+0x11c>
  405192:	6892      	ldr	r2, [r2, #8]
  405194:	4290      	cmp	r0, r2
  405196:	d1f7      	bne.n	405188 <_free_r+0xac>
  405198:	68c3      	ldr	r3, [r0, #12]
  40519a:	60a0      	str	r0, [r4, #8]
  40519c:	60e3      	str	r3, [r4, #12]
  40519e:	609c      	str	r4, [r3, #8]
  4051a0:	60c4      	str	r4, [r0, #12]
  4051a2:	4640      	mov	r0, r8
  4051a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4051a8:	f7ff bab2 	b.w	404710 <__malloc_unlock>
  4051ac:	6895      	ldr	r5, [r2, #8]
  4051ae:	4f3b      	ldr	r7, [pc, #236]	; (40529c <_free_r+0x1c0>)
  4051b0:	42bd      	cmp	r5, r7
  4051b2:	4403      	add	r3, r0
  4051b4:	d040      	beq.n	405238 <_free_r+0x15c>
  4051b6:	68d0      	ldr	r0, [r2, #12]
  4051b8:	60e8      	str	r0, [r5, #12]
  4051ba:	f043 0201 	orr.w	r2, r3, #1
  4051be:	6085      	str	r5, [r0, #8]
  4051c0:	6062      	str	r2, [r4, #4]
  4051c2:	50e3      	str	r3, [r4, r3]
  4051c4:	e7b7      	b.n	405136 <_free_r+0x5a>
  4051c6:	07ff      	lsls	r7, r7, #31
  4051c8:	4403      	add	r3, r0
  4051ca:	d407      	bmi.n	4051dc <_free_r+0x100>
  4051cc:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4051d0:	1aa4      	subs	r4, r4, r2
  4051d2:	4413      	add	r3, r2
  4051d4:	68a0      	ldr	r0, [r4, #8]
  4051d6:	68e2      	ldr	r2, [r4, #12]
  4051d8:	60c2      	str	r2, [r0, #12]
  4051da:	6090      	str	r0, [r2, #8]
  4051dc:	4a30      	ldr	r2, [pc, #192]	; (4052a0 <_free_r+0x1c4>)
  4051de:	6812      	ldr	r2, [r2, #0]
  4051e0:	f043 0001 	orr.w	r0, r3, #1
  4051e4:	4293      	cmp	r3, r2
  4051e6:	6060      	str	r0, [r4, #4]
  4051e8:	608c      	str	r4, [r1, #8]
  4051ea:	d3b9      	bcc.n	405160 <_free_r+0x84>
  4051ec:	4b2d      	ldr	r3, [pc, #180]	; (4052a4 <_free_r+0x1c8>)
  4051ee:	4640      	mov	r0, r8
  4051f0:	6819      	ldr	r1, [r3, #0]
  4051f2:	f7ff ff23 	bl	40503c <_malloc_trim_r>
  4051f6:	e7b3      	b.n	405160 <_free_r+0x84>
  4051f8:	4610      	mov	r0, r2
  4051fa:	e7cd      	b.n	405198 <_free_r+0xbc>
  4051fc:	1811      	adds	r1, r2, r0
  4051fe:	6849      	ldr	r1, [r1, #4]
  405200:	07c9      	lsls	r1, r1, #31
  405202:	d444      	bmi.n	40528e <_free_r+0x1b2>
  405204:	6891      	ldr	r1, [r2, #8]
  405206:	68d2      	ldr	r2, [r2, #12]
  405208:	60ca      	str	r2, [r1, #12]
  40520a:	4403      	add	r3, r0
  40520c:	f043 0001 	orr.w	r0, r3, #1
  405210:	6091      	str	r1, [r2, #8]
  405212:	6060      	str	r0, [r4, #4]
  405214:	50e3      	str	r3, [r4, r3]
  405216:	e7a3      	b.n	405160 <_free_r+0x84>
  405218:	2a14      	cmp	r2, #20
  40521a:	d816      	bhi.n	40524a <_free_r+0x16e>
  40521c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405220:	00ff      	lsls	r7, r7, #3
  405222:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405226:	e7aa      	b.n	40517e <_free_r+0xa2>
  405228:	10aa      	asrs	r2, r5, #2
  40522a:	2301      	movs	r3, #1
  40522c:	684d      	ldr	r5, [r1, #4]
  40522e:	4093      	lsls	r3, r2
  405230:	432b      	orrs	r3, r5
  405232:	604b      	str	r3, [r1, #4]
  405234:	4603      	mov	r3, r0
  405236:	e7b0      	b.n	40519a <_free_r+0xbe>
  405238:	f043 0201 	orr.w	r2, r3, #1
  40523c:	614c      	str	r4, [r1, #20]
  40523e:	610c      	str	r4, [r1, #16]
  405240:	60e5      	str	r5, [r4, #12]
  405242:	60a5      	str	r5, [r4, #8]
  405244:	6062      	str	r2, [r4, #4]
  405246:	50e3      	str	r3, [r4, r3]
  405248:	e78a      	b.n	405160 <_free_r+0x84>
  40524a:	2a54      	cmp	r2, #84	; 0x54
  40524c:	d806      	bhi.n	40525c <_free_r+0x180>
  40524e:	0b1a      	lsrs	r2, r3, #12
  405250:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405254:	00ff      	lsls	r7, r7, #3
  405256:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40525a:	e790      	b.n	40517e <_free_r+0xa2>
  40525c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405260:	d806      	bhi.n	405270 <_free_r+0x194>
  405262:	0bda      	lsrs	r2, r3, #15
  405264:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405268:	00ff      	lsls	r7, r7, #3
  40526a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40526e:	e786      	b.n	40517e <_free_r+0xa2>
  405270:	f240 5054 	movw	r0, #1364	; 0x554
  405274:	4282      	cmp	r2, r0
  405276:	d806      	bhi.n	405286 <_free_r+0x1aa>
  405278:	0c9a      	lsrs	r2, r3, #18
  40527a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40527e:	00ff      	lsls	r7, r7, #3
  405280:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405284:	e77b      	b.n	40517e <_free_r+0xa2>
  405286:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40528a:	257e      	movs	r5, #126	; 0x7e
  40528c:	e777      	b.n	40517e <_free_r+0xa2>
  40528e:	f043 0101 	orr.w	r1, r3, #1
  405292:	6061      	str	r1, [r4, #4]
  405294:	6013      	str	r3, [r2, #0]
  405296:	e763      	b.n	405160 <_free_r+0x84>
  405298:	20400454 	.word	0x20400454
  40529c:	2040045c 	.word	0x2040045c
  4052a0:	20400860 	.word	0x20400860
  4052a4:	20400cb4 	.word	0x20400cb4

004052a8 <__ascii_mbtowc>:
  4052a8:	b082      	sub	sp, #8
  4052aa:	b149      	cbz	r1, 4052c0 <__ascii_mbtowc+0x18>
  4052ac:	b15a      	cbz	r2, 4052c6 <__ascii_mbtowc+0x1e>
  4052ae:	b16b      	cbz	r3, 4052cc <__ascii_mbtowc+0x24>
  4052b0:	7813      	ldrb	r3, [r2, #0]
  4052b2:	600b      	str	r3, [r1, #0]
  4052b4:	7812      	ldrb	r2, [r2, #0]
  4052b6:	1c10      	adds	r0, r2, #0
  4052b8:	bf18      	it	ne
  4052ba:	2001      	movne	r0, #1
  4052bc:	b002      	add	sp, #8
  4052be:	4770      	bx	lr
  4052c0:	a901      	add	r1, sp, #4
  4052c2:	2a00      	cmp	r2, #0
  4052c4:	d1f3      	bne.n	4052ae <__ascii_mbtowc+0x6>
  4052c6:	4610      	mov	r0, r2
  4052c8:	b002      	add	sp, #8
  4052ca:	4770      	bx	lr
  4052cc:	f06f 0001 	mvn.w	r0, #1
  4052d0:	e7f4      	b.n	4052bc <__ascii_mbtowc+0x14>
  4052d2:	bf00      	nop

004052d4 <memmove>:
  4052d4:	4288      	cmp	r0, r1
  4052d6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4052d8:	d90d      	bls.n	4052f6 <memmove+0x22>
  4052da:	188b      	adds	r3, r1, r2
  4052dc:	4298      	cmp	r0, r3
  4052de:	d20a      	bcs.n	4052f6 <memmove+0x22>
  4052e0:	1884      	adds	r4, r0, r2
  4052e2:	2a00      	cmp	r2, #0
  4052e4:	d051      	beq.n	40538a <memmove+0xb6>
  4052e6:	4622      	mov	r2, r4
  4052e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4052ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4052f0:	4299      	cmp	r1, r3
  4052f2:	d1f9      	bne.n	4052e8 <memmove+0x14>
  4052f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4052f6:	2a0f      	cmp	r2, #15
  4052f8:	d948      	bls.n	40538c <memmove+0xb8>
  4052fa:	ea41 0300 	orr.w	r3, r1, r0
  4052fe:	079b      	lsls	r3, r3, #30
  405300:	d146      	bne.n	405390 <memmove+0xbc>
  405302:	f100 0410 	add.w	r4, r0, #16
  405306:	f101 0310 	add.w	r3, r1, #16
  40530a:	4615      	mov	r5, r2
  40530c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405310:	f844 6c10 	str.w	r6, [r4, #-16]
  405314:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405318:	f844 6c0c 	str.w	r6, [r4, #-12]
  40531c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405320:	f844 6c08 	str.w	r6, [r4, #-8]
  405324:	3d10      	subs	r5, #16
  405326:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40532a:	f844 6c04 	str.w	r6, [r4, #-4]
  40532e:	2d0f      	cmp	r5, #15
  405330:	f103 0310 	add.w	r3, r3, #16
  405334:	f104 0410 	add.w	r4, r4, #16
  405338:	d8e8      	bhi.n	40530c <memmove+0x38>
  40533a:	f1a2 0310 	sub.w	r3, r2, #16
  40533e:	f023 030f 	bic.w	r3, r3, #15
  405342:	f002 0e0f 	and.w	lr, r2, #15
  405346:	3310      	adds	r3, #16
  405348:	f1be 0f03 	cmp.w	lr, #3
  40534c:	4419      	add	r1, r3
  40534e:	4403      	add	r3, r0
  405350:	d921      	bls.n	405396 <memmove+0xc2>
  405352:	1f1e      	subs	r6, r3, #4
  405354:	460d      	mov	r5, r1
  405356:	4674      	mov	r4, lr
  405358:	3c04      	subs	r4, #4
  40535a:	f855 7b04 	ldr.w	r7, [r5], #4
  40535e:	f846 7f04 	str.w	r7, [r6, #4]!
  405362:	2c03      	cmp	r4, #3
  405364:	d8f8      	bhi.n	405358 <memmove+0x84>
  405366:	f1ae 0404 	sub.w	r4, lr, #4
  40536a:	f024 0403 	bic.w	r4, r4, #3
  40536e:	3404      	adds	r4, #4
  405370:	4421      	add	r1, r4
  405372:	4423      	add	r3, r4
  405374:	f002 0203 	and.w	r2, r2, #3
  405378:	b162      	cbz	r2, 405394 <memmove+0xc0>
  40537a:	3b01      	subs	r3, #1
  40537c:	440a      	add	r2, r1
  40537e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405382:	f803 4f01 	strb.w	r4, [r3, #1]!
  405386:	428a      	cmp	r2, r1
  405388:	d1f9      	bne.n	40537e <memmove+0xaa>
  40538a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40538c:	4603      	mov	r3, r0
  40538e:	e7f3      	b.n	405378 <memmove+0xa4>
  405390:	4603      	mov	r3, r0
  405392:	e7f2      	b.n	40537a <memmove+0xa6>
  405394:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405396:	4672      	mov	r2, lr
  405398:	e7ee      	b.n	405378 <memmove+0xa4>
  40539a:	bf00      	nop

0040539c <_realloc_r>:
  40539c:	2900      	cmp	r1, #0
  40539e:	f000 8095 	beq.w	4054cc <_realloc_r+0x130>
  4053a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4053a6:	460d      	mov	r5, r1
  4053a8:	4616      	mov	r6, r2
  4053aa:	b083      	sub	sp, #12
  4053ac:	4680      	mov	r8, r0
  4053ae:	f106 070b 	add.w	r7, r6, #11
  4053b2:	f7ff f9a7 	bl	404704 <__malloc_lock>
  4053b6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4053ba:	2f16      	cmp	r7, #22
  4053bc:	f02e 0403 	bic.w	r4, lr, #3
  4053c0:	f1a5 0908 	sub.w	r9, r5, #8
  4053c4:	d83c      	bhi.n	405440 <_realloc_r+0xa4>
  4053c6:	2210      	movs	r2, #16
  4053c8:	4617      	mov	r7, r2
  4053ca:	42be      	cmp	r6, r7
  4053cc:	d83d      	bhi.n	40544a <_realloc_r+0xae>
  4053ce:	4294      	cmp	r4, r2
  4053d0:	da43      	bge.n	40545a <_realloc_r+0xbe>
  4053d2:	4bc4      	ldr	r3, [pc, #784]	; (4056e4 <_realloc_r+0x348>)
  4053d4:	6899      	ldr	r1, [r3, #8]
  4053d6:	eb09 0004 	add.w	r0, r9, r4
  4053da:	4288      	cmp	r0, r1
  4053dc:	f000 80b4 	beq.w	405548 <_realloc_r+0x1ac>
  4053e0:	6843      	ldr	r3, [r0, #4]
  4053e2:	f023 0101 	bic.w	r1, r3, #1
  4053e6:	4401      	add	r1, r0
  4053e8:	6849      	ldr	r1, [r1, #4]
  4053ea:	07c9      	lsls	r1, r1, #31
  4053ec:	d54c      	bpl.n	405488 <_realloc_r+0xec>
  4053ee:	f01e 0f01 	tst.w	lr, #1
  4053f2:	f000 809b 	beq.w	40552c <_realloc_r+0x190>
  4053f6:	4631      	mov	r1, r6
  4053f8:	4640      	mov	r0, r8
  4053fa:	f7fe fde3 	bl	403fc4 <_malloc_r>
  4053fe:	4606      	mov	r6, r0
  405400:	2800      	cmp	r0, #0
  405402:	d03a      	beq.n	40547a <_realloc_r+0xde>
  405404:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405408:	f023 0301 	bic.w	r3, r3, #1
  40540c:	444b      	add	r3, r9
  40540e:	f1a0 0208 	sub.w	r2, r0, #8
  405412:	429a      	cmp	r2, r3
  405414:	f000 8121 	beq.w	40565a <_realloc_r+0x2be>
  405418:	1f22      	subs	r2, r4, #4
  40541a:	2a24      	cmp	r2, #36	; 0x24
  40541c:	f200 8107 	bhi.w	40562e <_realloc_r+0x292>
  405420:	2a13      	cmp	r2, #19
  405422:	f200 80db 	bhi.w	4055dc <_realloc_r+0x240>
  405426:	4603      	mov	r3, r0
  405428:	462a      	mov	r2, r5
  40542a:	6811      	ldr	r1, [r2, #0]
  40542c:	6019      	str	r1, [r3, #0]
  40542e:	6851      	ldr	r1, [r2, #4]
  405430:	6059      	str	r1, [r3, #4]
  405432:	6892      	ldr	r2, [r2, #8]
  405434:	609a      	str	r2, [r3, #8]
  405436:	4629      	mov	r1, r5
  405438:	4640      	mov	r0, r8
  40543a:	f7ff fe4f 	bl	4050dc <_free_r>
  40543e:	e01c      	b.n	40547a <_realloc_r+0xde>
  405440:	f027 0707 	bic.w	r7, r7, #7
  405444:	2f00      	cmp	r7, #0
  405446:	463a      	mov	r2, r7
  405448:	dabf      	bge.n	4053ca <_realloc_r+0x2e>
  40544a:	2600      	movs	r6, #0
  40544c:	230c      	movs	r3, #12
  40544e:	4630      	mov	r0, r6
  405450:	f8c8 3000 	str.w	r3, [r8]
  405454:	b003      	add	sp, #12
  405456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40545a:	462e      	mov	r6, r5
  40545c:	1be3      	subs	r3, r4, r7
  40545e:	2b0f      	cmp	r3, #15
  405460:	d81e      	bhi.n	4054a0 <_realloc_r+0x104>
  405462:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405466:	f003 0301 	and.w	r3, r3, #1
  40546a:	4323      	orrs	r3, r4
  40546c:	444c      	add	r4, r9
  40546e:	f8c9 3004 	str.w	r3, [r9, #4]
  405472:	6863      	ldr	r3, [r4, #4]
  405474:	f043 0301 	orr.w	r3, r3, #1
  405478:	6063      	str	r3, [r4, #4]
  40547a:	4640      	mov	r0, r8
  40547c:	f7ff f948 	bl	404710 <__malloc_unlock>
  405480:	4630      	mov	r0, r6
  405482:	b003      	add	sp, #12
  405484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405488:	f023 0303 	bic.w	r3, r3, #3
  40548c:	18e1      	adds	r1, r4, r3
  40548e:	4291      	cmp	r1, r2
  405490:	db1f      	blt.n	4054d2 <_realloc_r+0x136>
  405492:	68c3      	ldr	r3, [r0, #12]
  405494:	6882      	ldr	r2, [r0, #8]
  405496:	462e      	mov	r6, r5
  405498:	60d3      	str	r3, [r2, #12]
  40549a:	460c      	mov	r4, r1
  40549c:	609a      	str	r2, [r3, #8]
  40549e:	e7dd      	b.n	40545c <_realloc_r+0xc0>
  4054a0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4054a4:	eb09 0107 	add.w	r1, r9, r7
  4054a8:	f002 0201 	and.w	r2, r2, #1
  4054ac:	444c      	add	r4, r9
  4054ae:	f043 0301 	orr.w	r3, r3, #1
  4054b2:	4317      	orrs	r7, r2
  4054b4:	f8c9 7004 	str.w	r7, [r9, #4]
  4054b8:	604b      	str	r3, [r1, #4]
  4054ba:	6863      	ldr	r3, [r4, #4]
  4054bc:	f043 0301 	orr.w	r3, r3, #1
  4054c0:	3108      	adds	r1, #8
  4054c2:	6063      	str	r3, [r4, #4]
  4054c4:	4640      	mov	r0, r8
  4054c6:	f7ff fe09 	bl	4050dc <_free_r>
  4054ca:	e7d6      	b.n	40547a <_realloc_r+0xde>
  4054cc:	4611      	mov	r1, r2
  4054ce:	f7fe bd79 	b.w	403fc4 <_malloc_r>
  4054d2:	f01e 0f01 	tst.w	lr, #1
  4054d6:	d18e      	bne.n	4053f6 <_realloc_r+0x5a>
  4054d8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4054dc:	eba9 0a01 	sub.w	sl, r9, r1
  4054e0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4054e4:	f021 0103 	bic.w	r1, r1, #3
  4054e8:	440b      	add	r3, r1
  4054ea:	4423      	add	r3, r4
  4054ec:	4293      	cmp	r3, r2
  4054ee:	db25      	blt.n	40553c <_realloc_r+0x1a0>
  4054f0:	68c2      	ldr	r2, [r0, #12]
  4054f2:	6881      	ldr	r1, [r0, #8]
  4054f4:	4656      	mov	r6, sl
  4054f6:	60ca      	str	r2, [r1, #12]
  4054f8:	6091      	str	r1, [r2, #8]
  4054fa:	f8da 100c 	ldr.w	r1, [sl, #12]
  4054fe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405502:	1f22      	subs	r2, r4, #4
  405504:	2a24      	cmp	r2, #36	; 0x24
  405506:	60c1      	str	r1, [r0, #12]
  405508:	6088      	str	r0, [r1, #8]
  40550a:	f200 8094 	bhi.w	405636 <_realloc_r+0x29a>
  40550e:	2a13      	cmp	r2, #19
  405510:	d96f      	bls.n	4055f2 <_realloc_r+0x256>
  405512:	6829      	ldr	r1, [r5, #0]
  405514:	f8ca 1008 	str.w	r1, [sl, #8]
  405518:	6869      	ldr	r1, [r5, #4]
  40551a:	f8ca 100c 	str.w	r1, [sl, #12]
  40551e:	2a1b      	cmp	r2, #27
  405520:	f200 80a2 	bhi.w	405668 <_realloc_r+0x2cc>
  405524:	3508      	adds	r5, #8
  405526:	f10a 0210 	add.w	r2, sl, #16
  40552a:	e063      	b.n	4055f4 <_realloc_r+0x258>
  40552c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405530:	eba9 0a03 	sub.w	sl, r9, r3
  405534:	f8da 1004 	ldr.w	r1, [sl, #4]
  405538:	f021 0103 	bic.w	r1, r1, #3
  40553c:	1863      	adds	r3, r4, r1
  40553e:	4293      	cmp	r3, r2
  405540:	f6ff af59 	blt.w	4053f6 <_realloc_r+0x5a>
  405544:	4656      	mov	r6, sl
  405546:	e7d8      	b.n	4054fa <_realloc_r+0x15e>
  405548:	6841      	ldr	r1, [r0, #4]
  40554a:	f021 0b03 	bic.w	fp, r1, #3
  40554e:	44a3      	add	fp, r4
  405550:	f107 0010 	add.w	r0, r7, #16
  405554:	4583      	cmp	fp, r0
  405556:	da56      	bge.n	405606 <_realloc_r+0x26a>
  405558:	f01e 0f01 	tst.w	lr, #1
  40555c:	f47f af4b 	bne.w	4053f6 <_realloc_r+0x5a>
  405560:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405564:	eba9 0a01 	sub.w	sl, r9, r1
  405568:	f8da 1004 	ldr.w	r1, [sl, #4]
  40556c:	f021 0103 	bic.w	r1, r1, #3
  405570:	448b      	add	fp, r1
  405572:	4558      	cmp	r0, fp
  405574:	dce2      	bgt.n	40553c <_realloc_r+0x1a0>
  405576:	4656      	mov	r6, sl
  405578:	f8da 100c 	ldr.w	r1, [sl, #12]
  40557c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405580:	1f22      	subs	r2, r4, #4
  405582:	2a24      	cmp	r2, #36	; 0x24
  405584:	60c1      	str	r1, [r0, #12]
  405586:	6088      	str	r0, [r1, #8]
  405588:	f200 808f 	bhi.w	4056aa <_realloc_r+0x30e>
  40558c:	2a13      	cmp	r2, #19
  40558e:	f240 808a 	bls.w	4056a6 <_realloc_r+0x30a>
  405592:	6829      	ldr	r1, [r5, #0]
  405594:	f8ca 1008 	str.w	r1, [sl, #8]
  405598:	6869      	ldr	r1, [r5, #4]
  40559a:	f8ca 100c 	str.w	r1, [sl, #12]
  40559e:	2a1b      	cmp	r2, #27
  4055a0:	f200 808a 	bhi.w	4056b8 <_realloc_r+0x31c>
  4055a4:	3508      	adds	r5, #8
  4055a6:	f10a 0210 	add.w	r2, sl, #16
  4055aa:	6829      	ldr	r1, [r5, #0]
  4055ac:	6011      	str	r1, [r2, #0]
  4055ae:	6869      	ldr	r1, [r5, #4]
  4055b0:	6051      	str	r1, [r2, #4]
  4055b2:	68a9      	ldr	r1, [r5, #8]
  4055b4:	6091      	str	r1, [r2, #8]
  4055b6:	eb0a 0107 	add.w	r1, sl, r7
  4055ba:	ebab 0207 	sub.w	r2, fp, r7
  4055be:	f042 0201 	orr.w	r2, r2, #1
  4055c2:	6099      	str	r1, [r3, #8]
  4055c4:	604a      	str	r2, [r1, #4]
  4055c6:	f8da 3004 	ldr.w	r3, [sl, #4]
  4055ca:	f003 0301 	and.w	r3, r3, #1
  4055ce:	431f      	orrs	r7, r3
  4055d0:	4640      	mov	r0, r8
  4055d2:	f8ca 7004 	str.w	r7, [sl, #4]
  4055d6:	f7ff f89b 	bl	404710 <__malloc_unlock>
  4055da:	e751      	b.n	405480 <_realloc_r+0xe4>
  4055dc:	682b      	ldr	r3, [r5, #0]
  4055de:	6003      	str	r3, [r0, #0]
  4055e0:	686b      	ldr	r3, [r5, #4]
  4055e2:	6043      	str	r3, [r0, #4]
  4055e4:	2a1b      	cmp	r2, #27
  4055e6:	d82d      	bhi.n	405644 <_realloc_r+0x2a8>
  4055e8:	f100 0308 	add.w	r3, r0, #8
  4055ec:	f105 0208 	add.w	r2, r5, #8
  4055f0:	e71b      	b.n	40542a <_realloc_r+0x8e>
  4055f2:	4632      	mov	r2, r6
  4055f4:	6829      	ldr	r1, [r5, #0]
  4055f6:	6011      	str	r1, [r2, #0]
  4055f8:	6869      	ldr	r1, [r5, #4]
  4055fa:	6051      	str	r1, [r2, #4]
  4055fc:	68a9      	ldr	r1, [r5, #8]
  4055fe:	6091      	str	r1, [r2, #8]
  405600:	461c      	mov	r4, r3
  405602:	46d1      	mov	r9, sl
  405604:	e72a      	b.n	40545c <_realloc_r+0xc0>
  405606:	eb09 0107 	add.w	r1, r9, r7
  40560a:	ebab 0b07 	sub.w	fp, fp, r7
  40560e:	f04b 0201 	orr.w	r2, fp, #1
  405612:	6099      	str	r1, [r3, #8]
  405614:	604a      	str	r2, [r1, #4]
  405616:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40561a:	f003 0301 	and.w	r3, r3, #1
  40561e:	431f      	orrs	r7, r3
  405620:	4640      	mov	r0, r8
  405622:	f845 7c04 	str.w	r7, [r5, #-4]
  405626:	f7ff f873 	bl	404710 <__malloc_unlock>
  40562a:	462e      	mov	r6, r5
  40562c:	e728      	b.n	405480 <_realloc_r+0xe4>
  40562e:	4629      	mov	r1, r5
  405630:	f7ff fe50 	bl	4052d4 <memmove>
  405634:	e6ff      	b.n	405436 <_realloc_r+0x9a>
  405636:	4629      	mov	r1, r5
  405638:	4630      	mov	r0, r6
  40563a:	461c      	mov	r4, r3
  40563c:	46d1      	mov	r9, sl
  40563e:	f7ff fe49 	bl	4052d4 <memmove>
  405642:	e70b      	b.n	40545c <_realloc_r+0xc0>
  405644:	68ab      	ldr	r3, [r5, #8]
  405646:	6083      	str	r3, [r0, #8]
  405648:	68eb      	ldr	r3, [r5, #12]
  40564a:	60c3      	str	r3, [r0, #12]
  40564c:	2a24      	cmp	r2, #36	; 0x24
  40564e:	d017      	beq.n	405680 <_realloc_r+0x2e4>
  405650:	f100 0310 	add.w	r3, r0, #16
  405654:	f105 0210 	add.w	r2, r5, #16
  405658:	e6e7      	b.n	40542a <_realloc_r+0x8e>
  40565a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40565e:	f023 0303 	bic.w	r3, r3, #3
  405662:	441c      	add	r4, r3
  405664:	462e      	mov	r6, r5
  405666:	e6f9      	b.n	40545c <_realloc_r+0xc0>
  405668:	68a9      	ldr	r1, [r5, #8]
  40566a:	f8ca 1010 	str.w	r1, [sl, #16]
  40566e:	68e9      	ldr	r1, [r5, #12]
  405670:	f8ca 1014 	str.w	r1, [sl, #20]
  405674:	2a24      	cmp	r2, #36	; 0x24
  405676:	d00c      	beq.n	405692 <_realloc_r+0x2f6>
  405678:	3510      	adds	r5, #16
  40567a:	f10a 0218 	add.w	r2, sl, #24
  40567e:	e7b9      	b.n	4055f4 <_realloc_r+0x258>
  405680:	692b      	ldr	r3, [r5, #16]
  405682:	6103      	str	r3, [r0, #16]
  405684:	696b      	ldr	r3, [r5, #20]
  405686:	6143      	str	r3, [r0, #20]
  405688:	f105 0218 	add.w	r2, r5, #24
  40568c:	f100 0318 	add.w	r3, r0, #24
  405690:	e6cb      	b.n	40542a <_realloc_r+0x8e>
  405692:	692a      	ldr	r2, [r5, #16]
  405694:	f8ca 2018 	str.w	r2, [sl, #24]
  405698:	696a      	ldr	r2, [r5, #20]
  40569a:	f8ca 201c 	str.w	r2, [sl, #28]
  40569e:	3518      	adds	r5, #24
  4056a0:	f10a 0220 	add.w	r2, sl, #32
  4056a4:	e7a6      	b.n	4055f4 <_realloc_r+0x258>
  4056a6:	4632      	mov	r2, r6
  4056a8:	e77f      	b.n	4055aa <_realloc_r+0x20e>
  4056aa:	4629      	mov	r1, r5
  4056ac:	4630      	mov	r0, r6
  4056ae:	9301      	str	r3, [sp, #4]
  4056b0:	f7ff fe10 	bl	4052d4 <memmove>
  4056b4:	9b01      	ldr	r3, [sp, #4]
  4056b6:	e77e      	b.n	4055b6 <_realloc_r+0x21a>
  4056b8:	68a9      	ldr	r1, [r5, #8]
  4056ba:	f8ca 1010 	str.w	r1, [sl, #16]
  4056be:	68e9      	ldr	r1, [r5, #12]
  4056c0:	f8ca 1014 	str.w	r1, [sl, #20]
  4056c4:	2a24      	cmp	r2, #36	; 0x24
  4056c6:	d003      	beq.n	4056d0 <_realloc_r+0x334>
  4056c8:	3510      	adds	r5, #16
  4056ca:	f10a 0218 	add.w	r2, sl, #24
  4056ce:	e76c      	b.n	4055aa <_realloc_r+0x20e>
  4056d0:	692a      	ldr	r2, [r5, #16]
  4056d2:	f8ca 2018 	str.w	r2, [sl, #24]
  4056d6:	696a      	ldr	r2, [r5, #20]
  4056d8:	f8ca 201c 	str.w	r2, [sl, #28]
  4056dc:	3518      	adds	r5, #24
  4056de:	f10a 0220 	add.w	r2, sl, #32
  4056e2:	e762      	b.n	4055aa <_realloc_r+0x20e>
  4056e4:	20400454 	.word	0x20400454

004056e8 <__ascii_wctomb>:
  4056e8:	b121      	cbz	r1, 4056f4 <__ascii_wctomb+0xc>
  4056ea:	2aff      	cmp	r2, #255	; 0xff
  4056ec:	d804      	bhi.n	4056f8 <__ascii_wctomb+0x10>
  4056ee:	700a      	strb	r2, [r1, #0]
  4056f0:	2001      	movs	r0, #1
  4056f2:	4770      	bx	lr
  4056f4:	4608      	mov	r0, r1
  4056f6:	4770      	bx	lr
  4056f8:	238a      	movs	r3, #138	; 0x8a
  4056fa:	6003      	str	r3, [r0, #0]
  4056fc:	f04f 30ff 	mov.w	r0, #4294967295
  405700:	4770      	bx	lr
  405702:	bf00      	nop

00405704 <__aeabi_drsub>:
  405704:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405708:	e002      	b.n	405710 <__adddf3>
  40570a:	bf00      	nop

0040570c <__aeabi_dsub>:
  40570c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405710 <__adddf3>:
  405710:	b530      	push	{r4, r5, lr}
  405712:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405716:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40571a:	ea94 0f05 	teq	r4, r5
  40571e:	bf08      	it	eq
  405720:	ea90 0f02 	teqeq	r0, r2
  405724:	bf1f      	itttt	ne
  405726:	ea54 0c00 	orrsne.w	ip, r4, r0
  40572a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40572e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405732:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405736:	f000 80e2 	beq.w	4058fe <__adddf3+0x1ee>
  40573a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40573e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405742:	bfb8      	it	lt
  405744:	426d      	neglt	r5, r5
  405746:	dd0c      	ble.n	405762 <__adddf3+0x52>
  405748:	442c      	add	r4, r5
  40574a:	ea80 0202 	eor.w	r2, r0, r2
  40574e:	ea81 0303 	eor.w	r3, r1, r3
  405752:	ea82 0000 	eor.w	r0, r2, r0
  405756:	ea83 0101 	eor.w	r1, r3, r1
  40575a:	ea80 0202 	eor.w	r2, r0, r2
  40575e:	ea81 0303 	eor.w	r3, r1, r3
  405762:	2d36      	cmp	r5, #54	; 0x36
  405764:	bf88      	it	hi
  405766:	bd30      	pophi	{r4, r5, pc}
  405768:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40576c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405770:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405774:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405778:	d002      	beq.n	405780 <__adddf3+0x70>
  40577a:	4240      	negs	r0, r0
  40577c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405780:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405784:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405788:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40578c:	d002      	beq.n	405794 <__adddf3+0x84>
  40578e:	4252      	negs	r2, r2
  405790:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405794:	ea94 0f05 	teq	r4, r5
  405798:	f000 80a7 	beq.w	4058ea <__adddf3+0x1da>
  40579c:	f1a4 0401 	sub.w	r4, r4, #1
  4057a0:	f1d5 0e20 	rsbs	lr, r5, #32
  4057a4:	db0d      	blt.n	4057c2 <__adddf3+0xb2>
  4057a6:	fa02 fc0e 	lsl.w	ip, r2, lr
  4057aa:	fa22 f205 	lsr.w	r2, r2, r5
  4057ae:	1880      	adds	r0, r0, r2
  4057b0:	f141 0100 	adc.w	r1, r1, #0
  4057b4:	fa03 f20e 	lsl.w	r2, r3, lr
  4057b8:	1880      	adds	r0, r0, r2
  4057ba:	fa43 f305 	asr.w	r3, r3, r5
  4057be:	4159      	adcs	r1, r3
  4057c0:	e00e      	b.n	4057e0 <__adddf3+0xd0>
  4057c2:	f1a5 0520 	sub.w	r5, r5, #32
  4057c6:	f10e 0e20 	add.w	lr, lr, #32
  4057ca:	2a01      	cmp	r2, #1
  4057cc:	fa03 fc0e 	lsl.w	ip, r3, lr
  4057d0:	bf28      	it	cs
  4057d2:	f04c 0c02 	orrcs.w	ip, ip, #2
  4057d6:	fa43 f305 	asr.w	r3, r3, r5
  4057da:	18c0      	adds	r0, r0, r3
  4057dc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4057e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4057e4:	d507      	bpl.n	4057f6 <__adddf3+0xe6>
  4057e6:	f04f 0e00 	mov.w	lr, #0
  4057ea:	f1dc 0c00 	rsbs	ip, ip, #0
  4057ee:	eb7e 0000 	sbcs.w	r0, lr, r0
  4057f2:	eb6e 0101 	sbc.w	r1, lr, r1
  4057f6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4057fa:	d31b      	bcc.n	405834 <__adddf3+0x124>
  4057fc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405800:	d30c      	bcc.n	40581c <__adddf3+0x10c>
  405802:	0849      	lsrs	r1, r1, #1
  405804:	ea5f 0030 	movs.w	r0, r0, rrx
  405808:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40580c:	f104 0401 	add.w	r4, r4, #1
  405810:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405814:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405818:	f080 809a 	bcs.w	405950 <__adddf3+0x240>
  40581c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405820:	bf08      	it	eq
  405822:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405826:	f150 0000 	adcs.w	r0, r0, #0
  40582a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40582e:	ea41 0105 	orr.w	r1, r1, r5
  405832:	bd30      	pop	{r4, r5, pc}
  405834:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405838:	4140      	adcs	r0, r0
  40583a:	eb41 0101 	adc.w	r1, r1, r1
  40583e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405842:	f1a4 0401 	sub.w	r4, r4, #1
  405846:	d1e9      	bne.n	40581c <__adddf3+0x10c>
  405848:	f091 0f00 	teq	r1, #0
  40584c:	bf04      	itt	eq
  40584e:	4601      	moveq	r1, r0
  405850:	2000      	moveq	r0, #0
  405852:	fab1 f381 	clz	r3, r1
  405856:	bf08      	it	eq
  405858:	3320      	addeq	r3, #32
  40585a:	f1a3 030b 	sub.w	r3, r3, #11
  40585e:	f1b3 0220 	subs.w	r2, r3, #32
  405862:	da0c      	bge.n	40587e <__adddf3+0x16e>
  405864:	320c      	adds	r2, #12
  405866:	dd08      	ble.n	40587a <__adddf3+0x16a>
  405868:	f102 0c14 	add.w	ip, r2, #20
  40586c:	f1c2 020c 	rsb	r2, r2, #12
  405870:	fa01 f00c 	lsl.w	r0, r1, ip
  405874:	fa21 f102 	lsr.w	r1, r1, r2
  405878:	e00c      	b.n	405894 <__adddf3+0x184>
  40587a:	f102 0214 	add.w	r2, r2, #20
  40587e:	bfd8      	it	le
  405880:	f1c2 0c20 	rsble	ip, r2, #32
  405884:	fa01 f102 	lsl.w	r1, r1, r2
  405888:	fa20 fc0c 	lsr.w	ip, r0, ip
  40588c:	bfdc      	itt	le
  40588e:	ea41 010c 	orrle.w	r1, r1, ip
  405892:	4090      	lslle	r0, r2
  405894:	1ae4      	subs	r4, r4, r3
  405896:	bfa2      	ittt	ge
  405898:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40589c:	4329      	orrge	r1, r5
  40589e:	bd30      	popge	{r4, r5, pc}
  4058a0:	ea6f 0404 	mvn.w	r4, r4
  4058a4:	3c1f      	subs	r4, #31
  4058a6:	da1c      	bge.n	4058e2 <__adddf3+0x1d2>
  4058a8:	340c      	adds	r4, #12
  4058aa:	dc0e      	bgt.n	4058ca <__adddf3+0x1ba>
  4058ac:	f104 0414 	add.w	r4, r4, #20
  4058b0:	f1c4 0220 	rsb	r2, r4, #32
  4058b4:	fa20 f004 	lsr.w	r0, r0, r4
  4058b8:	fa01 f302 	lsl.w	r3, r1, r2
  4058bc:	ea40 0003 	orr.w	r0, r0, r3
  4058c0:	fa21 f304 	lsr.w	r3, r1, r4
  4058c4:	ea45 0103 	orr.w	r1, r5, r3
  4058c8:	bd30      	pop	{r4, r5, pc}
  4058ca:	f1c4 040c 	rsb	r4, r4, #12
  4058ce:	f1c4 0220 	rsb	r2, r4, #32
  4058d2:	fa20 f002 	lsr.w	r0, r0, r2
  4058d6:	fa01 f304 	lsl.w	r3, r1, r4
  4058da:	ea40 0003 	orr.w	r0, r0, r3
  4058de:	4629      	mov	r1, r5
  4058e0:	bd30      	pop	{r4, r5, pc}
  4058e2:	fa21 f004 	lsr.w	r0, r1, r4
  4058e6:	4629      	mov	r1, r5
  4058e8:	bd30      	pop	{r4, r5, pc}
  4058ea:	f094 0f00 	teq	r4, #0
  4058ee:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4058f2:	bf06      	itte	eq
  4058f4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4058f8:	3401      	addeq	r4, #1
  4058fa:	3d01      	subne	r5, #1
  4058fc:	e74e      	b.n	40579c <__adddf3+0x8c>
  4058fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405902:	bf18      	it	ne
  405904:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405908:	d029      	beq.n	40595e <__adddf3+0x24e>
  40590a:	ea94 0f05 	teq	r4, r5
  40590e:	bf08      	it	eq
  405910:	ea90 0f02 	teqeq	r0, r2
  405914:	d005      	beq.n	405922 <__adddf3+0x212>
  405916:	ea54 0c00 	orrs.w	ip, r4, r0
  40591a:	bf04      	itt	eq
  40591c:	4619      	moveq	r1, r3
  40591e:	4610      	moveq	r0, r2
  405920:	bd30      	pop	{r4, r5, pc}
  405922:	ea91 0f03 	teq	r1, r3
  405926:	bf1e      	ittt	ne
  405928:	2100      	movne	r1, #0
  40592a:	2000      	movne	r0, #0
  40592c:	bd30      	popne	{r4, r5, pc}
  40592e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405932:	d105      	bne.n	405940 <__adddf3+0x230>
  405934:	0040      	lsls	r0, r0, #1
  405936:	4149      	adcs	r1, r1
  405938:	bf28      	it	cs
  40593a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40593e:	bd30      	pop	{r4, r5, pc}
  405940:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405944:	bf3c      	itt	cc
  405946:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  40594a:	bd30      	popcc	{r4, r5, pc}
  40594c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405950:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405954:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405958:	f04f 0000 	mov.w	r0, #0
  40595c:	bd30      	pop	{r4, r5, pc}
  40595e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405962:	bf1a      	itte	ne
  405964:	4619      	movne	r1, r3
  405966:	4610      	movne	r0, r2
  405968:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  40596c:	bf1c      	itt	ne
  40596e:	460b      	movne	r3, r1
  405970:	4602      	movne	r2, r0
  405972:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405976:	bf06      	itte	eq
  405978:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  40597c:	ea91 0f03 	teqeq	r1, r3
  405980:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405984:	bd30      	pop	{r4, r5, pc}
  405986:	bf00      	nop

00405988 <__aeabi_ui2d>:
  405988:	f090 0f00 	teq	r0, #0
  40598c:	bf04      	itt	eq
  40598e:	2100      	moveq	r1, #0
  405990:	4770      	bxeq	lr
  405992:	b530      	push	{r4, r5, lr}
  405994:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405998:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40599c:	f04f 0500 	mov.w	r5, #0
  4059a0:	f04f 0100 	mov.w	r1, #0
  4059a4:	e750      	b.n	405848 <__adddf3+0x138>
  4059a6:	bf00      	nop

004059a8 <__aeabi_i2d>:
  4059a8:	f090 0f00 	teq	r0, #0
  4059ac:	bf04      	itt	eq
  4059ae:	2100      	moveq	r1, #0
  4059b0:	4770      	bxeq	lr
  4059b2:	b530      	push	{r4, r5, lr}
  4059b4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4059b8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4059bc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4059c0:	bf48      	it	mi
  4059c2:	4240      	negmi	r0, r0
  4059c4:	f04f 0100 	mov.w	r1, #0
  4059c8:	e73e      	b.n	405848 <__adddf3+0x138>
  4059ca:	bf00      	nop

004059cc <__aeabi_f2d>:
  4059cc:	0042      	lsls	r2, r0, #1
  4059ce:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4059d2:	ea4f 0131 	mov.w	r1, r1, rrx
  4059d6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4059da:	bf1f      	itttt	ne
  4059dc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4059e0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4059e4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4059e8:	4770      	bxne	lr
  4059ea:	f092 0f00 	teq	r2, #0
  4059ee:	bf14      	ite	ne
  4059f0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4059f4:	4770      	bxeq	lr
  4059f6:	b530      	push	{r4, r5, lr}
  4059f8:	f44f 7460 	mov.w	r4, #896	; 0x380
  4059fc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405a00:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405a04:	e720      	b.n	405848 <__adddf3+0x138>
  405a06:	bf00      	nop

00405a08 <__aeabi_ul2d>:
  405a08:	ea50 0201 	orrs.w	r2, r0, r1
  405a0c:	bf08      	it	eq
  405a0e:	4770      	bxeq	lr
  405a10:	b530      	push	{r4, r5, lr}
  405a12:	f04f 0500 	mov.w	r5, #0
  405a16:	e00a      	b.n	405a2e <__aeabi_l2d+0x16>

00405a18 <__aeabi_l2d>:
  405a18:	ea50 0201 	orrs.w	r2, r0, r1
  405a1c:	bf08      	it	eq
  405a1e:	4770      	bxeq	lr
  405a20:	b530      	push	{r4, r5, lr}
  405a22:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405a26:	d502      	bpl.n	405a2e <__aeabi_l2d+0x16>
  405a28:	4240      	negs	r0, r0
  405a2a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405a2e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405a32:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405a36:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405a3a:	f43f aedc 	beq.w	4057f6 <__adddf3+0xe6>
  405a3e:	f04f 0203 	mov.w	r2, #3
  405a42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405a46:	bf18      	it	ne
  405a48:	3203      	addne	r2, #3
  405a4a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405a4e:	bf18      	it	ne
  405a50:	3203      	addne	r2, #3
  405a52:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405a56:	f1c2 0320 	rsb	r3, r2, #32
  405a5a:	fa00 fc03 	lsl.w	ip, r0, r3
  405a5e:	fa20 f002 	lsr.w	r0, r0, r2
  405a62:	fa01 fe03 	lsl.w	lr, r1, r3
  405a66:	ea40 000e 	orr.w	r0, r0, lr
  405a6a:	fa21 f102 	lsr.w	r1, r1, r2
  405a6e:	4414      	add	r4, r2
  405a70:	e6c1      	b.n	4057f6 <__adddf3+0xe6>
  405a72:	bf00      	nop

00405a74 <__aeabi_dmul>:
  405a74:	b570      	push	{r4, r5, r6, lr}
  405a76:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405a7a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405a7e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405a82:	bf1d      	ittte	ne
  405a84:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405a88:	ea94 0f0c 	teqne	r4, ip
  405a8c:	ea95 0f0c 	teqne	r5, ip
  405a90:	f000 f8de 	bleq	405c50 <__aeabi_dmul+0x1dc>
  405a94:	442c      	add	r4, r5
  405a96:	ea81 0603 	eor.w	r6, r1, r3
  405a9a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405a9e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405aa2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405aa6:	bf18      	it	ne
  405aa8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405aac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405ab0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405ab4:	d038      	beq.n	405b28 <__aeabi_dmul+0xb4>
  405ab6:	fba0 ce02 	umull	ip, lr, r0, r2
  405aba:	f04f 0500 	mov.w	r5, #0
  405abe:	fbe1 e502 	umlal	lr, r5, r1, r2
  405ac2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405ac6:	fbe0 e503 	umlal	lr, r5, r0, r3
  405aca:	f04f 0600 	mov.w	r6, #0
  405ace:	fbe1 5603 	umlal	r5, r6, r1, r3
  405ad2:	f09c 0f00 	teq	ip, #0
  405ad6:	bf18      	it	ne
  405ad8:	f04e 0e01 	orrne.w	lr, lr, #1
  405adc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405ae0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405ae4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405ae8:	d204      	bcs.n	405af4 <__aeabi_dmul+0x80>
  405aea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405aee:	416d      	adcs	r5, r5
  405af0:	eb46 0606 	adc.w	r6, r6, r6
  405af4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405af8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405afc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405b00:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405b04:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405b08:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405b0c:	bf88      	it	hi
  405b0e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405b12:	d81e      	bhi.n	405b52 <__aeabi_dmul+0xde>
  405b14:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405b18:	bf08      	it	eq
  405b1a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405b1e:	f150 0000 	adcs.w	r0, r0, #0
  405b22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405b26:	bd70      	pop	{r4, r5, r6, pc}
  405b28:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405b2c:	ea46 0101 	orr.w	r1, r6, r1
  405b30:	ea40 0002 	orr.w	r0, r0, r2
  405b34:	ea81 0103 	eor.w	r1, r1, r3
  405b38:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405b3c:	bfc2      	ittt	gt
  405b3e:	ebd4 050c 	rsbsgt	r5, r4, ip
  405b42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405b46:	bd70      	popgt	{r4, r5, r6, pc}
  405b48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405b4c:	f04f 0e00 	mov.w	lr, #0
  405b50:	3c01      	subs	r4, #1
  405b52:	f300 80ab 	bgt.w	405cac <__aeabi_dmul+0x238>
  405b56:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405b5a:	bfde      	ittt	le
  405b5c:	2000      	movle	r0, #0
  405b5e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405b62:	bd70      	pople	{r4, r5, r6, pc}
  405b64:	f1c4 0400 	rsb	r4, r4, #0
  405b68:	3c20      	subs	r4, #32
  405b6a:	da35      	bge.n	405bd8 <__aeabi_dmul+0x164>
  405b6c:	340c      	adds	r4, #12
  405b6e:	dc1b      	bgt.n	405ba8 <__aeabi_dmul+0x134>
  405b70:	f104 0414 	add.w	r4, r4, #20
  405b74:	f1c4 0520 	rsb	r5, r4, #32
  405b78:	fa00 f305 	lsl.w	r3, r0, r5
  405b7c:	fa20 f004 	lsr.w	r0, r0, r4
  405b80:	fa01 f205 	lsl.w	r2, r1, r5
  405b84:	ea40 0002 	orr.w	r0, r0, r2
  405b88:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405b8c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405b90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405b94:	fa21 f604 	lsr.w	r6, r1, r4
  405b98:	eb42 0106 	adc.w	r1, r2, r6
  405b9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405ba0:	bf08      	it	eq
  405ba2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405ba6:	bd70      	pop	{r4, r5, r6, pc}
  405ba8:	f1c4 040c 	rsb	r4, r4, #12
  405bac:	f1c4 0520 	rsb	r5, r4, #32
  405bb0:	fa00 f304 	lsl.w	r3, r0, r4
  405bb4:	fa20 f005 	lsr.w	r0, r0, r5
  405bb8:	fa01 f204 	lsl.w	r2, r1, r4
  405bbc:	ea40 0002 	orr.w	r0, r0, r2
  405bc0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405bc4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405bc8:	f141 0100 	adc.w	r1, r1, #0
  405bcc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405bd0:	bf08      	it	eq
  405bd2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405bd6:	bd70      	pop	{r4, r5, r6, pc}
  405bd8:	f1c4 0520 	rsb	r5, r4, #32
  405bdc:	fa00 f205 	lsl.w	r2, r0, r5
  405be0:	ea4e 0e02 	orr.w	lr, lr, r2
  405be4:	fa20 f304 	lsr.w	r3, r0, r4
  405be8:	fa01 f205 	lsl.w	r2, r1, r5
  405bec:	ea43 0302 	orr.w	r3, r3, r2
  405bf0:	fa21 f004 	lsr.w	r0, r1, r4
  405bf4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405bf8:	fa21 f204 	lsr.w	r2, r1, r4
  405bfc:	ea20 0002 	bic.w	r0, r0, r2
  405c00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405c04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405c08:	bf08      	it	eq
  405c0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405c0e:	bd70      	pop	{r4, r5, r6, pc}
  405c10:	f094 0f00 	teq	r4, #0
  405c14:	d10f      	bne.n	405c36 <__aeabi_dmul+0x1c2>
  405c16:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405c1a:	0040      	lsls	r0, r0, #1
  405c1c:	eb41 0101 	adc.w	r1, r1, r1
  405c20:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405c24:	bf08      	it	eq
  405c26:	3c01      	subeq	r4, #1
  405c28:	d0f7      	beq.n	405c1a <__aeabi_dmul+0x1a6>
  405c2a:	ea41 0106 	orr.w	r1, r1, r6
  405c2e:	f095 0f00 	teq	r5, #0
  405c32:	bf18      	it	ne
  405c34:	4770      	bxne	lr
  405c36:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405c3a:	0052      	lsls	r2, r2, #1
  405c3c:	eb43 0303 	adc.w	r3, r3, r3
  405c40:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405c44:	bf08      	it	eq
  405c46:	3d01      	subeq	r5, #1
  405c48:	d0f7      	beq.n	405c3a <__aeabi_dmul+0x1c6>
  405c4a:	ea43 0306 	orr.w	r3, r3, r6
  405c4e:	4770      	bx	lr
  405c50:	ea94 0f0c 	teq	r4, ip
  405c54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405c58:	bf18      	it	ne
  405c5a:	ea95 0f0c 	teqne	r5, ip
  405c5e:	d00c      	beq.n	405c7a <__aeabi_dmul+0x206>
  405c60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405c64:	bf18      	it	ne
  405c66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405c6a:	d1d1      	bne.n	405c10 <__aeabi_dmul+0x19c>
  405c6c:	ea81 0103 	eor.w	r1, r1, r3
  405c70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405c74:	f04f 0000 	mov.w	r0, #0
  405c78:	bd70      	pop	{r4, r5, r6, pc}
  405c7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405c7e:	bf06      	itte	eq
  405c80:	4610      	moveq	r0, r2
  405c82:	4619      	moveq	r1, r3
  405c84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405c88:	d019      	beq.n	405cbe <__aeabi_dmul+0x24a>
  405c8a:	ea94 0f0c 	teq	r4, ip
  405c8e:	d102      	bne.n	405c96 <__aeabi_dmul+0x222>
  405c90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405c94:	d113      	bne.n	405cbe <__aeabi_dmul+0x24a>
  405c96:	ea95 0f0c 	teq	r5, ip
  405c9a:	d105      	bne.n	405ca8 <__aeabi_dmul+0x234>
  405c9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405ca0:	bf1c      	itt	ne
  405ca2:	4610      	movne	r0, r2
  405ca4:	4619      	movne	r1, r3
  405ca6:	d10a      	bne.n	405cbe <__aeabi_dmul+0x24a>
  405ca8:	ea81 0103 	eor.w	r1, r1, r3
  405cac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405cb0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405cb4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405cb8:	f04f 0000 	mov.w	r0, #0
  405cbc:	bd70      	pop	{r4, r5, r6, pc}
  405cbe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405cc2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405cc6:	bd70      	pop	{r4, r5, r6, pc}

00405cc8 <__aeabi_ddiv>:
  405cc8:	b570      	push	{r4, r5, r6, lr}
  405cca:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405cce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405cd2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405cd6:	bf1d      	ittte	ne
  405cd8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405cdc:	ea94 0f0c 	teqne	r4, ip
  405ce0:	ea95 0f0c 	teqne	r5, ip
  405ce4:	f000 f8a7 	bleq	405e36 <__aeabi_ddiv+0x16e>
  405ce8:	eba4 0405 	sub.w	r4, r4, r5
  405cec:	ea81 0e03 	eor.w	lr, r1, r3
  405cf0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405cf4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405cf8:	f000 8088 	beq.w	405e0c <__aeabi_ddiv+0x144>
  405cfc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405d00:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405d04:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405d08:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405d0c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405d10:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405d14:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405d18:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405d1c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405d20:	429d      	cmp	r5, r3
  405d22:	bf08      	it	eq
  405d24:	4296      	cmpeq	r6, r2
  405d26:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405d2a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405d2e:	d202      	bcs.n	405d36 <__aeabi_ddiv+0x6e>
  405d30:	085b      	lsrs	r3, r3, #1
  405d32:	ea4f 0232 	mov.w	r2, r2, rrx
  405d36:	1ab6      	subs	r6, r6, r2
  405d38:	eb65 0503 	sbc.w	r5, r5, r3
  405d3c:	085b      	lsrs	r3, r3, #1
  405d3e:	ea4f 0232 	mov.w	r2, r2, rrx
  405d42:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405d46:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405d4a:	ebb6 0e02 	subs.w	lr, r6, r2
  405d4e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d52:	bf22      	ittt	cs
  405d54:	1ab6      	subcs	r6, r6, r2
  405d56:	4675      	movcs	r5, lr
  405d58:	ea40 000c 	orrcs.w	r0, r0, ip
  405d5c:	085b      	lsrs	r3, r3, #1
  405d5e:	ea4f 0232 	mov.w	r2, r2, rrx
  405d62:	ebb6 0e02 	subs.w	lr, r6, r2
  405d66:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d6a:	bf22      	ittt	cs
  405d6c:	1ab6      	subcs	r6, r6, r2
  405d6e:	4675      	movcs	r5, lr
  405d70:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405d74:	085b      	lsrs	r3, r3, #1
  405d76:	ea4f 0232 	mov.w	r2, r2, rrx
  405d7a:	ebb6 0e02 	subs.w	lr, r6, r2
  405d7e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d82:	bf22      	ittt	cs
  405d84:	1ab6      	subcs	r6, r6, r2
  405d86:	4675      	movcs	r5, lr
  405d88:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405d8c:	085b      	lsrs	r3, r3, #1
  405d8e:	ea4f 0232 	mov.w	r2, r2, rrx
  405d92:	ebb6 0e02 	subs.w	lr, r6, r2
  405d96:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d9a:	bf22      	ittt	cs
  405d9c:	1ab6      	subcs	r6, r6, r2
  405d9e:	4675      	movcs	r5, lr
  405da0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405da4:	ea55 0e06 	orrs.w	lr, r5, r6
  405da8:	d018      	beq.n	405ddc <__aeabi_ddiv+0x114>
  405daa:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405dae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405db2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405db6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405dba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405dbe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405dc2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405dc6:	d1c0      	bne.n	405d4a <__aeabi_ddiv+0x82>
  405dc8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405dcc:	d10b      	bne.n	405de6 <__aeabi_ddiv+0x11e>
  405dce:	ea41 0100 	orr.w	r1, r1, r0
  405dd2:	f04f 0000 	mov.w	r0, #0
  405dd6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405dda:	e7b6      	b.n	405d4a <__aeabi_ddiv+0x82>
  405ddc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405de0:	bf04      	itt	eq
  405de2:	4301      	orreq	r1, r0
  405de4:	2000      	moveq	r0, #0
  405de6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405dea:	bf88      	it	hi
  405dec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405df0:	f63f aeaf 	bhi.w	405b52 <__aeabi_dmul+0xde>
  405df4:	ebb5 0c03 	subs.w	ip, r5, r3
  405df8:	bf04      	itt	eq
  405dfa:	ebb6 0c02 	subseq.w	ip, r6, r2
  405dfe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405e02:	f150 0000 	adcs.w	r0, r0, #0
  405e06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405e0a:	bd70      	pop	{r4, r5, r6, pc}
  405e0c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405e10:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405e14:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405e18:	bfc2      	ittt	gt
  405e1a:	ebd4 050c 	rsbsgt	r5, r4, ip
  405e1e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405e22:	bd70      	popgt	{r4, r5, r6, pc}
  405e24:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405e28:	f04f 0e00 	mov.w	lr, #0
  405e2c:	3c01      	subs	r4, #1
  405e2e:	e690      	b.n	405b52 <__aeabi_dmul+0xde>
  405e30:	ea45 0e06 	orr.w	lr, r5, r6
  405e34:	e68d      	b.n	405b52 <__aeabi_dmul+0xde>
  405e36:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405e3a:	ea94 0f0c 	teq	r4, ip
  405e3e:	bf08      	it	eq
  405e40:	ea95 0f0c 	teqeq	r5, ip
  405e44:	f43f af3b 	beq.w	405cbe <__aeabi_dmul+0x24a>
  405e48:	ea94 0f0c 	teq	r4, ip
  405e4c:	d10a      	bne.n	405e64 <__aeabi_ddiv+0x19c>
  405e4e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405e52:	f47f af34 	bne.w	405cbe <__aeabi_dmul+0x24a>
  405e56:	ea95 0f0c 	teq	r5, ip
  405e5a:	f47f af25 	bne.w	405ca8 <__aeabi_dmul+0x234>
  405e5e:	4610      	mov	r0, r2
  405e60:	4619      	mov	r1, r3
  405e62:	e72c      	b.n	405cbe <__aeabi_dmul+0x24a>
  405e64:	ea95 0f0c 	teq	r5, ip
  405e68:	d106      	bne.n	405e78 <__aeabi_ddiv+0x1b0>
  405e6a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405e6e:	f43f aefd 	beq.w	405c6c <__aeabi_dmul+0x1f8>
  405e72:	4610      	mov	r0, r2
  405e74:	4619      	mov	r1, r3
  405e76:	e722      	b.n	405cbe <__aeabi_dmul+0x24a>
  405e78:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405e7c:	bf18      	it	ne
  405e7e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405e82:	f47f aec5 	bne.w	405c10 <__aeabi_dmul+0x19c>
  405e86:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  405e8a:	f47f af0d 	bne.w	405ca8 <__aeabi_dmul+0x234>
  405e8e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405e92:	f47f aeeb 	bne.w	405c6c <__aeabi_dmul+0x1f8>
  405e96:	e712      	b.n	405cbe <__aeabi_dmul+0x24a>

00405e98 <__gedf2>:
  405e98:	f04f 3cff 	mov.w	ip, #4294967295
  405e9c:	e006      	b.n	405eac <__cmpdf2+0x4>
  405e9e:	bf00      	nop

00405ea0 <__ledf2>:
  405ea0:	f04f 0c01 	mov.w	ip, #1
  405ea4:	e002      	b.n	405eac <__cmpdf2+0x4>
  405ea6:	bf00      	nop

00405ea8 <__cmpdf2>:
  405ea8:	f04f 0c01 	mov.w	ip, #1
  405eac:	f84d cd04 	str.w	ip, [sp, #-4]!
  405eb0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405eb4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405eb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405ebc:	bf18      	it	ne
  405ebe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405ec2:	d01b      	beq.n	405efc <__cmpdf2+0x54>
  405ec4:	b001      	add	sp, #4
  405ec6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405eca:	bf0c      	ite	eq
  405ecc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405ed0:	ea91 0f03 	teqne	r1, r3
  405ed4:	bf02      	ittt	eq
  405ed6:	ea90 0f02 	teqeq	r0, r2
  405eda:	2000      	moveq	r0, #0
  405edc:	4770      	bxeq	lr
  405ede:	f110 0f00 	cmn.w	r0, #0
  405ee2:	ea91 0f03 	teq	r1, r3
  405ee6:	bf58      	it	pl
  405ee8:	4299      	cmppl	r1, r3
  405eea:	bf08      	it	eq
  405eec:	4290      	cmpeq	r0, r2
  405eee:	bf2c      	ite	cs
  405ef0:	17d8      	asrcs	r0, r3, #31
  405ef2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405ef6:	f040 0001 	orr.w	r0, r0, #1
  405efa:	4770      	bx	lr
  405efc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405f00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f04:	d102      	bne.n	405f0c <__cmpdf2+0x64>
  405f06:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405f0a:	d107      	bne.n	405f1c <__cmpdf2+0x74>
  405f0c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405f10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f14:	d1d6      	bne.n	405ec4 <__cmpdf2+0x1c>
  405f16:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405f1a:	d0d3      	beq.n	405ec4 <__cmpdf2+0x1c>
  405f1c:	f85d 0b04 	ldr.w	r0, [sp], #4
  405f20:	4770      	bx	lr
  405f22:	bf00      	nop

00405f24 <__aeabi_cdrcmple>:
  405f24:	4684      	mov	ip, r0
  405f26:	4610      	mov	r0, r2
  405f28:	4662      	mov	r2, ip
  405f2a:	468c      	mov	ip, r1
  405f2c:	4619      	mov	r1, r3
  405f2e:	4663      	mov	r3, ip
  405f30:	e000      	b.n	405f34 <__aeabi_cdcmpeq>
  405f32:	bf00      	nop

00405f34 <__aeabi_cdcmpeq>:
  405f34:	b501      	push	{r0, lr}
  405f36:	f7ff ffb7 	bl	405ea8 <__cmpdf2>
  405f3a:	2800      	cmp	r0, #0
  405f3c:	bf48      	it	mi
  405f3e:	f110 0f00 	cmnmi.w	r0, #0
  405f42:	bd01      	pop	{r0, pc}

00405f44 <__aeabi_dcmpeq>:
  405f44:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f48:	f7ff fff4 	bl	405f34 <__aeabi_cdcmpeq>
  405f4c:	bf0c      	ite	eq
  405f4e:	2001      	moveq	r0, #1
  405f50:	2000      	movne	r0, #0
  405f52:	f85d fb08 	ldr.w	pc, [sp], #8
  405f56:	bf00      	nop

00405f58 <__aeabi_dcmplt>:
  405f58:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f5c:	f7ff ffea 	bl	405f34 <__aeabi_cdcmpeq>
  405f60:	bf34      	ite	cc
  405f62:	2001      	movcc	r0, #1
  405f64:	2000      	movcs	r0, #0
  405f66:	f85d fb08 	ldr.w	pc, [sp], #8
  405f6a:	bf00      	nop

00405f6c <__aeabi_dcmple>:
  405f6c:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f70:	f7ff ffe0 	bl	405f34 <__aeabi_cdcmpeq>
  405f74:	bf94      	ite	ls
  405f76:	2001      	movls	r0, #1
  405f78:	2000      	movhi	r0, #0
  405f7a:	f85d fb08 	ldr.w	pc, [sp], #8
  405f7e:	bf00      	nop

00405f80 <__aeabi_dcmpge>:
  405f80:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f84:	f7ff ffce 	bl	405f24 <__aeabi_cdrcmple>
  405f88:	bf94      	ite	ls
  405f8a:	2001      	movls	r0, #1
  405f8c:	2000      	movhi	r0, #0
  405f8e:	f85d fb08 	ldr.w	pc, [sp], #8
  405f92:	bf00      	nop

00405f94 <__aeabi_dcmpgt>:
  405f94:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f98:	f7ff ffc4 	bl	405f24 <__aeabi_cdrcmple>
  405f9c:	bf34      	ite	cc
  405f9e:	2001      	movcc	r0, #1
  405fa0:	2000      	movcs	r0, #0
  405fa2:	f85d fb08 	ldr.w	pc, [sp], #8
  405fa6:	bf00      	nop

00405fa8 <__aeabi_dcmpun>:
  405fa8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405fac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fb0:	d102      	bne.n	405fb8 <__aeabi_dcmpun+0x10>
  405fb2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405fb6:	d10a      	bne.n	405fce <__aeabi_dcmpun+0x26>
  405fb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405fbc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fc0:	d102      	bne.n	405fc8 <__aeabi_dcmpun+0x20>
  405fc2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405fc6:	d102      	bne.n	405fce <__aeabi_dcmpun+0x26>
  405fc8:	f04f 0000 	mov.w	r0, #0
  405fcc:	4770      	bx	lr
  405fce:	f04f 0001 	mov.w	r0, #1
  405fd2:	4770      	bx	lr

00405fd4 <__aeabi_d2iz>:
  405fd4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405fd8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405fdc:	d215      	bcs.n	40600a <__aeabi_d2iz+0x36>
  405fde:	d511      	bpl.n	406004 <__aeabi_d2iz+0x30>
  405fe0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405fe4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405fe8:	d912      	bls.n	406010 <__aeabi_d2iz+0x3c>
  405fea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405fee:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405ff2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405ff6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405ffa:	fa23 f002 	lsr.w	r0, r3, r2
  405ffe:	bf18      	it	ne
  406000:	4240      	negne	r0, r0
  406002:	4770      	bx	lr
  406004:	f04f 0000 	mov.w	r0, #0
  406008:	4770      	bx	lr
  40600a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40600e:	d105      	bne.n	40601c <__aeabi_d2iz+0x48>
  406010:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406014:	bf08      	it	eq
  406016:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40601a:	4770      	bx	lr
  40601c:	f04f 0000 	mov.w	r0, #0
  406020:	4770      	bx	lr
  406022:	bf00      	nop

00406024 <__aeabi_uldivmod>:
  406024:	b953      	cbnz	r3, 40603c <__aeabi_uldivmod+0x18>
  406026:	b94a      	cbnz	r2, 40603c <__aeabi_uldivmod+0x18>
  406028:	2900      	cmp	r1, #0
  40602a:	bf08      	it	eq
  40602c:	2800      	cmpeq	r0, #0
  40602e:	bf1c      	itt	ne
  406030:	f04f 31ff 	movne.w	r1, #4294967295
  406034:	f04f 30ff 	movne.w	r0, #4294967295
  406038:	f000 b97a 	b.w	406330 <__aeabi_idiv0>
  40603c:	f1ad 0c08 	sub.w	ip, sp, #8
  406040:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406044:	f000 f806 	bl	406054 <__udivmoddi4>
  406048:	f8dd e004 	ldr.w	lr, [sp, #4]
  40604c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406050:	b004      	add	sp, #16
  406052:	4770      	bx	lr

00406054 <__udivmoddi4>:
  406054:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406058:	468c      	mov	ip, r1
  40605a:	460d      	mov	r5, r1
  40605c:	4604      	mov	r4, r0
  40605e:	9e08      	ldr	r6, [sp, #32]
  406060:	2b00      	cmp	r3, #0
  406062:	d151      	bne.n	406108 <__udivmoddi4+0xb4>
  406064:	428a      	cmp	r2, r1
  406066:	4617      	mov	r7, r2
  406068:	d96d      	bls.n	406146 <__udivmoddi4+0xf2>
  40606a:	fab2 fe82 	clz	lr, r2
  40606e:	f1be 0f00 	cmp.w	lr, #0
  406072:	d00b      	beq.n	40608c <__udivmoddi4+0x38>
  406074:	f1ce 0c20 	rsb	ip, lr, #32
  406078:	fa01 f50e 	lsl.w	r5, r1, lr
  40607c:	fa20 fc0c 	lsr.w	ip, r0, ip
  406080:	fa02 f70e 	lsl.w	r7, r2, lr
  406084:	ea4c 0c05 	orr.w	ip, ip, r5
  406088:	fa00 f40e 	lsl.w	r4, r0, lr
  40608c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406090:	0c25      	lsrs	r5, r4, #16
  406092:	fbbc f8fa 	udiv	r8, ip, sl
  406096:	fa1f f987 	uxth.w	r9, r7
  40609a:	fb0a cc18 	mls	ip, sl, r8, ip
  40609e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4060a2:	fb08 f309 	mul.w	r3, r8, r9
  4060a6:	42ab      	cmp	r3, r5
  4060a8:	d90a      	bls.n	4060c0 <__udivmoddi4+0x6c>
  4060aa:	19ed      	adds	r5, r5, r7
  4060ac:	f108 32ff 	add.w	r2, r8, #4294967295
  4060b0:	f080 8123 	bcs.w	4062fa <__udivmoddi4+0x2a6>
  4060b4:	42ab      	cmp	r3, r5
  4060b6:	f240 8120 	bls.w	4062fa <__udivmoddi4+0x2a6>
  4060ba:	f1a8 0802 	sub.w	r8, r8, #2
  4060be:	443d      	add	r5, r7
  4060c0:	1aed      	subs	r5, r5, r3
  4060c2:	b2a4      	uxth	r4, r4
  4060c4:	fbb5 f0fa 	udiv	r0, r5, sl
  4060c8:	fb0a 5510 	mls	r5, sl, r0, r5
  4060cc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4060d0:	fb00 f909 	mul.w	r9, r0, r9
  4060d4:	45a1      	cmp	r9, r4
  4060d6:	d909      	bls.n	4060ec <__udivmoddi4+0x98>
  4060d8:	19e4      	adds	r4, r4, r7
  4060da:	f100 33ff 	add.w	r3, r0, #4294967295
  4060de:	f080 810a 	bcs.w	4062f6 <__udivmoddi4+0x2a2>
  4060e2:	45a1      	cmp	r9, r4
  4060e4:	f240 8107 	bls.w	4062f6 <__udivmoddi4+0x2a2>
  4060e8:	3802      	subs	r0, #2
  4060ea:	443c      	add	r4, r7
  4060ec:	eba4 0409 	sub.w	r4, r4, r9
  4060f0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4060f4:	2100      	movs	r1, #0
  4060f6:	2e00      	cmp	r6, #0
  4060f8:	d061      	beq.n	4061be <__udivmoddi4+0x16a>
  4060fa:	fa24 f40e 	lsr.w	r4, r4, lr
  4060fe:	2300      	movs	r3, #0
  406100:	6034      	str	r4, [r6, #0]
  406102:	6073      	str	r3, [r6, #4]
  406104:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406108:	428b      	cmp	r3, r1
  40610a:	d907      	bls.n	40611c <__udivmoddi4+0xc8>
  40610c:	2e00      	cmp	r6, #0
  40610e:	d054      	beq.n	4061ba <__udivmoddi4+0x166>
  406110:	2100      	movs	r1, #0
  406112:	e886 0021 	stmia.w	r6, {r0, r5}
  406116:	4608      	mov	r0, r1
  406118:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40611c:	fab3 f183 	clz	r1, r3
  406120:	2900      	cmp	r1, #0
  406122:	f040 808e 	bne.w	406242 <__udivmoddi4+0x1ee>
  406126:	42ab      	cmp	r3, r5
  406128:	d302      	bcc.n	406130 <__udivmoddi4+0xdc>
  40612a:	4282      	cmp	r2, r0
  40612c:	f200 80fa 	bhi.w	406324 <__udivmoddi4+0x2d0>
  406130:	1a84      	subs	r4, r0, r2
  406132:	eb65 0503 	sbc.w	r5, r5, r3
  406136:	2001      	movs	r0, #1
  406138:	46ac      	mov	ip, r5
  40613a:	2e00      	cmp	r6, #0
  40613c:	d03f      	beq.n	4061be <__udivmoddi4+0x16a>
  40613e:	e886 1010 	stmia.w	r6, {r4, ip}
  406142:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406146:	b912      	cbnz	r2, 40614e <__udivmoddi4+0xfa>
  406148:	2701      	movs	r7, #1
  40614a:	fbb7 f7f2 	udiv	r7, r7, r2
  40614e:	fab7 fe87 	clz	lr, r7
  406152:	f1be 0f00 	cmp.w	lr, #0
  406156:	d134      	bne.n	4061c2 <__udivmoddi4+0x16e>
  406158:	1beb      	subs	r3, r5, r7
  40615a:	0c3a      	lsrs	r2, r7, #16
  40615c:	fa1f fc87 	uxth.w	ip, r7
  406160:	2101      	movs	r1, #1
  406162:	fbb3 f8f2 	udiv	r8, r3, r2
  406166:	0c25      	lsrs	r5, r4, #16
  406168:	fb02 3318 	mls	r3, r2, r8, r3
  40616c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406170:	fb0c f308 	mul.w	r3, ip, r8
  406174:	42ab      	cmp	r3, r5
  406176:	d907      	bls.n	406188 <__udivmoddi4+0x134>
  406178:	19ed      	adds	r5, r5, r7
  40617a:	f108 30ff 	add.w	r0, r8, #4294967295
  40617e:	d202      	bcs.n	406186 <__udivmoddi4+0x132>
  406180:	42ab      	cmp	r3, r5
  406182:	f200 80d1 	bhi.w	406328 <__udivmoddi4+0x2d4>
  406186:	4680      	mov	r8, r0
  406188:	1aed      	subs	r5, r5, r3
  40618a:	b2a3      	uxth	r3, r4
  40618c:	fbb5 f0f2 	udiv	r0, r5, r2
  406190:	fb02 5510 	mls	r5, r2, r0, r5
  406194:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406198:	fb0c fc00 	mul.w	ip, ip, r0
  40619c:	45a4      	cmp	ip, r4
  40619e:	d907      	bls.n	4061b0 <__udivmoddi4+0x15c>
  4061a0:	19e4      	adds	r4, r4, r7
  4061a2:	f100 33ff 	add.w	r3, r0, #4294967295
  4061a6:	d202      	bcs.n	4061ae <__udivmoddi4+0x15a>
  4061a8:	45a4      	cmp	ip, r4
  4061aa:	f200 80b8 	bhi.w	40631e <__udivmoddi4+0x2ca>
  4061ae:	4618      	mov	r0, r3
  4061b0:	eba4 040c 	sub.w	r4, r4, ip
  4061b4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4061b8:	e79d      	b.n	4060f6 <__udivmoddi4+0xa2>
  4061ba:	4631      	mov	r1, r6
  4061bc:	4630      	mov	r0, r6
  4061be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061c2:	f1ce 0420 	rsb	r4, lr, #32
  4061c6:	fa05 f30e 	lsl.w	r3, r5, lr
  4061ca:	fa07 f70e 	lsl.w	r7, r7, lr
  4061ce:	fa20 f804 	lsr.w	r8, r0, r4
  4061d2:	0c3a      	lsrs	r2, r7, #16
  4061d4:	fa25 f404 	lsr.w	r4, r5, r4
  4061d8:	ea48 0803 	orr.w	r8, r8, r3
  4061dc:	fbb4 f1f2 	udiv	r1, r4, r2
  4061e0:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4061e4:	fb02 4411 	mls	r4, r2, r1, r4
  4061e8:	fa1f fc87 	uxth.w	ip, r7
  4061ec:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4061f0:	fb01 f30c 	mul.w	r3, r1, ip
  4061f4:	42ab      	cmp	r3, r5
  4061f6:	fa00 f40e 	lsl.w	r4, r0, lr
  4061fa:	d909      	bls.n	406210 <__udivmoddi4+0x1bc>
  4061fc:	19ed      	adds	r5, r5, r7
  4061fe:	f101 30ff 	add.w	r0, r1, #4294967295
  406202:	f080 808a 	bcs.w	40631a <__udivmoddi4+0x2c6>
  406206:	42ab      	cmp	r3, r5
  406208:	f240 8087 	bls.w	40631a <__udivmoddi4+0x2c6>
  40620c:	3902      	subs	r1, #2
  40620e:	443d      	add	r5, r7
  406210:	1aeb      	subs	r3, r5, r3
  406212:	fa1f f588 	uxth.w	r5, r8
  406216:	fbb3 f0f2 	udiv	r0, r3, r2
  40621a:	fb02 3310 	mls	r3, r2, r0, r3
  40621e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406222:	fb00 f30c 	mul.w	r3, r0, ip
  406226:	42ab      	cmp	r3, r5
  406228:	d907      	bls.n	40623a <__udivmoddi4+0x1e6>
  40622a:	19ed      	adds	r5, r5, r7
  40622c:	f100 38ff 	add.w	r8, r0, #4294967295
  406230:	d26f      	bcs.n	406312 <__udivmoddi4+0x2be>
  406232:	42ab      	cmp	r3, r5
  406234:	d96d      	bls.n	406312 <__udivmoddi4+0x2be>
  406236:	3802      	subs	r0, #2
  406238:	443d      	add	r5, r7
  40623a:	1aeb      	subs	r3, r5, r3
  40623c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406240:	e78f      	b.n	406162 <__udivmoddi4+0x10e>
  406242:	f1c1 0720 	rsb	r7, r1, #32
  406246:	fa22 f807 	lsr.w	r8, r2, r7
  40624a:	408b      	lsls	r3, r1
  40624c:	fa05 f401 	lsl.w	r4, r5, r1
  406250:	ea48 0303 	orr.w	r3, r8, r3
  406254:	fa20 fe07 	lsr.w	lr, r0, r7
  406258:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40625c:	40fd      	lsrs	r5, r7
  40625e:	ea4e 0e04 	orr.w	lr, lr, r4
  406262:	fbb5 f9fc 	udiv	r9, r5, ip
  406266:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40626a:	fb0c 5519 	mls	r5, ip, r9, r5
  40626e:	fa1f f883 	uxth.w	r8, r3
  406272:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406276:	fb09 f408 	mul.w	r4, r9, r8
  40627a:	42ac      	cmp	r4, r5
  40627c:	fa02 f201 	lsl.w	r2, r2, r1
  406280:	fa00 fa01 	lsl.w	sl, r0, r1
  406284:	d908      	bls.n	406298 <__udivmoddi4+0x244>
  406286:	18ed      	adds	r5, r5, r3
  406288:	f109 30ff 	add.w	r0, r9, #4294967295
  40628c:	d243      	bcs.n	406316 <__udivmoddi4+0x2c2>
  40628e:	42ac      	cmp	r4, r5
  406290:	d941      	bls.n	406316 <__udivmoddi4+0x2c2>
  406292:	f1a9 0902 	sub.w	r9, r9, #2
  406296:	441d      	add	r5, r3
  406298:	1b2d      	subs	r5, r5, r4
  40629a:	fa1f fe8e 	uxth.w	lr, lr
  40629e:	fbb5 f0fc 	udiv	r0, r5, ip
  4062a2:	fb0c 5510 	mls	r5, ip, r0, r5
  4062a6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4062aa:	fb00 f808 	mul.w	r8, r0, r8
  4062ae:	45a0      	cmp	r8, r4
  4062b0:	d907      	bls.n	4062c2 <__udivmoddi4+0x26e>
  4062b2:	18e4      	adds	r4, r4, r3
  4062b4:	f100 35ff 	add.w	r5, r0, #4294967295
  4062b8:	d229      	bcs.n	40630e <__udivmoddi4+0x2ba>
  4062ba:	45a0      	cmp	r8, r4
  4062bc:	d927      	bls.n	40630e <__udivmoddi4+0x2ba>
  4062be:	3802      	subs	r0, #2
  4062c0:	441c      	add	r4, r3
  4062c2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4062c6:	eba4 0408 	sub.w	r4, r4, r8
  4062ca:	fba0 8902 	umull	r8, r9, r0, r2
  4062ce:	454c      	cmp	r4, r9
  4062d0:	46c6      	mov	lr, r8
  4062d2:	464d      	mov	r5, r9
  4062d4:	d315      	bcc.n	406302 <__udivmoddi4+0x2ae>
  4062d6:	d012      	beq.n	4062fe <__udivmoddi4+0x2aa>
  4062d8:	b156      	cbz	r6, 4062f0 <__udivmoddi4+0x29c>
  4062da:	ebba 030e 	subs.w	r3, sl, lr
  4062de:	eb64 0405 	sbc.w	r4, r4, r5
  4062e2:	fa04 f707 	lsl.w	r7, r4, r7
  4062e6:	40cb      	lsrs	r3, r1
  4062e8:	431f      	orrs	r7, r3
  4062ea:	40cc      	lsrs	r4, r1
  4062ec:	6037      	str	r7, [r6, #0]
  4062ee:	6074      	str	r4, [r6, #4]
  4062f0:	2100      	movs	r1, #0
  4062f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4062f6:	4618      	mov	r0, r3
  4062f8:	e6f8      	b.n	4060ec <__udivmoddi4+0x98>
  4062fa:	4690      	mov	r8, r2
  4062fc:	e6e0      	b.n	4060c0 <__udivmoddi4+0x6c>
  4062fe:	45c2      	cmp	sl, r8
  406300:	d2ea      	bcs.n	4062d8 <__udivmoddi4+0x284>
  406302:	ebb8 0e02 	subs.w	lr, r8, r2
  406306:	eb69 0503 	sbc.w	r5, r9, r3
  40630a:	3801      	subs	r0, #1
  40630c:	e7e4      	b.n	4062d8 <__udivmoddi4+0x284>
  40630e:	4628      	mov	r0, r5
  406310:	e7d7      	b.n	4062c2 <__udivmoddi4+0x26e>
  406312:	4640      	mov	r0, r8
  406314:	e791      	b.n	40623a <__udivmoddi4+0x1e6>
  406316:	4681      	mov	r9, r0
  406318:	e7be      	b.n	406298 <__udivmoddi4+0x244>
  40631a:	4601      	mov	r1, r0
  40631c:	e778      	b.n	406210 <__udivmoddi4+0x1bc>
  40631e:	3802      	subs	r0, #2
  406320:	443c      	add	r4, r7
  406322:	e745      	b.n	4061b0 <__udivmoddi4+0x15c>
  406324:	4608      	mov	r0, r1
  406326:	e708      	b.n	40613a <__udivmoddi4+0xe6>
  406328:	f1a8 0802 	sub.w	r8, r8, #2
  40632c:	443d      	add	r5, r7
  40632e:	e72b      	b.n	406188 <__udivmoddi4+0x134>

00406330 <__aeabi_idiv0>:
  406330:	4770      	bx	lr
  406332:	bf00      	nop

00406334 <sysfont_glyphs>:
	...
  406340:	c00f f01f f038 f870 f871 fc61 dc63 9c63     ....8.p.q.a.c.c.
  406350:	9c67 1c67 1c7f 187e 387e 703c f01c c00f     g.g...~.~8<p....
	...
  406374:	0000 800f 807f 807f 8063 8003 8003 8003     ........c.......
  406384:	8003 8003 8003 8003 8003 8003 8003 8003     ................
  406394:	fc7f 0000 0000 0000 0000 0000 0000 0000     ................
	...
  4063ac:	e01f f07f 3030 3800 3800 3800 7000 f000     ....00.8.8.8.p..
  4063bc:	e001 c003 c007 800f 001f 003c 0078 f87f     ..........<.x...
	...
  4063e0:	0000 e03f f03d 7000 3000 3000 7000 e003     ..?.=..p.0.0.p..
  4063f0:	e00f f00b 3800 3800 1800 3800 3800 f078     .....8.8...8.8x.
  406400:	e07f 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406418:	7000 f000 f001 f003 f003 7007 700f 701e     .p.........p.p.p
  406428:	701c 703c 7078 f87f 7000 7000 7000 7000     .p<pxp...p.p.p.p
	...
  40644c:	0000 f01f 0018 0038 0038 0038 0038 e03f     ......8.8.8.8.?.
  40645c:	f01d 7800 3800 3800 3800 7800 f07d f07f     ...x.8.8.8.x}...
  40646c:	c03f 0000 0000 0000 0000 0000 0000 0000     ?...............
	...
  406484:	0000 e003 c007 001e 003c 0038 e07f f07e     ........<.8...~.
  406494:	3878 1870 1c70 1c70 3870 3838 f03c e00f     x8p.p.p.p888<...
	...
  4064bc:	f87f 3800 3800 7000 7000 e000 e000 c001     ...8.8.p.p......
  4064cc:	c001 c003 8003 8003 0007 0007 000e 0000     ................
	...
  4064f0:	e01f f03e 3830 3870 783c f03f e01f e00f     ..>.08p8<x?.....
  406500:	f03f f87f 7878 1c70 1c70 3870 783c e01f     ?...xxp.p.p8<x..
	...
  406524:	0000 e00f f03e 7038 3870 3870 1870 3870     ....>.8pp8p8p.p8
  406534:	7878 f83f f81f 7800 7000 e000 c003 801f     xx?....x.p......
  406544:	003e 0000 0000 0000 0000 0000 0000 0000     >...............
	...
  406564:	0000 8007 8007 8007 8007 0000 0000 0000     ................
  406574:	8007 8007 8007 8007 0000 0000 0000 0000     ................
	...
  40659c:	8003 c007 c007 8003 0000 0000 0000 0000     ................
  4065ac:	c003 8007 8007 8007 0007 0007 0000 0000     ................
	...
  4065cc:	1800 7800 f801 f003 c00f 003f 007c 007c     ...x......?.|.|.
  4065dc:	003f c00f f003 f801 7800 1800 0000 0000     ?........x......
	...
  40660c:	f87f 0000 0000 0000 f87f 0000 0000 0000     ................
	...
  406638:	0060 0078 007e 801f e007 f003 f800 f800     `.x.~...........
  406648:	f003 e007 801f 007e 0078 0070 0000 0000     ......~.x.p.....
	...
  406668:	e01f f01c 7018 7000 7000 7000 e000 e001     .....p.p.p.p....
  406678:	c003 8003 0003 0000 0000 8007 8007 8007     ................
  406688:	8007 0000 0000 0000 0000 0000 0000 0000     ................
	...
  4066a4:	e00f f01f 381c 3838 f837 f87f d87c d86c     .....8887...|.l.
  4066b4:	d87c d86c f87f f07f 0030 0038 e01e e00f     |.l.....0.8.....
	...
  4066d4:	8003 8007 8007 c007 c00f c00f e00e e00c     ................
  4066e4:	e01c e01c f01f 7038 7038 3838 3870 3870     ......8p8p88p8p8
  4066f4:	1870 0000 0000 0000 0000 0000 0000 0000     p...............
  406704:	0000 0000 0000 c07f e071 7070 3070 3070     ........q.ppp0p0
  406714:	7070 f077 e07f f073 7870 3870 1870 1870     ppw...s.pxp8p.p.
  406724:	3870 7870 f071 c07f 0000 0000 0000 0000     p8pxq...........
	...
  406740:	f807 381f 003c 0038 0070 0070 0060 0060     ...8<.8.p.p.`.`.
  406750:	00e0 0060 0060 0070 0070 0038 003c 3c1f     ..`.`.p.p.8.<..<
  406760:	fc07 0000 0000 0000 0000 0000 0000 0000     ................
  406770:	0000 0000 0000 807f e063 f060 7060 3860     ........c.`.`p`8
  406780:	1860 1c60 1c60 1c60 1c60 1c60 1860 3860     `.`.`.`.`.`.`.`8
  406790:	3860 7060 e063 c07f 0000 0000 0000 0000     `8`pc...........
	...
  4067ac:	f87f 0070 0070 0070 0070 0070 0070 0070     ..p.p.p.p.p.p.p.
  4067bc:	f07f 0070 0070 0070 0070 0070 0070 0070     ..p.p.p.p.p.p.p.
  4067cc:	f87f 0000 0000 0000 0000 0000 0000 0000     ................
  4067dc:	0000 0000 0000 f87f 0070 0070 0070 0070     ........p.p.p.p.
  4067ec:	0070 0070 0070 f07f 0070 0070 0070 0070     p.p.p...p.p.p.p.
  4067fc:	0070 0070 0070 0070 0000 0000 0000 0000     p.p.p.p.........
	...
  406818:	f807 301e 001c 0038 0070 0070 0070 0060     ...0..8.p.p.p.`.
  406828:	fc61 1c60 1c70 1c70 1c70 1c38 1c3c 7c1e     a.`.p.p.p.8.<..|
  406838:	f007 0000 0000 0000 0000 0000 0000 0000     ................
  406848:	0000 0000 0000 1870 1870 1870 1870 1870     ......p.p.p.p.p.
  406858:	1870 1870 1870 f87f 1870 1870 1870 1870     p.p.p...p.p.p.p.
  406868:	1870 1870 1870 1870 0000 0000 0000 0000     p.p.p.p.........
	...
  406884:	f87f 8003 8003 8003 8003 8003 8003 8003     ................
  406894:	8003 8003 8003 8003 8003 8003 8003 8003     ................
  4068a4:	fc7f 0000 0000 0000 0000 0000 0000 0000     ................
  4068b4:	0000 0000 0000 f83f 1800 1800 1800 1800     ......?.........
  4068c4:	1800 1800 1800 1800 1800 1800 1800 3800     ...............8
  4068d4:	3800 7000 f00f c07f 0000 0000 0000 0000     .8.p............
	...
  4068f0:	7860 f060 e061 c063 8063 0067 006f 007f     `x`.a.c.c.g.o...
  406900:	807f 807b c071 e061 e060 7060 7060 3860     ..{.q.a.`.`p`p`8
  406910:	3c60 0000 0000 0000 0000 0000 0000 0000     `<..............
  406920:	0000 0000 0000 0070 0070 0070 0070 0070     ......p.p.p.p.p.
  406930:	0070 0070 0070 0070 0070 0070 0070 0070     p.p.p.p.p.p.p.p.
  406940:	0070 0070 0070 f87f 0000 0000 0000 0000     p.p.p...........
	...
  40695c:	3c70 3c78 3c78 7c78 7c78 7c7c 7c7c fc7c     p<x<x<x|x||||||.
  40696c:	fc7c dc7e dc7e dc77 dc77 9c77 9c77 9c73     |.~.~.w.w.w.w.s.
  40697c:	9c73 0000 0000 0000 0000 0000 0000 0000     s...............
  40698c:	0000 0000 0000 1878 1878 187c 187c 187e     ......x.x.|.|.~.
  40699c:	187e 1877 1877 9873 9873 d871 d871 f870     ~.w.w.s.s.q.q.p.
  4069ac:	f870 7870 7870 3870 0000 0000 0000 0000     p.pxpxp8........
	...
  4069c8:	c00f e01c 7038 3830 3870 1870 1c60 1c60     ....8p08p8p.`.`.
  4069d8:	1c60 1c60 1c60 1870 3870 3830 7038 e01c     `.`.`.p.p8088p..
  4069e8:	c00f 0000 0000 0000 0000 0000 0000 0000     ................
  4069f8:	0000 0000 0000 e07f f071 7870 3870 1870     ........q.pxp8p.
  406a08:	1870 1870 3870 3870 7070 f077 c07f 0070     p.p.p8p8ppw...p.
  406a18:	0070 0070 0070 0070 0000 0000 0000 0000     p.p.p.p.........
	...
  406a34:	c00f e01c 7038 3830 3870 1870 1c60 1c60     ....8p08p8p.`.`.
  406a44:	1c60 1c60 1c70 1c70 3870 3878 7838 f01f     `.`.p.p.p8x88x..
  406a54:	e01f c007 8003 e003 f001 0000 0000 0000     ................
  406a64:	0000 0000 0000 c07f e071 7070 3070 3870     ........q.ppp0p8
  406a74:	3870 7070 7070 f077 e07f c071 e070 e070     p8ppppw...q.p.p.
  406a84:	7070 7070 3870 3870 0000 0000 0000 0000     ppppp8p8........
	...
  406aa0:	f80f 703c 0030 0070 0078 003c 003f c01f     ..<p0.p.x.<.?...
  406ab0:	f007 f801 7800 1800 1800 3800 f87d f07f     .....x.....8}...
  406ac0:	e03f 0000 0000 0000 0000 0000 0000 0000     ?...............
  406ad0:	0000 0000 0000 fc7f 8003 8003 8003 8003     ................
  406ae0:	8003 8003 8003 8003 8003 8003 8003 8003     ................
  406af0:	8003 8003 8003 8003 0000 0000 0000 0000     ................
	...
  406b0c:	1c70 1c70 1c70 1c70 1c70 1c70 1c70 1c70     p.p.p.p.p.p.p.p.
  406b1c:	1c70 1870 1870 1870 3870 3830 7038 f01c     p.p.p.p.p8088p..
  406b2c:	c00f 0000 0000 0000 0000 0000 0000 0000     ................
  406b3c:	0000 0000 0000 1c60 1870 3870 3830 3038     ......`.p.p80880
  406b4c:	7038 7038 701c e01c e01c e00e c00e c00f     8p8p.p..........
  406b5c:	c007 8007 8007 8003 0000 0000 0000 0000     ................
	...
  406b78:	1c60 1c70 1870 1870 3870 b873 b833 b833     `.p.p.p.p8s.3.3.
  406b88:	b83f f83f f03f f03f f03f f03e f01e f01c     ?.?.?.?.?.>.....
  406b98:	f01c 0000 0000 0000 0000 0000 0000 0000     ................
  406ba8:	0000 0000 0000 3870 3838 7038 f01c e01c     ......p8888p....
  406bb8:	c00f c007 8007 8003 8007 c00f e00f e01c     ................
  406bc8:	701c 7038 3838 3870 0000 0000 0000 0000     .p8p88p8........
	...
  406be4:	3870 3870 3038 7038 701c e01c e00e c00f     p8p8808p.p......
  406bf4:	c007 8007 8007 8003 8003 8003 8003 8003     ................
  406c04:	8003 0000 0000 0000 0000 0000 0000 0000     ................
  406c14:	0000 0000 0000 f83f 3800 7000 f000 e000     ......?..8.p....
  406c24:	e001 c001 8003 8007 0007 000f 000e 001c     ................
  406c34:	003c 0038 0078 f87f 0000 0000 0000 0000     <.8.x...........
	...
  406c4c:	0000 c007 0007 0007 0007 0007 0007 0007     ................
  406c5c:	0007 0007 0007 0007 0007 0007 0007 0007     ................
  406c6c:	0007 0007 0007 0007 c007 0000 0000 0000     ................
	...
  406c84:	0070 0038 0038 001c 001c 000e 000e 0007     p.8.8...........
  406c94:	0007 8003 8003 c001 c001 e000 e000 7000     ...............p
  406ca4:	7000 3800 3800 0000 0000 0000 0000 0000     .p.8.8..........
  406cb4:	0000 0000 0000 c007 c001 c001 c001 c001     ................
  406cc4:	c001 c001 c001 c001 c001 c001 c001 c001     ................
  406cd4:	c001 c001 c001 c001 c001 c001 c007 0000     ................
	...
  406cf0:	0000 8007 c007 c00f e01e 0000 0000 0000     ................
	...
  406d48:	f87f 0000 0000 0000 0000 0000 0000 0000     ................
  406d58:	0000 0000 0006 800f c00f c001 0000 0000     ................
	...
  406d9c:	0000 e03f f01c 3800 3800 3800 f81f 783e     ..?....8.8.8..>x
  406dac:	3838 3830 7830 f839 f81f 0000 0000 0000     88080x9.........
	...
  406dc8:	0070 0070 0070 0070 0070 0070 e07f f078     p.p.p.p.p.p...x.
  406dd8:	7070 3870 3870 1870 1870 3870 3870 7070     ppp8p8p.p.p8p8pp
  406de8:	e071 c07f 0000 0000 0000 0000 0000 0000     q...............
	...
  406e08:	0000 f00f 301e 0038 0038 0070 0070 0070     .....08.8.p.p.p.
  406e18:	0070 0038 003c 381e f80f 0000 0000 0000     p.8.<..8........
	...
  406e34:	1800 1800 1800 1800 1800 1800 f807 781f     ...............x
  406e44:	183c 1838 1830 1870 1870 1870 1830 1838     <.8.0.p.p.p.0.8.
  406e54:	781e f80f 0000 0000 0000 0000 0000 0000     .x..............
	...
  406e74:	0000 e00f f03c 7838 3870 3870 f87f 0070     ....<.8xp8p8..p.
  406e84:	0070 0070 0038 783e f80f 0000 0000 0000     p.p.8.>x........
	...
  406ea0:	f803 f807 0007 000e 000e 000e f87f 000e     ................
  406eb0:	000e 000e 000e 000e 000e 000e 000e 000e     ................
  406ec0:	000e f87f 0000 0000 0000 0000 0000 0000     ................
	...
  406ee0:	0000 f80f 781f 183c 1838 1870 1870 1870     .....x<.8.p.p.p.
  406ef0:	1870 1870 1838 781c f80f 3800 3800 f03d     p.p.8..x...8.8=.
  406f00:	e03f 0000 0000 0000 0000 0000 0070 0070     ?...........p.p.
  406f10:	0070 0070 0070 0070 e077 707e 3878 3870     p.p.p.p.w.~px8p8
  406f20:	3870 3870 3870 3870 3870 3870 3870 3870     p8p8p8p8p8p8p8p8
	...
  406f40:	0000 8007 8007 8007 0000 0000 0000 807f     ................
  406f50:	8003 8003 8003 8003 8003 8003 8003 8003     ................
  406f60:	8003 8003 fc7f 0000 0000 0000 0000 0000     ................
	...
  406f78:	3800 3c00 3800 0000 0000 0000 f80f 1800     .8.<.8..........
  406f88:	1800 1800 1800 1800 1800 1800 1800 1800     ................
  406f98:	3800 3800 3800 7000 e00f c07f 0000 0000     .8.8.8.p........
  406fa8:	0000 0000 0000 0070 0070 0070 0070 0070     ......p.p.p.p.p.
  406fb8:	0070 7870 f071 c073 8077 807f 807f c07b     p.pxq.s.w.....{.
  406fc8:	e071 e070 f070 7870 3870 0000 0000 0000     q.p.p.pxp8......
	...
  406fe4:	007f 0003 0003 0003 0003 0003 0003 0003     ................
  406ff4:	0003 0003 0003 0003 0003 0003 0003 0003     ................
  407004:	0003 fc7f 0000 0000 0000 0000 0000 0000     ................
	...
  407024:	0070 f07f f87b b873 b873 b873 b873 b873     p...{.s.s.s.s.s.
  407034:	b873 b873 b873 b873 b873 0000 0000 0000     s.s.s.s.s.......
	...
  40705c:	e077 707e 3878 3870 3870 3870 3870 3870     w.~px8p8p8p8p8p8
  40706c:	3870 3870 3870 3870 0000 0000 0000 0000     p8p8p8p8........
	...
  407090:	0000 e00f f01c 3838 3870 1870 1870 1870     ......88p8p.p.p.
  4070a0:	1870 3870 3038 f01c e00f 0000 0000 0000     p.p880..........
	...
  4070c8:	c07f f078 7070 3870 3870 3870 3870 3870     ..x.ppp8p8p8p8p8
  4070d8:	3870 7070 e071 c07f 0070 0070 0070 0070     p8ppq...p.p.p.p.
	...
  4070fc:	0000 f807 781f 181c 1838 1830 1870 1870     .....x..8.0.p.p.
  40710c:	1870 1830 1838 781e f80f 1800 1800 1800     p.0.8..x........
  40711c:	1800 0000 0000 0000 0000 0000 0000 0000     ................
	...
  407134:	f87f 980f 000f 000e 000e 000e 000e 000e     ................
  407144:	000e 000e 000e e07f 0000 0000 0000 0000     ................
	...
  407168:	0000 f00f 301c 0018 003e 801f e01f f007     .....0..>.......
  407178:	f801 7800 3800 703c e03f 0000 0000 0000     ...x.8<p?.......
	...
  407198:	0000 0007 0007 0007 f87f 0007 0007 0007     ................
  4071a8:	0007 0007 0007 0007 0003 8003 e003 fc01     ................
	...
  4071d4:	0000 3870 3870 3870 3870 3870 3870 3870     ..p8p8p8p8p8p8p8
  4071e4:	3870 3830 3838 f83c f81f 0000 0000 0000     p80888<.........
	...
  40720c:	3870 3838 7038 7018 601c e01c e00e c00f     p8888p.p.`......
  40721c:	c00f 8007 8007 8003 0000 0000 0000 0000     ................
	...
  407240:	0000 b873 b873 b837 b837 b837 f03f f03f     ..s.s.7.7.7.?.?.
  407250:	f03e f01e f01e f01c f01c 0000 0000 0000     >...............
	...
  407278:	7838 703c e01c e00f c007 8007 8007 c00f     8x<p............
  407288:	e00f f01c 7038 3878 0000 0000 0000 0000     ....8px8........
	...
  4072ac:	0000 3870 3838 3038 701c 701c e00c e00e     ..p88880.p.p....
  4072bc:	c00e c007 c007 8003 8003 8003 0007 0007     ................
  4072cc:	0006 000e 0000 0000 0000 0000 0000 0000     ................
	...
  4072e4:	f03f 7000 f000 e001 c003 8007 000f 000f     ?..p............
  4072f4:	001e 003c 0078 f87f 0000 0000 0000 0000     ..<.x...........
	...
  40730c:	c003 c003 0007 0007 0007 8003 c003 c001     ................
  40731c:	c001 c003 800f 800f c007 c001 c001 c003     ................
  40732c:	8003 0007 0007 0007 c003 c003 0000 0000     ................
  40733c:	0000 0000 0000 8003 8003 8003 8003 8003     ................
  40734c:	8003 8003 8003 8003 8003 8003 8003 8003     ................
  40735c:	8003 8003 8003 8003 8003 8003 8003 8003     ................
	...
  407378:	000f 800f 8003 8001 8003 8007 0007 000e     ................
  407388:	000e 8007 c003 c003 8007 000e 000e 0007     ................
  407398:	8007 8003 8001 8003 800f 000f 0000 0000     ................
	...
  4073c4:	0000 183e 183f f873 f070 0000 0000 0000     ..>.?.s.p.......
	...
  4073e0:	6c41 3025 6432 253a 3230 0064 3a54 3025     Al%02d:%02d.T:%0
  4073f0:	6432 253a 3230 0064                         2d:%02d.

004073f8 <_global_impure_ptr>:
  4073f8:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  407408:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  407418:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  407428:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  407438:	296c 0000 0030 0000                         l)..0...

00407440 <blanks.7223>:
  407440:	2020 2020 2020 2020 2020 2020 2020 2020                     

00407450 <zeroes.7224>:
  407450:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  407460:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00407470 <__mprec_bigtens>:
  407470:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  407480:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  407490:	bf3c 7f73 4fdd 7515                         <.s..O.u

00407498 <__mprec_tens>:
  407498:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4074a8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4074b8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  4074c8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  4074d8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  4074e8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  4074f8:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  407508:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407518:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407528:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407538:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407548:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407558:	9db4 79d9 7843 44ea                         ...yCx.D

00407560 <p05.6055>:
  407560:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  407570:	4f50 4953 0058 0000 002e 0000               POSIX.......

0040757c <_ctype_>:
  40757c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40758c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40759c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4075ac:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4075bc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  4075cc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  4075dc:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  4075ec:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  4075fc:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00407680 <_init>:
  407680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407682:	bf00      	nop
  407684:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407686:	bc08      	pop	{r3}
  407688:	469e      	mov	lr, r3
  40768a:	4770      	bx	lr

0040768c <__init_array_start>:
  40768c:	00402fd1 	.word	0x00402fd1

00407690 <__frame_dummy_init_array_entry>:
  407690:	00400165                                e.@.

00407694 <_fini>:
  407694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407696:	bf00      	nop
  407698:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40769a:	bc08      	pop	{r3}
  40769c:	469e      	mov	lr, r3
  40769e:	4770      	bx	lr

004076a0 <__fini_array_start>:
  4076a0:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 6334 0040 1b0e 7e30               ....4c@...0~

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <_impure_ptr>:
20400020:	0028 2040 0000 0000                         (.@ ....

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0cb8 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	56e9 0040 52a9 0040 0000 0000 757c 0040     .V@..R@.....|u@.
20400954:	7578 0040 741c 0040 741c 0040 741c 0040     xu@..t@..t@..t@.
20400964:	741c 0040 741c 0040 741c 0040 741c 0040     .t@..t@..t@..t@.
20400974:	741c 0040 741c 0040 ffff ffff ffff ffff     .t@..t@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
