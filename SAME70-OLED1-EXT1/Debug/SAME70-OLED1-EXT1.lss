
SAME70-OLED1-EXT1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000079e4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004079e4  004079e4  000179e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d8  20400000  004079ec  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000002fc  204009d8  004083c4  000209d8  2**2
                  ALLOC
  4 .stack        00002004  20400cd4  004086c0  000209d8  2**0
                  ALLOC
  5 .heap         00000200  20402cd8  0040a6c4  000209d8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00020a06  2**0
                  CONTENTS, READONLY
  8 .debug_info   00019370  00000000  00000000  00020a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003902  00000000  00000000  00039dcf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000065f1  00000000  00000000  0003d6d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000a00  00000000  00000000  00043cc2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a20  00000000  00000000  000446c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00021814  00000000  00000000  000450e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000f22e  00000000  00000000  000668f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00092b9e  00000000  00000000  00075b24  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002298  00000000  00000000  001086c4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 2c 40 20 19 14 40 00 15 14 40 00 15 14 40 00     .,@ ..@...@...@.
  400010:	15 14 40 00 15 14 40 00 15 14 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	15 14 40 00 15 14 40 00 00 00 00 00 15 14 40 00     ..@...@.......@.
  40003c:	15 14 40 00 15 14 40 00 15 14 40 00 89 1b 40 00     ..@...@...@...@.
  40004c:	15 14 40 00 15 14 40 00 15 14 40 00 15 14 40 00     ..@...@...@...@.
  40005c:	15 14 40 00 15 14 40 00 00 00 00 00 e9 11 40 00     ..@...@.......@.
  40006c:	fd 11 40 00 11 12 40 00 15 14 40 00 15 14 40 00     ..@...@...@...@.
  40007c:	15 14 40 00 25 12 40 00 39 12 40 00 15 14 40 00     ..@.%.@.9.@...@.
  40008c:	15 14 40 00 15 14 40 00 15 14 40 00 15 14 40 00     ..@...@...@...@.
  40009c:	15 14 40 00 45 18 40 00 15 14 40 00 15 14 40 00     ..@.E.@...@...@.
  4000ac:	15 14 40 00 15 14 40 00 15 14 40 00 15 14 40 00     ..@...@...@...@.
  4000bc:	15 14 40 00 15 14 40 00 15 14 40 00 15 14 40 00     ..@...@...@...@.
  4000cc:	15 14 40 00 00 00 00 00 15 14 40 00 00 00 00 00     ..@.......@.....
  4000dc:	15 14 40 00 15 14 40 00 15 14 40 00 15 14 40 00     ..@...@...@...@.
  4000ec:	15 14 40 00 15 14 40 00 15 14 40 00 15 14 40 00     ..@...@...@...@.
  4000fc:	15 14 40 00 15 14 40 00 15 14 40 00 15 14 40 00     ..@...@...@...@.
  40010c:	15 14 40 00 15 14 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 15 14 40 00 15 14 40 00 15 14 40 00     ......@...@...@.
  40012c:	15 14 40 00 15 14 40 00 00 00 00 00 15 14 40 00     ..@...@.......@.
  40013c:	15 14 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d8 	.word	0x204009d8
  40015c:	00000000 	.word	0x00000000
  400160:	004079ec 	.word	0x004079ec

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	004079ec 	.word	0x004079ec
  4001a0:	204009dc 	.word	0x204009dc
  4001a4:	004079ec 	.word	0x004079ec
  4001a8:	00000000 	.word	0x00000000

004001ac <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
  4001ac:	b921      	cbnz	r1, 4001b8 <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
  4001ae:	6843      	ldr	r3, [r0, #4]
  4001b0:	f023 0301 	bic.w	r3, r3, #1
  4001b4:	6043      	str	r3, [r0, #4]
  4001b6:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
  4001b8:	6843      	ldr	r3, [r0, #4]
  4001ba:	f043 0301 	orr.w	r3, r3, #1
  4001be:	6043      	str	r3, [r0, #4]
  4001c0:	4770      	bx	lr

004001c2 <rtc_enable_interrupt>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void rtc_enable_interrupt(Rtc *p_rtc, uint32_t ul_sources)
{
	p_rtc->RTC_IER = ul_sources;
  4001c2:	6201      	str	r1, [r0, #32]
  4001c4:	4770      	bx	lr

004001c6 <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
  4001c6:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
  4001c8:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001ca:	6884      	ldr	r4, [r0, #8]
  4001cc:	42a5      	cmp	r5, r4
  4001ce:	d003      	beq.n	4001d8 <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
  4001d0:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001d2:	6884      	ldr	r4, [r0, #8]
  4001d4:	42ac      	cmp	r4, r5
  4001d6:	d1fb      	bne.n	4001d0 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
  4001d8:	b161      	cbz	r1, 4001f4 <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4001da:	f3c4 5001 	ubfx	r0, r4, #20, #2
  4001de:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4001e2:	f3c4 4003 	ubfx	r0, r4, #16, #4
  4001e6:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
  4001ea:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
  4001ee:	bf18      	it	ne
  4001f0:	300c      	addne	r0, #12
  4001f2:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
  4001f4:	b142      	cbz	r2, 400208 <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
  4001f6:	f3c4 3102 	ubfx	r1, r4, #12, #3
  4001fa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  4001fe:	f3c4 2003 	ubfx	r0, r4, #8, #4
  400202:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  400206:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
  400208:	b143      	cbz	r3, 40021c <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  40020a:	f3c4 1202 	ubfx	r2, r4, #4, #3
  40020e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  400212:	f004 040f 	and.w	r4, r4, #15
  400216:	eb04 0442 	add.w	r4, r4, r2, lsl #1
  40021a:	601c      	str	r4, [r3, #0]
	}
}
  40021c:	bc30      	pop	{r4, r5}
  40021e:	4770      	bx	lr

00400220 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
  400220:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  400222:	6844      	ldr	r4, [r0, #4]
		if (ul_hour > 12) {
  400224:	f014 0f01 	tst.w	r4, #1
  400228:	d005      	beq.n	400236 <rtc_set_time+0x16>
  40022a:	290c      	cmp	r1, #12
  40022c:	d903      	bls.n	400236 <rtc_set_time+0x16>
			ul_hour -= 12;
  40022e:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
  400230:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
  400234:	e000      	b.n	400238 <rtc_set_time+0x18>
	uint32_t ul_time = 0;
  400236:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400238:	4c1c      	ldr	r4, [pc, #112]	; (4002ac <rtc_set_time+0x8c>)
  40023a:	fba4 5603 	umull	r5, r6, r4, r3
  40023e:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  400240:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  400244:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
  400248:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  40024c:	fba4 6502 	umull	r6, r5, r4, r2
  400250:	08ed      	lsrs	r5, r5, #3
  400252:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  400256:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  40025a:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
  40025e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
  400262:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  400264:	fba4 4201 	umull	r4, r2, r4, r1
  400268:	08d2      	lsrs	r2, r2, #3
  40026a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  40026e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  400272:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400276:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  40027a:	6983      	ldr	r3, [r0, #24]
  40027c:	f013 0f04 	tst.w	r3, #4
  400280:	d0fb      	beq.n	40027a <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
  400282:	6803      	ldr	r3, [r0, #0]
  400284:	f043 0301 	orr.w	r3, r3, #1
  400288:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  40028a:	6983      	ldr	r3, [r0, #24]
  40028c:	f013 0f01 	tst.w	r3, #1
  400290:	d0fb      	beq.n	40028a <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  400292:	2301      	movs	r3, #1
  400294:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
  400296:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
  400298:	6803      	ldr	r3, [r0, #0]
  40029a:	f023 0301 	bic.w	r3, r3, #1
  40029e:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
  4002a0:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  4002a2:	f000 0001 	and.w	r0, r0, #1
  4002a6:	bcf0      	pop	{r4, r5, r6, r7}
  4002a8:	4770      	bx	lr
  4002aa:	bf00      	nop
  4002ac:	cccccccd 	.word	0xcccccccd

004002b0 <rtc_set_time_alarm>:
 */
uint32_t rtc_set_time_alarm(Rtc *p_rtc,
		uint32_t ul_hour_flag, uint32_t ul_hour,
		uint32_t ul_minute_flag, uint32_t ul_minute,
		uint32_t ul_second_flag, uint32_t ul_second)
{
  4002b0:	b5f0      	push	{r4, r5, r6, r7, lr}
  4002b2:	9c05      	ldr	r4, [sp, #20]
  4002b4:	9d06      	ldr	r5, [sp, #24]
  4002b6:	9f07      	ldr	r7, [sp, #28]
	uint32_t ul_alarm = 0;

	/* Hour alarm setting */
	if (ul_hour_flag) {
  4002b8:	460e      	mov	r6, r1
  4002ba:	b1b1      	cbz	r1, 4002ea <rtc_set_time_alarm+0x3a>
		/* If 12-hour mode, set AMPM bit */
		if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  4002bc:	6841      	ldr	r1, [r0, #4]
			if (ul_hour > 12) {
  4002be:	f011 0f01 	tst.w	r1, #1
  4002c2:	d005      	beq.n	4002d0 <rtc_set_time_alarm+0x20>
  4002c4:	2a0c      	cmp	r2, #12
  4002c6:	d903      	bls.n	4002d0 <rtc_set_time_alarm+0x20>
				ul_hour -= 12;
  4002c8:	3a0c      	subs	r2, #12
				ul_alarm |= RTC_TIMR_AMPM;
  4002ca:	f44f 0680 	mov.w	r6, #4194304	; 0x400000
  4002ce:	e000      	b.n	4002d2 <rtc_set_time_alarm+0x22>
	uint32_t ul_alarm = 0;
  4002d0:	2600      	movs	r6, #0
			}
		}

		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  4002d2:	4919      	ldr	r1, [pc, #100]	; (400338 <rtc_set_time_alarm+0x88>)
  4002d4:	fba1 e102 	umull	lr, r1, r1, r2
  4002d8:	08c9      	lsrs	r1, r1, #3
				((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  4002da:	eb01 0e81 	add.w	lr, r1, r1, lsl #2
  4002de:	eba2 024e 	sub.w	r2, r2, lr, lsl #1
  4002e2:	0412      	lsls	r2, r2, #16
		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  4002e4:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
  4002e8:	4316      	orrs	r6, r2
	}

	/* Minute alarm setting */
	if (ul_minute_flag) {
  4002ea:	b15b      	cbz	r3, 400304 <rtc_set_time_alarm+0x54>
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  4002ec:	4b12      	ldr	r3, [pc, #72]	; (400338 <rtc_set_time_alarm+0x88>)
  4002ee:	fba3 2304 	umull	r2, r3, r3, r4
  4002f2:	08db      	lsrs	r3, r3, #3
				((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  4002f4:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  4002f8:	eba4 0442 	sub.w	r4, r4, r2, lsl #1
  4002fc:	0224      	lsls	r4, r4, #8
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  4002fe:	ea44 3403 	orr.w	r4, r4, r3, lsl #12
  400302:	4326      	orrs	r6, r4
	}

	/* Second alarm setting */
	if (ul_second_flag) {
  400304:	b155      	cbz	r5, 40031c <rtc_set_time_alarm+0x6c>
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400306:	4b0c      	ldr	r3, [pc, #48]	; (400338 <rtc_set_time_alarm+0x88>)
  400308:	fba3 2307 	umull	r2, r3, r3, r7
  40030c:	08db      	lsrs	r3, r3, #3
				((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  40030e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  400312:	eba7 0742 	sub.w	r7, r7, r2, lsl #1
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400316:	ea47 1303 	orr.w	r3, r7, r3, lsl #4
  40031a:	431e      	orrs	r6, r3
	}

	p_rtc->RTC_TIMALR &= ~(RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  40031c:	6902      	ldr	r2, [r0, #16]
  40031e:	4b07      	ldr	r3, [pc, #28]	; (40033c <rtc_set_time_alarm+0x8c>)
  400320:	4013      	ands	r3, r2
  400322:	6103      	str	r3, [r0, #16]
	p_rtc->RTC_TIMALR = ul_alarm;
  400324:	6106      	str	r6, [r0, #16]
	p_rtc->RTC_TIMALR |= (RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  400326:	6902      	ldr	r2, [r0, #16]
  400328:	4b05      	ldr	r3, [pc, #20]	; (400340 <rtc_set_time_alarm+0x90>)
  40032a:	4313      	orrs	r3, r2
  40032c:	6103      	str	r3, [r0, #16]

	return (p_rtc->RTC_VER & RTC_VER_NVTIMALR);
  40032e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  400330:	f000 0004 	and.w	r0, r0, #4
  400334:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400336:	bf00      	nop
  400338:	cccccccd 	.word	0xcccccccd
  40033c:	ff7f7f7f 	.word	0xff7f7f7f
  400340:	00808080 	.word	0x00808080

00400344 <rtc_set_date>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date(Rtc *p_rtc, uint32_t ul_year, uint32_t ul_month,
		uint32_t ul_day, uint32_t ul_week)
{
  400344:	b470      	push	{r4, r5, r6}

	/* Week */
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);

	/* Day */
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400346:	4d2a      	ldr	r5, [pc, #168]	; (4003f0 <rtc_set_date+0xac>)
  400348:	fba5 4603 	umull	r4, r6, r5, r3
  40034c:	08f6      	lsrs	r6, r6, #3
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);
  40034e:	9c03      	ldr	r4, [sp, #12]
  400350:	0564      	lsls	r4, r4, #21
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400352:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
			((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
  400356:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  40035a:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40035e:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
	ul_date |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  400362:	fba5 6402 	umull	r6, r4, r5, r2
  400366:	08e4      	lsrs	r4, r4, #3
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400368:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
			((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
  40036c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  400370:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400374:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
	ul_date |= ((ul_year / BCD_FACTOR / BCD_FACTOR / BCD_FACTOR) <<
  400378:	4b1e      	ldr	r3, [pc, #120]	; (4003f4 <rtc_set_date+0xb0>)
  40037a:	fba3 4301 	umull	r4, r3, r3, r1
  40037e:	099b      	lsrs	r3, r3, #6
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400380:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
			((ul_year / BCD_FACTOR / BCD_FACTOR) % BCD_FACTOR) <<  RTC_CALR_CENT_Pos);
  400384:	4b1c      	ldr	r3, [pc, #112]	; (4003f8 <rtc_set_date+0xb4>)
  400386:	fba3 4301 	umull	r4, r3, r3, r1
  40038a:	095b      	lsrs	r3, r3, #5
  40038c:	fba5 6403 	umull	r6, r4, r5, r3
  400390:	08e4      	lsrs	r4, r4, #3
  400392:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  400396:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40039a:	431a      	orrs	r2, r3
			((ul_year % BCD_FACTOR) << RTC_CALR_YEAR_Pos);
  40039c:	fba5 4301 	umull	r4, r3, r5, r1
  4003a0:	08db      	lsrs	r3, r3, #3
  4003a2:	eb03 0483 	add.w	r4, r3, r3, lsl #2
  4003a6:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4003aa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	ul_date |= (((ul_year / BCD_FACTOR) % BCD_FACTOR) <<
  4003ae:	fba5 1503 	umull	r1, r5, r5, r3
  4003b2:	08ed      	lsrs	r5, r5, #3
  4003b4:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  4003b8:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4003bc:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

	/* Update calendar register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  4003c0:	6983      	ldr	r3, [r0, #24]
  4003c2:	f013 0f04 	tst.w	r3, #4
  4003c6:	d0fb      	beq.n	4003c0 <rtc_set_date+0x7c>
	p_rtc->RTC_CR |= RTC_CR_UPDCAL;
  4003c8:	6803      	ldr	r3, [r0, #0]
  4003ca:	f043 0302 	orr.w	r3, r3, #2
  4003ce:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  4003d0:	6983      	ldr	r3, [r0, #24]
  4003d2:	f013 0f01 	tst.w	r3, #1
  4003d6:	d0fb      	beq.n	4003d0 <rtc_set_date+0x8c>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  4003d8:	2301      	movs	r3, #1
  4003da:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_CALR = ul_date;
  4003dc:	60c2      	str	r2, [r0, #12]
	p_rtc->RTC_CR &= (~RTC_CR_UPDCAL);
  4003de:	6803      	ldr	r3, [r0, #0]
  4003e0:	f023 0302 	bic.w	r3, r3, #2
  4003e4:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVCAL);
  4003e6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  4003e8:	f000 0002 	and.w	r0, r0, #2
  4003ec:	bc70      	pop	{r4, r5, r6}
  4003ee:	4770      	bx	lr
  4003f0:	cccccccd 	.word	0xcccccccd
  4003f4:	10624dd3 	.word	0x10624dd3
  4003f8:	51eb851f 	.word	0x51eb851f

004003fc <rtc_get_status>:
 *
 * \return Status of the RTC.
 */
uint32_t rtc_get_status(Rtc *p_rtc)
{
	return (p_rtc->RTC_SR);
  4003fc:	6980      	ldr	r0, [r0, #24]
}
  4003fe:	4770      	bx	lr

00400400 <rtc_clear_status>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_clear Some flag bits which will be cleared.
 */
void rtc_clear_status(Rtc *p_rtc, uint32_t ul_clear)
{
	p_rtc->RTC_SCCR = ul_clear;
  400400:	61c1      	str	r1, [r0, #28]
  400402:	4770      	bx	lr

00400404 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400404:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  400406:	4b07      	ldr	r3, [pc, #28]	; (400424 <spi_enable_clock+0x20>)
  400408:	4298      	cmp	r0, r3
  40040a:	d003      	beq.n	400414 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  40040c:	4b06      	ldr	r3, [pc, #24]	; (400428 <spi_enable_clock+0x24>)
  40040e:	4298      	cmp	r0, r3
  400410:	d004      	beq.n	40041c <spi_enable_clock+0x18>
  400412:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400414:	2015      	movs	r0, #21
  400416:	4b05      	ldr	r3, [pc, #20]	; (40042c <spi_enable_clock+0x28>)
  400418:	4798      	blx	r3
  40041a:	bd08      	pop	{r3, pc}
  40041c:	202a      	movs	r0, #42	; 0x2a
  40041e:	4b03      	ldr	r3, [pc, #12]	; (40042c <spi_enable_clock+0x28>)
  400420:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  400422:	e7f6      	b.n	400412 <spi_enable_clock+0xe>
  400424:	40008000 	.word	0x40008000
  400428:	40058000 	.word	0x40058000
  40042c:	0040136d 	.word	0x0040136d

00400430 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400430:	6843      	ldr	r3, [r0, #4]
  400432:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  400436:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400438:	6843      	ldr	r3, [r0, #4]
  40043a:	0409      	lsls	r1, r1, #16
  40043c:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400440:	4319      	orrs	r1, r3
  400442:	6041      	str	r1, [r0, #4]
  400444:	4770      	bx	lr

00400446 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  400446:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  400448:	f643 2499 	movw	r4, #15001	; 0x3a99
  40044c:	6905      	ldr	r5, [r0, #16]
  40044e:	f015 0f02 	tst.w	r5, #2
  400452:	d103      	bne.n	40045c <spi_write+0x16>
		if (!timeout--) {
  400454:	3c01      	subs	r4, #1
  400456:	d1f9      	bne.n	40044c <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400458:	2001      	movs	r0, #1
  40045a:	e00c      	b.n	400476 <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  40045c:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  40045e:	f014 0f02 	tst.w	r4, #2
  400462:	d006      	beq.n	400472 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  400464:	0412      	lsls	r2, r2, #16
  400466:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  40046a:	4311      	orrs	r1, r2
		if (uc_last) {
  40046c:	b10b      	cbz	r3, 400472 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  40046e:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  400472:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  400474:	2000      	movs	r0, #0
}
  400476:	bc30      	pop	{r4, r5}
  400478:	4770      	bx	lr

0040047a <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  40047a:	b932      	cbnz	r2, 40048a <spi_set_clock_polarity+0x10>
  40047c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400480:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400482:	f023 0301 	bic.w	r3, r3, #1
  400486:	6303      	str	r3, [r0, #48]	; 0x30
  400488:	4770      	bx	lr
  40048a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  40048e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400490:	f043 0301 	orr.w	r3, r3, #1
  400494:	6303      	str	r3, [r0, #48]	; 0x30
  400496:	4770      	bx	lr

00400498 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400498:	b932      	cbnz	r2, 4004a8 <spi_set_clock_phase+0x10>
  40049a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  40049e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004a0:	f023 0302 	bic.w	r3, r3, #2
  4004a4:	6303      	str	r3, [r0, #48]	; 0x30
  4004a6:	4770      	bx	lr
  4004a8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  4004ac:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004ae:	f043 0302 	orr.w	r3, r3, #2
  4004b2:	6303      	str	r3, [r0, #48]	; 0x30
  4004b4:	4770      	bx	lr

004004b6 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  4004b6:	2a04      	cmp	r2, #4
  4004b8:	d003      	beq.n	4004c2 <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  4004ba:	b16a      	cbz	r2, 4004d8 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  4004bc:	2a08      	cmp	r2, #8
  4004be:	d016      	beq.n	4004ee <spi_configure_cs_behavior+0x38>
  4004c0:	4770      	bx	lr
  4004c2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4004c6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004c8:	f023 0308 	bic.w	r3, r3, #8
  4004cc:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  4004ce:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004d0:	f043 0304 	orr.w	r3, r3, #4
  4004d4:	6303      	str	r3, [r0, #48]	; 0x30
  4004d6:	4770      	bx	lr
  4004d8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4004dc:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004de:	f023 0308 	bic.w	r3, r3, #8
  4004e2:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  4004e4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004e6:	f023 0304 	bic.w	r3, r3, #4
  4004ea:	6303      	str	r3, [r0, #48]	; 0x30
  4004ec:	4770      	bx	lr
  4004ee:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  4004f2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004f4:	f043 0308 	orr.w	r3, r3, #8
  4004f8:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4004fa:	e7e1      	b.n	4004c0 <spi_configure_cs_behavior+0xa>

004004fc <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4004fc:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400500:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400502:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400506:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400508:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40050a:	431a      	orrs	r2, r3
  40050c:	630a      	str	r2, [r1, #48]	; 0x30
  40050e:	4770      	bx	lr

00400510 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  400510:	1e43      	subs	r3, r0, #1
  400512:	4419      	add	r1, r3
  400514:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400518:	1e43      	subs	r3, r0, #1
  40051a:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  40051c:	bf94      	ite	ls
  40051e:	b200      	sxthls	r0, r0
		return -1;
  400520:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400524:	4770      	bx	lr

00400526 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  400526:	b17a      	cbz	r2, 400548 <spi_set_baudrate_div+0x22>
{
  400528:	b410      	push	{r4}
  40052a:	4614      	mov	r4, r2
  40052c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400530:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400532:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  400536:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  400538:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  40053a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  40053e:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  400540:	2000      	movs	r0, #0
}
  400542:	f85d 4b04 	ldr.w	r4, [sp], #4
  400546:	4770      	bx	lr
        return -1;
  400548:	f04f 30ff 	mov.w	r0, #4294967295
  40054c:	4770      	bx	lr

0040054e <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  40054e:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400550:	0189      	lsls	r1, r1, #6
  400552:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  400554:	2402      	movs	r4, #2
  400556:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400558:	f04f 31ff 	mov.w	r1, #4294967295
  40055c:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  40055e:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400560:	605a      	str	r2, [r3, #4]
}
  400562:	f85d 4b04 	ldr.w	r4, [sp], #4
  400566:	4770      	bx	lr

00400568 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400568:	0189      	lsls	r1, r1, #6
  40056a:	2305      	movs	r3, #5
  40056c:	5043      	str	r3, [r0, r1]
  40056e:	4770      	bx	lr

00400570 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400570:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400574:	61ca      	str	r2, [r1, #28]
  400576:	4770      	bx	lr

00400578 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400578:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  40057c:	624a      	str	r2, [r1, #36]	; 0x24
  40057e:	4770      	bx	lr

00400580 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400580:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  400584:	6a08      	ldr	r0, [r1, #32]
}
  400586:	4770      	bx	lr

00400588 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  400588:	b4f0      	push	{r4, r5, r6, r7}
  40058a:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  40058c:	2402      	movs	r4, #2
  40058e:	9401      	str	r4, [sp, #4]
  400590:	2408      	movs	r4, #8
  400592:	9402      	str	r4, [sp, #8]
  400594:	2420      	movs	r4, #32
  400596:	9403      	str	r4, [sp, #12]
  400598:	2480      	movs	r4, #128	; 0x80
  40059a:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  40059c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  40059e:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4005a0:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  4005a2:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  4005a6:	d814      	bhi.n	4005d2 <tc_find_mck_divisor+0x4a>
  4005a8:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  4005aa:	42a0      	cmp	r0, r4
  4005ac:	d217      	bcs.n	4005de <tc_find_mck_divisor+0x56>
  4005ae:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  4005b0:	af01      	add	r7, sp, #4
  4005b2:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  4005b6:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  4005ba:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  4005bc:	4284      	cmp	r4, r0
  4005be:	d30a      	bcc.n	4005d6 <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  4005c0:	4286      	cmp	r6, r0
  4005c2:	d90d      	bls.n	4005e0 <tc_find_mck_divisor+0x58>
			ul_index++) {
  4005c4:	3501      	adds	r5, #1
	for (ul_index = 0;
  4005c6:	2d05      	cmp	r5, #5
  4005c8:	d1f3      	bne.n	4005b2 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  4005ca:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  4005cc:	b006      	add	sp, #24
  4005ce:	bcf0      	pop	{r4, r5, r6, r7}
  4005d0:	4770      	bx	lr
			return 0;
  4005d2:	2000      	movs	r0, #0
  4005d4:	e7fa      	b.n	4005cc <tc_find_mck_divisor+0x44>
  4005d6:	2000      	movs	r0, #0
  4005d8:	e7f8      	b.n	4005cc <tc_find_mck_divisor+0x44>
	return 1;
  4005da:	2001      	movs	r0, #1
  4005dc:	e7f6      	b.n	4005cc <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  4005de:	2500      	movs	r5, #0
	if (p_uldiv) {
  4005e0:	b12a      	cbz	r2, 4005ee <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  4005e2:	a906      	add	r1, sp, #24
  4005e4:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  4005e8:	f851 1c14 	ldr.w	r1, [r1, #-20]
  4005ec:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  4005ee:	2b00      	cmp	r3, #0
  4005f0:	d0f3      	beq.n	4005da <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  4005f2:	601d      	str	r5, [r3, #0]
	return 1;
  4005f4:	2001      	movs	r0, #1
  4005f6:	e7e9      	b.n	4005cc <tc_find_mck_divisor+0x44>

004005f8 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4005f8:	4b01      	ldr	r3, [pc, #4]	; (400600 <gfx_mono_set_framebuffer+0x8>)
  4005fa:	6018      	str	r0, [r3, #0]
  4005fc:	4770      	bx	lr
  4005fe:	bf00      	nop
  400600:	204009f4 	.word	0x204009f4

00400604 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400604:	4b02      	ldr	r3, [pc, #8]	; (400610 <gfx_mono_framebuffer_put_byte+0xc>)
  400606:	681b      	ldr	r3, [r3, #0]
  400608:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  40060c:	5442      	strb	r2, [r0, r1]
  40060e:	4770      	bx	lr
  400610:	204009f4 	.word	0x204009f4

00400614 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400614:	4b02      	ldr	r3, [pc, #8]	; (400620 <gfx_mono_framebuffer_get_byte+0xc>)
  400616:	681b      	ldr	r3, [r3, #0]
  400618:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  40061c:	5c40      	ldrb	r0, [r0, r1]
  40061e:	4770      	bx	lr
  400620:	204009f4 	.word	0x204009f4

00400624 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400624:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  400628:	1884      	adds	r4, r0, r2
  40062a:	2c80      	cmp	r4, #128	; 0x80
  40062c:	dd02      	ble.n	400634 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  40062e:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  400632:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  400634:	b322      	cbz	r2, 400680 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  400636:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  400638:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  40063c:	2601      	movs	r6, #1
  40063e:	fa06 f101 	lsl.w	r1, r6, r1
  400642:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400644:	2b01      	cmp	r3, #1
  400646:	d01d      	beq.n	400684 <gfx_mono_generic_draw_horizontal_line+0x60>
  400648:	2b00      	cmp	r3, #0
  40064a:	d035      	beq.n	4006b8 <gfx_mono_generic_draw_horizontal_line+0x94>
  40064c:	2b02      	cmp	r3, #2
  40064e:	d117      	bne.n	400680 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400650:	3801      	subs	r0, #1
  400652:	b2c7      	uxtb	r7, r0
  400654:	19d4      	adds	r4, r2, r7
  400656:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400658:	f8df a090 	ldr.w	sl, [pc, #144]	; 4006ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  40065c:	f04f 0900 	mov.w	r9, #0
  400660:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4006f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400664:	4621      	mov	r1, r4
  400666:	4628      	mov	r0, r5
  400668:	47d0      	blx	sl
			temp ^= pixelmask;
  40066a:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40066e:	464b      	mov	r3, r9
  400670:	b2d2      	uxtb	r2, r2
  400672:	4621      	mov	r1, r4
  400674:	4628      	mov	r0, r5
  400676:	47c0      	blx	r8
  400678:	3c01      	subs	r4, #1
  40067a:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40067c:	42bc      	cmp	r4, r7
  40067e:	d1f1      	bne.n	400664 <gfx_mono_generic_draw_horizontal_line+0x40>
  400680:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400684:	3801      	subs	r0, #1
  400686:	b2c7      	uxtb	r7, r0
  400688:	19d4      	adds	r4, r2, r7
  40068a:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  40068c:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4006ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400690:	f04f 0900 	mov.w	r9, #0
  400694:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4006f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400698:	4621      	mov	r1, r4
  40069a:	4628      	mov	r0, r5
  40069c:	47d0      	blx	sl
			temp |= pixelmask;
  40069e:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4006a2:	464b      	mov	r3, r9
  4006a4:	b2d2      	uxtb	r2, r2
  4006a6:	4621      	mov	r1, r4
  4006a8:	4628      	mov	r0, r5
  4006aa:	47c0      	blx	r8
  4006ac:	3c01      	subs	r4, #1
  4006ae:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4006b0:	42bc      	cmp	r4, r7
  4006b2:	d1f1      	bne.n	400698 <gfx_mono_generic_draw_horizontal_line+0x74>
  4006b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4006b8:	3801      	subs	r0, #1
  4006ba:	b2c7      	uxtb	r7, r0
  4006bc:	19d4      	adds	r4, r2, r7
  4006be:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4006c0:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4006ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  4006c4:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  4006c6:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4006f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4006ca:	4621      	mov	r1, r4
  4006cc:	4628      	mov	r0, r5
  4006ce:	47c0      	blx	r8
			temp &= ~pixelmask;
  4006d0:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4006d4:	2300      	movs	r3, #0
  4006d6:	b2d2      	uxtb	r2, r2
  4006d8:	4621      	mov	r1, r4
  4006da:	4628      	mov	r0, r5
  4006dc:	47c8      	blx	r9
  4006de:	3c01      	subs	r4, #1
  4006e0:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4006e2:	42bc      	cmp	r4, r7
  4006e4:	d1f1      	bne.n	4006ca <gfx_mono_generic_draw_horizontal_line+0xa6>
  4006e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4006ea:	bf00      	nop
  4006ec:	00400af5 	.word	0x00400af5
  4006f0:	004009dd 	.word	0x004009dd

004006f4 <gfx_mono_generic_draw_vertical_line>:
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_vertical_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
	if (length == 0) {
  4006f4:	2a00      	cmp	r2, #0
  4006f6:	d048      	beq.n	40078a <gfx_mono_generic_draw_vertical_line+0x96>
{
  4006f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4006fc:	4614      	mov	r4, r2
  4006fe:	461f      	mov	r7, r3
  400700:	4606      	mov	r6, r0
		return;
	}

	gfx_coord_t y2 = y + length - 1;
  400702:	1e4a      	subs	r2, r1, #1
  400704:	4422      	add	r2, r4
  400706:	b2d2      	uxtb	r2, r2

	if (y == y2) {
  400708:	4291      	cmp	r1, r2
  40070a:	d031      	beq.n	400770 <gfx_mono_generic_draw_vertical_line+0x7c>
  40070c:	2a1f      	cmp	r2, #31
  40070e:	bf28      	it	cs
  400710:	221f      	movcs	r2, #31
  400712:	4615      	mov	r5, r2

	if (y2 >= GFX_MONO_LCD_HEIGHT - 1) {
		y2 = GFX_MONO_LCD_HEIGHT - 1;
	}

	gfx_coord_t y1page = y / 8;
  400714:	08cc      	lsrs	r4, r1, #3
	gfx_coord_t y2page = y2 / 8;
  400716:	ea4f 08d2 	mov.w	r8, r2, lsr #3

	uint8_t y1bitpos = y & 0x07;
	uint8_t y2bitpos = y2 & 0x07;

	uint8_t y1pixelmask = 0xFF << y1bitpos;
  40071a:	f001 0207 	and.w	r2, r1, #7
  40071e:	23ff      	movs	r3, #255	; 0xff
  400720:	fa03 f202 	lsl.w	r2, r3, r2
  400724:	b2d2      	uxtb	r2, r2
	uint8_t y2pixelmask = 0xFF >> (7 - y2bitpos);
  400726:	f005 0507 	and.w	r5, r5, #7
  40072a:	f1c5 0507 	rsb	r5, r5, #7
  40072e:	fa43 f505 	asr.w	r5, r3, r5
  400732:	b2ed      	uxtb	r5, r5

	/* The pixels are on the same page; combine masks */
	if (y1page == y2page) {
  400734:	4544      	cmp	r4, r8
  400736:	d020      	beq.n	40077a <gfx_mono_generic_draw_vertical_line+0x86>
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);
  400738:	463b      	mov	r3, r7
  40073a:	4601      	mov	r1, r0
  40073c:	4620      	mov	r0, r4
  40073e:	f8df 904c 	ldr.w	r9, [pc, #76]	; 40078c <gfx_mono_generic_draw_vertical_line+0x98>
  400742:	47c8      	blx	r9

		while (++y1page < y2page) {
  400744:	3401      	adds	r4, #1
  400746:	45a0      	cmp	r8, r4
  400748:	d90a      	bls.n	400760 <gfx_mono_generic_draw_vertical_line+0x6c>
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
  40074a:	f04f 0aff 	mov.w	sl, #255	; 0xff
  40074e:	463b      	mov	r3, r7
  400750:	4652      	mov	r2, sl
  400752:	4631      	mov	r1, r6
  400754:	4620      	mov	r0, r4
  400756:	47c8      	blx	r9
		while (++y1page < y2page) {
  400758:	3401      	adds	r4, #1
  40075a:	b2e4      	uxtb	r4, r4
  40075c:	45a0      	cmp	r8, r4
  40075e:	d8f6      	bhi.n	40074e <gfx_mono_generic_draw_vertical_line+0x5a>
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
  400760:	463b      	mov	r3, r7
  400762:	462a      	mov	r2, r5
  400764:	4631      	mov	r1, r6
  400766:	4640      	mov	r0, r8
  400768:	4c08      	ldr	r4, [pc, #32]	; (40078c <gfx_mono_generic_draw_vertical_line+0x98>)
  40076a:	47a0      	blx	r4
  40076c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		gfx_mono_draw_pixel(x, y, color);
  400770:	461a      	mov	r2, r3
  400772:	4b07      	ldr	r3, [pc, #28]	; (400790 <gfx_mono_generic_draw_vertical_line+0x9c>)
  400774:	4798      	blx	r3
		return;
  400776:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
  40077a:	463b      	mov	r3, r7
  40077c:	402a      	ands	r2, r5
  40077e:	4601      	mov	r1, r0
  400780:	4620      	mov	r0, r4
  400782:	4c02      	ldr	r4, [pc, #8]	; (40078c <gfx_mono_generic_draw_vertical_line+0x98>)
  400784:	47a0      	blx	r4
  400786:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40078a:	4770      	bx	lr
  40078c:	00400b01 	.word	0x00400b01
  400790:	00400a7d 	.word	0x00400a7d

00400794 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400794:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400798:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  40079c:	b18b      	cbz	r3, 4007c2 <gfx_mono_generic_draw_filled_rect+0x2e>
  40079e:	461c      	mov	r4, r3
  4007a0:	4690      	mov	r8, r2
  4007a2:	4606      	mov	r6, r0
  4007a4:	1e4d      	subs	r5, r1, #1
  4007a6:	b2ed      	uxtb	r5, r5
  4007a8:	442c      	add	r4, r5
  4007aa:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4007ac:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4007c8 <gfx_mono_generic_draw_filled_rect+0x34>
  4007b0:	463b      	mov	r3, r7
  4007b2:	4642      	mov	r2, r8
  4007b4:	4621      	mov	r1, r4
  4007b6:	4630      	mov	r0, r6
  4007b8:	47c8      	blx	r9
  4007ba:	3c01      	subs	r4, #1
  4007bc:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4007be:	42ac      	cmp	r4, r5
  4007c0:	d1f6      	bne.n	4007b0 <gfx_mono_generic_draw_filled_rect+0x1c>
  4007c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4007c6:	bf00      	nop
  4007c8:	00400625 	.word	0x00400625

004007cc <gfx_mono_generic_draw_filled_circle>:
 * \param[in]  quadrant_mask Bitmask indicating which quadrants to draw.
 */
void gfx_mono_generic_draw_filled_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t quadrant_mask)
{
  4007cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4007d0:	b085      	sub	sp, #20
  4007d2:	4681      	mov	r9, r0
  4007d4:	9100      	str	r1, [sp, #0]
  4007d6:	9301      	str	r3, [sp, #4]
  4007d8:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
  4007dc:	b17a      	cbz	r2, 4007fe <gfx_mono_generic_draw_filled_circle+0x32>
  4007de:	4616      	mov	r6, r2
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
  4007e0:	0055      	lsls	r5, r2, #1
  4007e2:	f1c5 0503 	rsb	r5, r5, #3
  4007e6:	2701      	movs	r7, #1
  4007e8:	f04f 0800 	mov.w	r8, #0

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
  4007ec:	f00b 0303 	and.w	r3, fp, #3
  4007f0:	9302      	str	r3, [sp, #8]
			gfx_mono_draw_vertical_line(x + offset_y,
  4007f2:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 4008e4 <gfx_mono_generic_draw_filled_circle+0x118>
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
  4007f6:	f00b 030c 	and.w	r3, fp, #12
  4007fa:	9303      	str	r3, [sp, #12]
  4007fc:	e04d      	b.n	40089a <gfx_mono_generic_draw_filled_circle+0xce>
		gfx_mono_draw_pixel(x, y, color);
  4007fe:	461a      	mov	r2, r3
  400800:	4b37      	ldr	r3, [pc, #220]	; (4008e0 <gfx_mono_generic_draw_filled_circle+0x114>)
  400802:	4798      	blx	r3
		}

		/* Next X. */
		++offset_x;
	}
}
  400804:	b005      	add	sp, #20
  400806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			gfx_mono_draw_vertical_line(x + offset_y,
  40080a:	9b00      	ldr	r3, [sp, #0]
  40080c:	1b19      	subs	r1, r3, r4
  40080e:	eb09 0006 	add.w	r0, r9, r6
  400812:	9b01      	ldr	r3, [sp, #4]
  400814:	463a      	mov	r2, r7
  400816:	b2c9      	uxtb	r1, r1
  400818:	b2c0      	uxtb	r0, r0
  40081a:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x + offset_x,
  40081c:	1c72      	adds	r2, r6, #1
  40081e:	9900      	ldr	r1, [sp, #0]
  400820:	1b89      	subs	r1, r1, r6
  400822:	eb09 0004 	add.w	r0, r9, r4
  400826:	9b01      	ldr	r3, [sp, #4]
  400828:	b2d2      	uxtb	r2, r2
  40082a:	b2c9      	uxtb	r1, r1
  40082c:	b2c0      	uxtb	r0, r0
  40082e:	47d0      	blx	sl
  400830:	e038      	b.n	4008a4 <gfx_mono_generic_draw_filled_circle+0xd8>
			gfx_mono_draw_vertical_line(x - offset_y,
  400832:	9b00      	ldr	r3, [sp, #0]
  400834:	1b19      	subs	r1, r3, r4
  400836:	eba9 0006 	sub.w	r0, r9, r6
  40083a:	9b01      	ldr	r3, [sp, #4]
  40083c:	463a      	mov	r2, r7
  40083e:	b2c9      	uxtb	r1, r1
  400840:	b2c0      	uxtb	r0, r0
  400842:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x - offset_x,
  400844:	1c72      	adds	r2, r6, #1
  400846:	9900      	ldr	r1, [sp, #0]
  400848:	1b89      	subs	r1, r1, r6
  40084a:	eba9 0004 	sub.w	r0, r9, r4
  40084e:	9b01      	ldr	r3, [sp, #4]
  400850:	b2d2      	uxtb	r2, r2
  400852:	b2c9      	uxtb	r1, r1
  400854:	b2c0      	uxtb	r0, r0
  400856:	47d0      	blx	sl
  400858:	e027      	b.n	4008aa <gfx_mono_generic_draw_filled_circle+0xde>
			gfx_mono_draw_vertical_line(x - offset_y,
  40085a:	eba9 0006 	sub.w	r0, r9, r6
  40085e:	9b01      	ldr	r3, [sp, #4]
  400860:	463a      	mov	r2, r7
  400862:	9900      	ldr	r1, [sp, #0]
  400864:	b2c0      	uxtb	r0, r0
  400866:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x - offset_x,
  400868:	1c72      	adds	r2, r6, #1
  40086a:	eba9 0004 	sub.w	r0, r9, r4
  40086e:	9b01      	ldr	r3, [sp, #4]
  400870:	b2d2      	uxtb	r2, r2
  400872:	9900      	ldr	r1, [sp, #0]
  400874:	b2c0      	uxtb	r0, r0
  400876:	47d0      	blx	sl
  400878:	e01a      	b.n	4008b0 <gfx_mono_generic_draw_filled_circle+0xe4>
		if (error < 0) {
  40087a:	2d00      	cmp	r5, #0
  40087c:	db2b      	blt.n	4008d6 <gfx_mono_generic_draw_filled_circle+0x10a>
			error += (((offset_x - offset_y) << 2) + 10);
  40087e:	1ba4      	subs	r4, r4, r6
  400880:	350a      	adds	r5, #10
  400882:	eb05 0484 	add.w	r4, r5, r4, lsl #2
  400886:	b225      	sxth	r5, r4
			--offset_y;
  400888:	3e01      	subs	r6, #1
  40088a:	b2f6      	uxtb	r6, r6
  40088c:	f108 0801 	add.w	r8, r8, #1
  400890:	1c7b      	adds	r3, r7, #1
  400892:	b2db      	uxtb	r3, r3
	while (offset_x <= offset_y) {
  400894:	42be      	cmp	r6, r7
  400896:	d3b5      	bcc.n	400804 <gfx_mono_generic_draw_filled_circle+0x38>
  400898:	461f      	mov	r7, r3
  40089a:	fa5f f488 	uxtb.w	r4, r8
		if (quadrant_mask & GFX_QUADRANT0) {
  40089e:	9b02      	ldr	r3, [sp, #8]
  4008a0:	2b00      	cmp	r3, #0
  4008a2:	d1b2      	bne.n	40080a <gfx_mono_generic_draw_filled_circle+0x3e>
		if (quadrant_mask & GFX_QUADRANT1) {
  4008a4:	9b03      	ldr	r3, [sp, #12]
  4008a6:	2b00      	cmp	r3, #0
  4008a8:	d1c3      	bne.n	400832 <gfx_mono_generic_draw_filled_circle+0x66>
		if (quadrant_mask & GFX_QUADRANT2) {
  4008aa:	f01b 0f30 	tst.w	fp, #48	; 0x30
  4008ae:	d1d4      	bne.n	40085a <gfx_mono_generic_draw_filled_circle+0x8e>
		if (quadrant_mask & GFX_QUADRANT3) {
  4008b0:	f01b 0fc0 	tst.w	fp, #192	; 0xc0
  4008b4:	d0e1      	beq.n	40087a <gfx_mono_generic_draw_filled_circle+0xae>
			gfx_mono_draw_vertical_line(x + offset_y,
  4008b6:	eb09 0006 	add.w	r0, r9, r6
  4008ba:	9b01      	ldr	r3, [sp, #4]
  4008bc:	463a      	mov	r2, r7
  4008be:	9900      	ldr	r1, [sp, #0]
  4008c0:	b2c0      	uxtb	r0, r0
  4008c2:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x + offset_x,
  4008c4:	1c72      	adds	r2, r6, #1
  4008c6:	eb09 0004 	add.w	r0, r9, r4
  4008ca:	9b01      	ldr	r3, [sp, #4]
  4008cc:	b2d2      	uxtb	r2, r2
  4008ce:	9900      	ldr	r1, [sp, #0]
  4008d0:	b2c0      	uxtb	r0, r0
  4008d2:	47d0      	blx	sl
  4008d4:	e7d1      	b.n	40087a <gfx_mono_generic_draw_filled_circle+0xae>
			error += ((offset_x << 2) + 6);
  4008d6:	3506      	adds	r5, #6
  4008d8:	eb05 0584 	add.w	r5, r5, r4, lsl #2
  4008dc:	b22d      	sxth	r5, r5
  4008de:	e7d5      	b.n	40088c <gfx_mono_generic_draw_filled_circle+0xc0>
  4008e0:	00400a7d 	.word	0x00400a7d
  4008e4:	004006f5 	.word	0x004006f5

004008e8 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4008e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4008ec:	b083      	sub	sp, #12
  4008ee:	4604      	mov	r4, r0
  4008f0:	4688      	mov	r8, r1
  4008f2:	4691      	mov	r9, r2
  4008f4:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4008f6:	7a5b      	ldrb	r3, [r3, #9]
  4008f8:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4008fc:	2100      	movs	r1, #0
  4008fe:	9100      	str	r1, [sp, #0]
  400900:	4649      	mov	r1, r9
  400902:	4640      	mov	r0, r8
  400904:	4d21      	ldr	r5, [pc, #132]	; (40098c <gfx_mono_draw_char+0xa4>)
  400906:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  400908:	f89b 3000 	ldrb.w	r3, [fp]
  40090c:	b113      	cbz	r3, 400914 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  40090e:	b003      	add	sp, #12
  400910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400914:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400918:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  40091a:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  40091e:	bf18      	it	ne
  400920:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  400922:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  400926:	f89b 700a 	ldrb.w	r7, [fp, #10]
  40092a:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  40092c:	fb17 f70a 	smulbb	r7, r7, sl
  400930:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400934:	f8db 3004 	ldr.w	r3, [fp, #4]
  400938:	fa13 f787 	uxtah	r7, r3, r7
  40093c:	e01f      	b.n	40097e <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  40093e:	0064      	lsls	r4, r4, #1
  400940:	b2e4      	uxtb	r4, r4
  400942:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400944:	b2eb      	uxtb	r3, r5
  400946:	429e      	cmp	r6, r3
  400948:	d910      	bls.n	40096c <gfx_mono_draw_char+0x84>
  40094a:	b2eb      	uxtb	r3, r5
  40094c:	eb08 0003 	add.w	r0, r8, r3
  400950:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  400952:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  400956:	bf08      	it	eq
  400958:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  40095c:	f014 0f80 	tst.w	r4, #128	; 0x80
  400960:	d0ed      	beq.n	40093e <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  400962:	2201      	movs	r2, #1
  400964:	4649      	mov	r1, r9
  400966:	4b0a      	ldr	r3, [pc, #40]	; (400990 <gfx_mono_draw_char+0xa8>)
  400968:	4798      	blx	r3
  40096a:	e7e8      	b.n	40093e <gfx_mono_draw_char+0x56>
		inc_y += 1;
  40096c:	f109 0901 	add.w	r9, r9, #1
  400970:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400974:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400978:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  40097c:	d0c7      	beq.n	40090e <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  40097e:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  400982:	2e00      	cmp	r6, #0
  400984:	d0f2      	beq.n	40096c <gfx_mono_draw_char+0x84>
  400986:	2500      	movs	r5, #0
  400988:	462c      	mov	r4, r5
  40098a:	e7de      	b.n	40094a <gfx_mono_draw_char+0x62>
  40098c:	00400795 	.word	0x00400795
  400990:	00400a7d 	.word	0x00400a7d

00400994 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400994:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400998:	4604      	mov	r4, r0
  40099a:	4690      	mov	r8, r2
  40099c:	461d      	mov	r5, r3
  40099e:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4009a0:	4f0d      	ldr	r7, [pc, #52]	; (4009d8 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4009a2:	460e      	mov	r6, r1
  4009a4:	e008      	b.n	4009b8 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4009a6:	7a6a      	ldrb	r2, [r5, #9]
  4009a8:	3201      	adds	r2, #1
  4009aa:	4442      	add	r2, r8
  4009ac:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4009b0:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4009b2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4009b6:	b16b      	cbz	r3, 4009d4 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4009b8:	7820      	ldrb	r0, [r4, #0]
  4009ba:	280a      	cmp	r0, #10
  4009bc:	d0f3      	beq.n	4009a6 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4009be:	280d      	cmp	r0, #13
  4009c0:	d0f7      	beq.n	4009b2 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4009c2:	462b      	mov	r3, r5
  4009c4:	4642      	mov	r2, r8
  4009c6:	4649      	mov	r1, r9
  4009c8:	47b8      	blx	r7
			x += font->width;
  4009ca:	7a2b      	ldrb	r3, [r5, #8]
  4009cc:	4499      	add	r9, r3
  4009ce:	fa5f f989 	uxtb.w	r9, r9
  4009d2:	e7ee      	b.n	4009b2 <gfx_mono_draw_string+0x1e>
}
  4009d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4009d8:	004008e9 	.word	0x004008e9

004009dc <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4009dc:	b570      	push	{r4, r5, r6, lr}
  4009de:	4604      	mov	r4, r0
  4009e0:	460d      	mov	r5, r1
  4009e2:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4009e4:	b91b      	cbnz	r3, 4009ee <gfx_mono_ssd1306_put_byte+0x12>
  4009e6:	4b0d      	ldr	r3, [pc, #52]	; (400a1c <gfx_mono_ssd1306_put_byte+0x40>)
  4009e8:	4798      	blx	r3
  4009ea:	42b0      	cmp	r0, r6
  4009ec:	d015      	beq.n	400a1a <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4009ee:	4632      	mov	r2, r6
  4009f0:	4629      	mov	r1, r5
  4009f2:	4620      	mov	r0, r4
  4009f4:	4b0a      	ldr	r3, [pc, #40]	; (400a20 <gfx_mono_ssd1306_put_byte+0x44>)
  4009f6:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  4009f8:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4009fc:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400a00:	4c08      	ldr	r4, [pc, #32]	; (400a24 <gfx_mono_ssd1306_put_byte+0x48>)
  400a02:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  400a04:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400a08:	f040 0010 	orr.w	r0, r0, #16
  400a0c:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  400a0e:	f005 000f 	and.w	r0, r5, #15
  400a12:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400a14:	4630      	mov	r0, r6
  400a16:	4b04      	ldr	r3, [pc, #16]	; (400a28 <gfx_mono_ssd1306_put_byte+0x4c>)
  400a18:	4798      	blx	r3
  400a1a:	bd70      	pop	{r4, r5, r6, pc}
  400a1c:	00400615 	.word	0x00400615
  400a20:	00400605 	.word	0x00400605
  400a24:	00400b45 	.word	0x00400b45
  400a28:	00400d65 	.word	0x00400d65

00400a2c <gfx_mono_ssd1306_init>:
{
  400a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400a30:	480d      	ldr	r0, [pc, #52]	; (400a68 <gfx_mono_ssd1306_init+0x3c>)
  400a32:	4b0e      	ldr	r3, [pc, #56]	; (400a6c <gfx_mono_ssd1306_init+0x40>)
  400a34:	4798      	blx	r3
	ssd1306_init();
  400a36:	4b0e      	ldr	r3, [pc, #56]	; (400a70 <gfx_mono_ssd1306_init+0x44>)
  400a38:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  400a3a:	2040      	movs	r0, #64	; 0x40
  400a3c:	4b0d      	ldr	r3, [pc, #52]	; (400a74 <gfx_mono_ssd1306_init+0x48>)
  400a3e:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400a40:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400a42:	f04f 0801 	mov.w	r8, #1
  400a46:	462f      	mov	r7, r5
  400a48:	4e0b      	ldr	r6, [pc, #44]	; (400a78 <gfx_mono_ssd1306_init+0x4c>)
{
  400a4a:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400a4c:	4643      	mov	r3, r8
  400a4e:	463a      	mov	r2, r7
  400a50:	b2e1      	uxtb	r1, r4
  400a52:	4628      	mov	r0, r5
  400a54:	47b0      	blx	r6
  400a56:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400a58:	2c80      	cmp	r4, #128	; 0x80
  400a5a:	d1f7      	bne.n	400a4c <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400a5c:	3501      	adds	r5, #1
  400a5e:	b2ed      	uxtb	r5, r5
  400a60:	2d04      	cmp	r5, #4
  400a62:	d1f2      	bne.n	400a4a <gfx_mono_ssd1306_init+0x1e>
  400a64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400a68:	204009f8 	.word	0x204009f8
  400a6c:	004005f9 	.word	0x004005f9
  400a70:	00400b85 	.word	0x00400b85
  400a74:	00400b45 	.word	0x00400b45
  400a78:	004009dd 	.word	0x004009dd

00400a7c <gfx_mono_ssd1306_draw_pixel>:
{
  400a7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400a80:	09c3      	lsrs	r3, r0, #7
  400a82:	d123      	bne.n	400acc <gfx_mono_ssd1306_draw_pixel+0x50>
  400a84:	291f      	cmp	r1, #31
  400a86:	d821      	bhi.n	400acc <gfx_mono_ssd1306_draw_pixel+0x50>
  400a88:	4614      	mov	r4, r2
  400a8a:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400a8c:	08cf      	lsrs	r7, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  400a8e:	eba1 01c7 	sub.w	r1, r1, r7, lsl #3
  400a92:	2601      	movs	r6, #1
  400a94:	fa06 f801 	lsl.w	r8, r6, r1
  400a98:	fa5f f988 	uxtb.w	r9, r8
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  400a9c:	4601      	mov	r1, r0
  400a9e:	4638      	mov	r0, r7
  400aa0:	4b11      	ldr	r3, [pc, #68]	; (400ae8 <gfx_mono_ssd1306_draw_pixel+0x6c>)
  400aa2:	4798      	blx	r3
  400aa4:	4606      	mov	r6, r0
    delay_us(500);
  400aa6:	f246 20c7 	movw	r0, #25287	; 0x62c7
  400aaa:	4b10      	ldr	r3, [pc, #64]	; (400aec <gfx_mono_ssd1306_draw_pixel+0x70>)
  400aac:	4798      	blx	r3
	switch (color) {
  400aae:	2c01      	cmp	r4, #1
  400ab0:	d00e      	beq.n	400ad0 <gfx_mono_ssd1306_draw_pixel+0x54>
  400ab2:	b18c      	cbz	r4, 400ad8 <gfx_mono_ssd1306_draw_pixel+0x5c>
  400ab4:	2c02      	cmp	r4, #2
  400ab6:	d013      	beq.n	400ae0 <gfx_mono_ssd1306_draw_pixel+0x64>
	gfx_mono_put_byte(page, x, pixel_value);
  400ab8:	2300      	movs	r3, #0
  400aba:	4632      	mov	r2, r6
  400abc:	4629      	mov	r1, r5
  400abe:	4638      	mov	r0, r7
  400ac0:	4c0b      	ldr	r4, [pc, #44]	; (400af0 <gfx_mono_ssd1306_draw_pixel+0x74>)
  400ac2:	47a0      	blx	r4
	 delay_us(500);
  400ac4:	f246 20c7 	movw	r0, #25287	; 0x62c7
  400ac8:	4b08      	ldr	r3, [pc, #32]	; (400aec <gfx_mono_ssd1306_draw_pixel+0x70>)
  400aca:	4798      	blx	r3
  400acc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pixel_value |= pixel_mask;
  400ad0:	ea49 0606 	orr.w	r6, r9, r6
  400ad4:	b2f6      	uxtb	r6, r6
		break;
  400ad6:	e7ef      	b.n	400ab8 <gfx_mono_ssd1306_draw_pixel+0x3c>
		pixel_value &= ~pixel_mask;
  400ad8:	ea26 0608 	bic.w	r6, r6, r8
  400adc:	b2f6      	uxtb	r6, r6
		break;
  400ade:	e7eb      	b.n	400ab8 <gfx_mono_ssd1306_draw_pixel+0x3c>
		pixel_value ^= pixel_mask;
  400ae0:	ea89 0606 	eor.w	r6, r9, r6
  400ae4:	b2f6      	uxtb	r6, r6
		break;
  400ae6:	e7e7      	b.n	400ab8 <gfx_mono_ssd1306_draw_pixel+0x3c>
  400ae8:	00400615 	.word	0x00400615
  400aec:	20400001 	.word	0x20400001
  400af0:	004009dd 	.word	0x004009dd

00400af4 <gfx_mono_ssd1306_get_byte>:
{
  400af4:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  400af6:	4b01      	ldr	r3, [pc, #4]	; (400afc <gfx_mono_ssd1306_get_byte+0x8>)
  400af8:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  400afa:	bd08      	pop	{r3, pc}
  400afc:	00400615 	.word	0x00400615

00400b00 <gfx_mono_ssd1306_mask_byte>:
	gfx_mono_ssd1306_mask_byte(0,0,0xAA,GFX_PIXEL_XOR);
\endcode
 */
void gfx_mono_ssd1306_mask_byte(gfx_coord_t page, gfx_coord_t column,
		gfx_mono_color_t pixel_mask, gfx_mono_color_t color)
{
  400b00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400b02:	4605      	mov	r5, r0
  400b04:	460e      	mov	r6, r1
  400b06:	4617      	mov	r7, r2
  400b08:	461c      	mov	r4, r3
	return gfx_mono_framebuffer_get_byte(page, column);
  400b0a:	4b0c      	ldr	r3, [pc, #48]	; (400b3c <gfx_mono_ssd1306_mask_byte+0x3c>)
  400b0c:	4798      	blx	r3
  400b0e:	4602      	mov	r2, r0
	gfx_mono_color_t temp = gfx_mono_get_byte(page, column);

	switch (color) {
  400b10:	2c01      	cmp	r4, #1
  400b12:	d008      	beq.n	400b26 <gfx_mono_ssd1306_mask_byte+0x26>
  400b14:	b154      	cbz	r4, 400b2c <gfx_mono_ssd1306_mask_byte+0x2c>
  400b16:	2c02      	cmp	r4, #2
  400b18:	d00c      	beq.n	400b34 <gfx_mono_ssd1306_mask_byte+0x34>

	default:
		break;
	}

	gfx_mono_put_byte(page, column, temp);
  400b1a:	2300      	movs	r3, #0
  400b1c:	4631      	mov	r1, r6
  400b1e:	4628      	mov	r0, r5
  400b20:	4c07      	ldr	r4, [pc, #28]	; (400b40 <gfx_mono_ssd1306_mask_byte+0x40>)
  400b22:	47a0      	blx	r4
  400b24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		temp |= pixel_mask;
  400b26:	433a      	orrs	r2, r7
  400b28:	b2d2      	uxtb	r2, r2
		break;
  400b2a:	e7f6      	b.n	400b1a <gfx_mono_ssd1306_mask_byte+0x1a>
		temp &= ~pixel_mask;
  400b2c:	ea20 0207 	bic.w	r2, r0, r7
  400b30:	b2d2      	uxtb	r2, r2
		break;
  400b32:	e7f2      	b.n	400b1a <gfx_mono_ssd1306_mask_byte+0x1a>
		temp ^= pixel_mask;
  400b34:	407a      	eors	r2, r7
  400b36:	b2d2      	uxtb	r2, r2
		break;
  400b38:	e7ef      	b.n	400b1a <gfx_mono_ssd1306_mask_byte+0x1a>
  400b3a:	bf00      	nop
  400b3c:	00400615 	.word	0x00400615
  400b40:	004009dd 	.word	0x004009dd

00400b44 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  400b44:	b538      	push	{r3, r4, r5, lr}
  400b46:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400b48:	2208      	movs	r2, #8
  400b4a:	4b09      	ldr	r3, [pc, #36]	; (400b70 <ssd1306_write_command+0x2c>)
  400b4c:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400b4e:	4c09      	ldr	r4, [pc, #36]	; (400b74 <ssd1306_write_command+0x30>)
  400b50:	2101      	movs	r1, #1
  400b52:	4620      	mov	r0, r4
  400b54:	4b08      	ldr	r3, [pc, #32]	; (400b78 <ssd1306_write_command+0x34>)
  400b56:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400b58:	2301      	movs	r3, #1
  400b5a:	461a      	mov	r2, r3
  400b5c:	4629      	mov	r1, r5
  400b5e:	4620      	mov	r0, r4
  400b60:	4c06      	ldr	r4, [pc, #24]	; (400b7c <ssd1306_write_command+0x38>)
  400b62:	47a0      	blx	r4
	delay_us(10);
  400b64:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400b68:	4b05      	ldr	r3, [pc, #20]	; (400b80 <ssd1306_write_command+0x3c>)
  400b6a:	4798      	blx	r3
  400b6c:	bd38      	pop	{r3, r4, r5, pc}
  400b6e:	bf00      	nop
  400b70:	400e1000 	.word	0x400e1000
  400b74:	40008000 	.word	0x40008000
  400b78:	00400431 	.word	0x00400431
  400b7c:	00400447 	.word	0x00400447
  400b80:	20400001 	.word	0x20400001

00400b84 <ssd1306_init>:
{
  400b84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400b88:	4d66      	ldr	r5, [pc, #408]	; (400d24 <ssd1306_init+0x1a0>)
  400b8a:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  400b8e:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400b90:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400b94:	4b64      	ldr	r3, [pc, #400]	; (400d28 <ssd1306_init+0x1a4>)
  400b96:	2708      	movs	r7, #8
  400b98:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400b9a:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400b9e:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400ba0:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400ba4:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  400ba6:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400ba8:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400bac:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  400bae:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400bb2:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400bb4:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  400bb6:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400bba:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400bbc:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400bbe:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400bc2:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400bc4:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400bc6:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400bca:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400bcc:	f022 0208 	bic.w	r2, r2, #8
  400bd0:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400bd2:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400bd4:	f022 0208 	bic.w	r2, r2, #8
  400bd8:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  400bda:	601f      	str	r7, [r3, #0]
  400bdc:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400bde:	631f      	str	r7, [r3, #48]	; 0x30
  400be0:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400be2:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400d60 <ssd1306_init+0x1dc>
  400be6:	2300      	movs	r3, #0
  400be8:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400bec:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400bf0:	4640      	mov	r0, r8
  400bf2:	4c4e      	ldr	r4, [pc, #312]	; (400d2c <ssd1306_init+0x1a8>)
  400bf4:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400bf6:	2300      	movs	r3, #0
  400bf8:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400bfc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c00:	4640      	mov	r0, r8
  400c02:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400c04:	2300      	movs	r3, #0
  400c06:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400c0a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c0e:	4640      	mov	r0, r8
  400c10:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400c12:	2300      	movs	r3, #0
  400c14:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400c18:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c1c:	4640      	mov	r0, r8
  400c1e:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400c20:	2300      	movs	r3, #0
  400c22:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400c26:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c2a:	4640      	mov	r0, r8
  400c2c:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400c2e:	2300      	movs	r3, #0
  400c30:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400c34:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c38:	4640      	mov	r0, r8
  400c3a:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400c3c:	4c3c      	ldr	r4, [pc, #240]	; (400d30 <ssd1306_init+0x1ac>)
  400c3e:	f04f 0902 	mov.w	r9, #2
  400c42:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400c46:	f04f 0880 	mov.w	r8, #128	; 0x80
  400c4a:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400c4e:	6863      	ldr	r3, [r4, #4]
  400c50:	f043 0301 	orr.w	r3, r3, #1
  400c54:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400c56:	463a      	mov	r2, r7
  400c58:	2101      	movs	r1, #1
  400c5a:	4620      	mov	r0, r4
  400c5c:	4b35      	ldr	r3, [pc, #212]	; (400d34 <ssd1306_init+0x1b0>)
  400c5e:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400c60:	2200      	movs	r2, #0
  400c62:	2101      	movs	r1, #1
  400c64:	4620      	mov	r0, r4
  400c66:	4b34      	ldr	r3, [pc, #208]	; (400d38 <ssd1306_init+0x1b4>)
  400c68:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400c6a:	2200      	movs	r2, #0
  400c6c:	2101      	movs	r1, #1
  400c6e:	4620      	mov	r0, r4
  400c70:	4b32      	ldr	r3, [pc, #200]	; (400d3c <ssd1306_init+0x1b8>)
  400c72:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400c74:	6863      	ldr	r3, [r4, #4]
  400c76:	f023 0302 	bic.w	r3, r3, #2
  400c7a:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400c7c:	2200      	movs	r2, #0
  400c7e:	2101      	movs	r1, #1
  400c80:	4620      	mov	r0, r4
  400c82:	4b2f      	ldr	r3, [pc, #188]	; (400d40 <ssd1306_init+0x1bc>)
  400c84:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400c86:	6863      	ldr	r3, [r4, #4]
  400c88:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400c8c:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400c8e:	6863      	ldr	r3, [r4, #4]
  400c90:	f043 0310 	orr.w	r3, r3, #16
  400c94:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  400c96:	492b      	ldr	r1, [pc, #172]	; (400d44 <ssd1306_init+0x1c0>)
  400c98:	482b      	ldr	r0, [pc, #172]	; (400d48 <ssd1306_init+0x1c4>)
  400c9a:	4b2c      	ldr	r3, [pc, #176]	; (400d4c <ssd1306_init+0x1c8>)
  400c9c:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  400c9e:	b2c2      	uxtb	r2, r0
  400ca0:	2101      	movs	r1, #1
  400ca2:	4620      	mov	r0, r4
  400ca4:	4b2a      	ldr	r3, [pc, #168]	; (400d50 <ssd1306_init+0x1cc>)
  400ca6:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400ca8:	4620      	mov	r0, r4
  400caa:	4b2a      	ldr	r3, [pc, #168]	; (400d54 <ssd1306_init+0x1d0>)
  400cac:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400cae:	2301      	movs	r3, #1
  400cb0:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400cb2:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400cb4:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400cb8:	4c27      	ldr	r4, [pc, #156]	; (400d58 <ssd1306_init+0x1d4>)
  400cba:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400cbc:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400cbe:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400cc2:	47a0      	blx	r4
  400cc4:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400cc6:	20a8      	movs	r0, #168	; 0xa8
  400cc8:	4c24      	ldr	r4, [pc, #144]	; (400d5c <ssd1306_init+0x1d8>)
  400cca:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400ccc:	201f      	movs	r0, #31
  400cce:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400cd0:	20d3      	movs	r0, #211	; 0xd3
  400cd2:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400cd4:	2000      	movs	r0, #0
  400cd6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400cd8:	2040      	movs	r0, #64	; 0x40
  400cda:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400cdc:	20a1      	movs	r0, #161	; 0xa1
  400cde:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400ce0:	20c8      	movs	r0, #200	; 0xc8
  400ce2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400ce4:	20da      	movs	r0, #218	; 0xda
  400ce6:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400ce8:	4648      	mov	r0, r9
  400cea:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400cec:	2081      	movs	r0, #129	; 0x81
  400cee:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400cf0:	208f      	movs	r0, #143	; 0x8f
  400cf2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400cf4:	20a4      	movs	r0, #164	; 0xa4
  400cf6:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400cf8:	20a6      	movs	r0, #166	; 0xa6
  400cfa:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400cfc:	20d5      	movs	r0, #213	; 0xd5
  400cfe:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400d00:	4640      	mov	r0, r8
  400d02:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400d04:	208d      	movs	r0, #141	; 0x8d
  400d06:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400d08:	2014      	movs	r0, #20
  400d0a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400d0c:	20db      	movs	r0, #219	; 0xdb
  400d0e:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400d10:	2040      	movs	r0, #64	; 0x40
  400d12:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400d14:	20d9      	movs	r0, #217	; 0xd9
  400d16:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400d18:	20f1      	movs	r0, #241	; 0xf1
  400d1a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400d1c:	20af      	movs	r0, #175	; 0xaf
  400d1e:	47a0      	blx	r4
  400d20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400d24:	400e1200 	.word	0x400e1200
  400d28:	400e1000 	.word	0x400e1000
  400d2c:	0040104d 	.word	0x0040104d
  400d30:	40008000 	.word	0x40008000
  400d34:	004004b7 	.word	0x004004b7
  400d38:	0040047b 	.word	0x0040047b
  400d3c:	00400499 	.word	0x00400499
  400d40:	004004fd 	.word	0x004004fd
  400d44:	08f0d180 	.word	0x08f0d180
  400d48:	000f4240 	.word	0x000f4240
  400d4c:	00400511 	.word	0x00400511
  400d50:	00400527 	.word	0x00400527
  400d54:	00400405 	.word	0x00400405
  400d58:	20400001 	.word	0x20400001
  400d5c:	00400b45 	.word	0x00400b45
  400d60:	400e1400 	.word	0x400e1400

00400d64 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400d64:	b538      	push	{r3, r4, r5, lr}
  400d66:	4605      	mov	r5, r0
  400d68:	2208      	movs	r2, #8
  400d6a:	4b09      	ldr	r3, [pc, #36]	; (400d90 <ssd1306_write_data+0x2c>)
  400d6c:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400d6e:	4c09      	ldr	r4, [pc, #36]	; (400d94 <ssd1306_write_data+0x30>)
  400d70:	2101      	movs	r1, #1
  400d72:	4620      	mov	r0, r4
  400d74:	4b08      	ldr	r3, [pc, #32]	; (400d98 <ssd1306_write_data+0x34>)
  400d76:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400d78:	2301      	movs	r3, #1
  400d7a:	461a      	mov	r2, r3
  400d7c:	4629      	mov	r1, r5
  400d7e:	4620      	mov	r0, r4
  400d80:	4c06      	ldr	r4, [pc, #24]	; (400d9c <ssd1306_write_data+0x38>)
  400d82:	47a0      	blx	r4
	delay_us(10);
  400d84:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400d88:	4b05      	ldr	r3, [pc, #20]	; (400da0 <ssd1306_write_data+0x3c>)
  400d8a:	4798      	blx	r3
  400d8c:	bd38      	pop	{r3, r4, r5, pc}
  400d8e:	bf00      	nop
  400d90:	400e1000 	.word	0x400e1000
  400d94:	40008000 	.word	0x40008000
  400d98:	00400431 	.word	0x00400431
  400d9c:	00400447 	.word	0x00400447
  400da0:	20400001 	.word	0x20400001

00400da4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400da4:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400da6:	4810      	ldr	r0, [pc, #64]	; (400de8 <sysclk_init+0x44>)
  400da8:	4b10      	ldr	r3, [pc, #64]	; (400dec <sysclk_init+0x48>)
  400daa:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400dac:	213e      	movs	r1, #62	; 0x3e
  400dae:	2000      	movs	r0, #0
  400db0:	4b0f      	ldr	r3, [pc, #60]	; (400df0 <sysclk_init+0x4c>)
  400db2:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400db4:	4c0f      	ldr	r4, [pc, #60]	; (400df4 <sysclk_init+0x50>)
  400db6:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400db8:	2800      	cmp	r0, #0
  400dba:	d0fc      	beq.n	400db6 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400dbc:	4b0e      	ldr	r3, [pc, #56]	; (400df8 <sysclk_init+0x54>)
  400dbe:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400dc0:	4a0e      	ldr	r2, [pc, #56]	; (400dfc <sysclk_init+0x58>)
  400dc2:	4b0f      	ldr	r3, [pc, #60]	; (400e00 <sysclk_init+0x5c>)
  400dc4:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400dc6:	4c0f      	ldr	r4, [pc, #60]	; (400e04 <sysclk_init+0x60>)
  400dc8:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400dca:	2800      	cmp	r0, #0
  400dcc:	d0fc      	beq.n	400dc8 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400dce:	2002      	movs	r0, #2
  400dd0:	4b0d      	ldr	r3, [pc, #52]	; (400e08 <sysclk_init+0x64>)
  400dd2:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400dd4:	2000      	movs	r0, #0
  400dd6:	4b0d      	ldr	r3, [pc, #52]	; (400e0c <sysclk_init+0x68>)
  400dd8:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400dda:	4b0d      	ldr	r3, [pc, #52]	; (400e10 <sysclk_init+0x6c>)
  400ddc:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400dde:	4802      	ldr	r0, [pc, #8]	; (400de8 <sysclk_init+0x44>)
  400de0:	4b02      	ldr	r3, [pc, #8]	; (400dec <sysclk_init+0x48>)
  400de2:	4798      	blx	r3
  400de4:	bd10      	pop	{r4, pc}
  400de6:	bf00      	nop
  400de8:	11e1a300 	.word	0x11e1a300
  400dec:	004015ed 	.word	0x004015ed
  400df0:	004012e9 	.word	0x004012e9
  400df4:	0040133d 	.word	0x0040133d
  400df8:	0040134d 	.word	0x0040134d
  400dfc:	20183f01 	.word	0x20183f01
  400e00:	400e0600 	.word	0x400e0600
  400e04:	0040135d 	.word	0x0040135d
  400e08:	0040124d 	.word	0x0040124d
  400e0c:	00401285 	.word	0x00401285
  400e10:	004014e1 	.word	0x004014e1

00400e14 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400e14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400e16:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400e1a:	4b48      	ldr	r3, [pc, #288]	; (400f3c <board_init+0x128>)
  400e1c:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400e1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400e22:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400e26:	4b46      	ldr	r3, [pc, #280]	; (400f40 <board_init+0x12c>)
  400e28:	2200      	movs	r2, #0
  400e2a:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400e2e:	695a      	ldr	r2, [r3, #20]
  400e30:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400e34:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400e36:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400e3a:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400e3e:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400e42:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400e46:	f007 0007 	and.w	r0, r7, #7
  400e4a:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400e4c:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400e50:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400e54:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400e58:	f3bf 8f4f 	dsb	sy
  400e5c:	f04f 34ff 	mov.w	r4, #4294967295
  400e60:	fa04 fc00 	lsl.w	ip, r4, r0
  400e64:	fa06 f000 	lsl.w	r0, r6, r0
  400e68:	fa04 f40e 	lsl.w	r4, r4, lr
  400e6c:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400e70:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400e72:	463a      	mov	r2, r7
  400e74:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400e76:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400e7a:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400e7e:	3a01      	subs	r2, #1
  400e80:	4423      	add	r3, r4
  400e82:	f1b2 3fff 	cmp.w	r2, #4294967295
  400e86:	d1f6      	bne.n	400e76 <board_init+0x62>
        } while(sets--);
  400e88:	3e01      	subs	r6, #1
  400e8a:	4460      	add	r0, ip
  400e8c:	f1b6 3fff 	cmp.w	r6, #4294967295
  400e90:	d1ef      	bne.n	400e72 <board_init+0x5e>
  400e92:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400e96:	4b2a      	ldr	r3, [pc, #168]	; (400f40 <board_init+0x12c>)
  400e98:	695a      	ldr	r2, [r3, #20]
  400e9a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400e9e:	615a      	str	r2, [r3, #20]
  400ea0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400ea4:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400ea8:	4a26      	ldr	r2, [pc, #152]	; (400f44 <board_init+0x130>)
  400eaa:	4927      	ldr	r1, [pc, #156]	; (400f48 <board_init+0x134>)
  400eac:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400eae:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400eb2:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400eb4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400eb8:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400ebc:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400ec0:	f022 0201 	bic.w	r2, r2, #1
  400ec4:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400ec8:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400ecc:	f022 0201 	bic.w	r2, r2, #1
  400ed0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400ed4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400ed8:	f3bf 8f6f 	isb	sy
  400edc:	200a      	movs	r0, #10
  400ede:	4c1b      	ldr	r4, [pc, #108]	; (400f4c <board_init+0x138>)
  400ee0:	47a0      	blx	r4
  400ee2:	200b      	movs	r0, #11
  400ee4:	47a0      	blx	r4
  400ee6:	200c      	movs	r0, #12
  400ee8:	47a0      	blx	r4
  400eea:	2010      	movs	r0, #16
  400eec:	47a0      	blx	r4
  400eee:	2011      	movs	r0, #17
  400ef0:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400ef2:	4b17      	ldr	r3, [pc, #92]	; (400f50 <board_init+0x13c>)
  400ef4:	f44f 7280 	mov.w	r2, #256	; 0x100
  400ef8:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400efa:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400efe:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400f00:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400f04:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400f08:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400f0a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400f0e:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400f10:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400f14:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400f16:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400f18:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400f1c:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400f1e:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400f22:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400f24:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400f26:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400f2a:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400f2c:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400f30:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400f34:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400f38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400f3a:	bf00      	nop
  400f3c:	400e1850 	.word	0x400e1850
  400f40:	e000ed00 	.word	0xe000ed00
  400f44:	400e0c00 	.word	0x400e0c00
  400f48:	5a00080c 	.word	0x5a00080c
  400f4c:	0040136d 	.word	0x0040136d
  400f50:	400e1200 	.word	0x400e1200

00400f54 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400f54:	6301      	str	r1, [r0, #48]	; 0x30
  400f56:	4770      	bx	lr

00400f58 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400f58:	6341      	str	r1, [r0, #52]	; 0x34
  400f5a:	4770      	bx	lr

00400f5c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400f5c:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400f5e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400f62:	d03a      	beq.n	400fda <pio_set_peripheral+0x7e>
  400f64:	d813      	bhi.n	400f8e <pio_set_peripheral+0x32>
  400f66:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400f6a:	d025      	beq.n	400fb8 <pio_set_peripheral+0x5c>
  400f6c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400f70:	d10a      	bne.n	400f88 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400f72:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400f74:	4313      	orrs	r3, r2
  400f76:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400f78:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400f7a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400f7c:	400b      	ands	r3, r1
  400f7e:	ea23 0302 	bic.w	r3, r3, r2
  400f82:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400f84:	6042      	str	r2, [r0, #4]
  400f86:	4770      	bx	lr
	switch (ul_type) {
  400f88:	2900      	cmp	r1, #0
  400f8a:	d1fb      	bne.n	400f84 <pio_set_peripheral+0x28>
  400f8c:	4770      	bx	lr
  400f8e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400f92:	d021      	beq.n	400fd8 <pio_set_peripheral+0x7c>
  400f94:	d809      	bhi.n	400faa <pio_set_peripheral+0x4e>
  400f96:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400f9a:	d1f3      	bne.n	400f84 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400f9c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400f9e:	4313      	orrs	r3, r2
  400fa0:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400fa2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400fa4:	4313      	orrs	r3, r2
  400fa6:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400fa8:	e7ec      	b.n	400f84 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400faa:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400fae:	d013      	beq.n	400fd8 <pio_set_peripheral+0x7c>
  400fb0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400fb4:	d010      	beq.n	400fd8 <pio_set_peripheral+0x7c>
  400fb6:	e7e5      	b.n	400f84 <pio_set_peripheral+0x28>
{
  400fb8:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400fba:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400fbc:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400fbe:	43d3      	mvns	r3, r2
  400fc0:	4021      	ands	r1, r4
  400fc2:	461c      	mov	r4, r3
  400fc4:	4019      	ands	r1, r3
  400fc6:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400fc8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400fca:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400fcc:	400b      	ands	r3, r1
  400fce:	4023      	ands	r3, r4
  400fd0:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400fd2:	6042      	str	r2, [r0, #4]
}
  400fd4:	f85d 4b04 	ldr.w	r4, [sp], #4
  400fd8:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400fda:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400fdc:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400fde:	400b      	ands	r3, r1
  400fe0:	ea23 0302 	bic.w	r3, r3, r2
  400fe4:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400fe6:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400fe8:	4313      	orrs	r3, r2
  400fea:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400fec:	e7ca      	b.n	400f84 <pio_set_peripheral+0x28>

00400fee <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400fee:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400ff0:	f012 0f01 	tst.w	r2, #1
  400ff4:	d10d      	bne.n	401012 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400ff6:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400ff8:	f012 0f0a 	tst.w	r2, #10
  400ffc:	d00b      	beq.n	401016 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400ffe:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  401000:	f012 0f02 	tst.w	r2, #2
  401004:	d109      	bne.n	40101a <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  401006:	f012 0f08 	tst.w	r2, #8
  40100a:	d008      	beq.n	40101e <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  40100c:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  401010:	e005      	b.n	40101e <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  401012:	6641      	str	r1, [r0, #100]	; 0x64
  401014:	e7f0      	b.n	400ff8 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  401016:	6241      	str	r1, [r0, #36]	; 0x24
  401018:	e7f2      	b.n	401000 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  40101a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  40101e:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  401020:	6001      	str	r1, [r0, #0]
  401022:	4770      	bx	lr

00401024 <pio_set_output>:
{
  401024:	b410      	push	{r4}
  401026:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  401028:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40102a:	b94c      	cbnz	r4, 401040 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  40102c:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  40102e:	b14b      	cbz	r3, 401044 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  401030:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  401032:	b94a      	cbnz	r2, 401048 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  401034:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  401036:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  401038:	6001      	str	r1, [r0, #0]
}
  40103a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40103e:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  401040:	6641      	str	r1, [r0, #100]	; 0x64
  401042:	e7f4      	b.n	40102e <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  401044:	6541      	str	r1, [r0, #84]	; 0x54
  401046:	e7f4      	b.n	401032 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  401048:	6301      	str	r1, [r0, #48]	; 0x30
  40104a:	e7f4      	b.n	401036 <pio_set_output+0x12>

0040104c <pio_configure>:
{
  40104c:	b570      	push	{r4, r5, r6, lr}
  40104e:	b082      	sub	sp, #8
  401050:	4605      	mov	r5, r0
  401052:	4616      	mov	r6, r2
  401054:	461c      	mov	r4, r3
	switch (ul_type) {
  401056:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  40105a:	d014      	beq.n	401086 <pio_configure+0x3a>
  40105c:	d90a      	bls.n	401074 <pio_configure+0x28>
  40105e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  401062:	d024      	beq.n	4010ae <pio_configure+0x62>
  401064:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  401068:	d021      	beq.n	4010ae <pio_configure+0x62>
  40106a:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  40106e:	d017      	beq.n	4010a0 <pio_configure+0x54>
		return 0;
  401070:	2000      	movs	r0, #0
  401072:	e01a      	b.n	4010aa <pio_configure+0x5e>
	switch (ul_type) {
  401074:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  401078:	d005      	beq.n	401086 <pio_configure+0x3a>
  40107a:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  40107e:	d002      	beq.n	401086 <pio_configure+0x3a>
  401080:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  401084:	d1f4      	bne.n	401070 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  401086:	4632      	mov	r2, r6
  401088:	4628      	mov	r0, r5
  40108a:	4b11      	ldr	r3, [pc, #68]	; (4010d0 <pio_configure+0x84>)
  40108c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40108e:	f014 0f01 	tst.w	r4, #1
  401092:	d102      	bne.n	40109a <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  401094:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  401096:	2001      	movs	r0, #1
  401098:	e007      	b.n	4010aa <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  40109a:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  40109c:	2001      	movs	r0, #1
  40109e:	e004      	b.n	4010aa <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  4010a0:	461a      	mov	r2, r3
  4010a2:	4631      	mov	r1, r6
  4010a4:	4b0b      	ldr	r3, [pc, #44]	; (4010d4 <pio_configure+0x88>)
  4010a6:	4798      	blx	r3
	return 1;
  4010a8:	2001      	movs	r0, #1
}
  4010aa:	b002      	add	sp, #8
  4010ac:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  4010ae:	f004 0301 	and.w	r3, r4, #1
  4010b2:	9300      	str	r3, [sp, #0]
  4010b4:	f3c4 0380 	ubfx	r3, r4, #2, #1
  4010b8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4010bc:	bf14      	ite	ne
  4010be:	2200      	movne	r2, #0
  4010c0:	2201      	moveq	r2, #1
  4010c2:	4631      	mov	r1, r6
  4010c4:	4628      	mov	r0, r5
  4010c6:	4c04      	ldr	r4, [pc, #16]	; (4010d8 <pio_configure+0x8c>)
  4010c8:	47a0      	blx	r4
	return 1;
  4010ca:	2001      	movs	r0, #1
		break;
  4010cc:	e7ed      	b.n	4010aa <pio_configure+0x5e>
  4010ce:	bf00      	nop
  4010d0:	00400f5d 	.word	0x00400f5d
  4010d4:	00400fef 	.word	0x00400fef
  4010d8:	00401025 	.word	0x00401025

004010dc <pio_get_output_data_status>:
	if ((p_pio->PIO_ODSR & ul_mask) == 0) {
  4010dc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4010de:	420b      	tst	r3, r1
}
  4010e0:	bf14      	ite	ne
  4010e2:	2001      	movne	r0, #1
  4010e4:	2000      	moveq	r0, #0
  4010e6:	4770      	bx	lr

004010e8 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  4010e8:	f012 0f10 	tst.w	r2, #16
  4010ec:	d012      	beq.n	401114 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  4010ee:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4010f2:	f012 0f20 	tst.w	r2, #32
  4010f6:	d007      	beq.n	401108 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  4010f8:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  4010fc:	f012 0f40 	tst.w	r2, #64	; 0x40
  401100:	d005      	beq.n	40110e <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  401102:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  401106:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  401108:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  40110c:	e7f6      	b.n	4010fc <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  40110e:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  401112:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  401114:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  401118:	4770      	bx	lr

0040111a <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  40111a:	6401      	str	r1, [r0, #64]	; 0x40
  40111c:	4770      	bx	lr

0040111e <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  40111e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  401120:	4770      	bx	lr

00401122 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  401122:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  401124:	4770      	bx	lr
	...

00401128 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  401128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40112c:	4604      	mov	r4, r0
  40112e:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  401130:	4b0e      	ldr	r3, [pc, #56]	; (40116c <pio_handler_process+0x44>)
  401132:	4798      	blx	r3
  401134:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  401136:	4620      	mov	r0, r4
  401138:	4b0d      	ldr	r3, [pc, #52]	; (401170 <pio_handler_process+0x48>)
  40113a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  40113c:	4005      	ands	r5, r0
  40113e:	d013      	beq.n	401168 <pio_handler_process+0x40>
  401140:	4c0c      	ldr	r4, [pc, #48]	; (401174 <pio_handler_process+0x4c>)
  401142:	f104 0660 	add.w	r6, r4, #96	; 0x60
  401146:	e003      	b.n	401150 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  401148:	42b4      	cmp	r4, r6
  40114a:	d00d      	beq.n	401168 <pio_handler_process+0x40>
  40114c:	3410      	adds	r4, #16
		while (status != 0) {
  40114e:	b15d      	cbz	r5, 401168 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  401150:	6820      	ldr	r0, [r4, #0]
  401152:	4540      	cmp	r0, r8
  401154:	d1f8      	bne.n	401148 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  401156:	6861      	ldr	r1, [r4, #4]
  401158:	4229      	tst	r1, r5
  40115a:	d0f5      	beq.n	401148 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  40115c:	68e3      	ldr	r3, [r4, #12]
  40115e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  401160:	6863      	ldr	r3, [r4, #4]
  401162:	ea25 0503 	bic.w	r5, r5, r3
  401166:	e7ef      	b.n	401148 <pio_handler_process+0x20>
  401168:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40116c:	0040111f 	.word	0x0040111f
  401170:	00401123 	.word	0x00401123
  401174:	20400bf8 	.word	0x20400bf8

00401178 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  401178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  40117a:	4c18      	ldr	r4, [pc, #96]	; (4011dc <pio_handler_set+0x64>)
  40117c:	6826      	ldr	r6, [r4, #0]
  40117e:	2e06      	cmp	r6, #6
  401180:	d82a      	bhi.n	4011d8 <pio_handler_set+0x60>
  401182:	f04f 0c00 	mov.w	ip, #0
  401186:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  401188:	4f15      	ldr	r7, [pc, #84]	; (4011e0 <pio_handler_set+0x68>)
  40118a:	e004      	b.n	401196 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  40118c:	3401      	adds	r4, #1
  40118e:	b2e4      	uxtb	r4, r4
  401190:	46a4      	mov	ip, r4
  401192:	42a6      	cmp	r6, r4
  401194:	d309      	bcc.n	4011aa <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  401196:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  401198:	0125      	lsls	r5, r4, #4
  40119a:	597d      	ldr	r5, [r7, r5]
  40119c:	428d      	cmp	r5, r1
  40119e:	d1f5      	bne.n	40118c <pio_handler_set+0x14>
  4011a0:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  4011a4:	686d      	ldr	r5, [r5, #4]
  4011a6:	4295      	cmp	r5, r2
  4011a8:	d1f0      	bne.n	40118c <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4011aa:	4d0d      	ldr	r5, [pc, #52]	; (4011e0 <pio_handler_set+0x68>)
  4011ac:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  4011b0:	eb05 040e 	add.w	r4, r5, lr
  4011b4:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  4011b8:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4011ba:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4011bc:	9906      	ldr	r1, [sp, #24]
  4011be:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4011c0:	3601      	adds	r6, #1
  4011c2:	4566      	cmp	r6, ip
  4011c4:	d005      	beq.n	4011d2 <pio_handler_set+0x5a>
  4011c6:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  4011c8:	461a      	mov	r2, r3
  4011ca:	4b06      	ldr	r3, [pc, #24]	; (4011e4 <pio_handler_set+0x6c>)
  4011cc:	4798      	blx	r3

	return 0;
  4011ce:	2000      	movs	r0, #0
  4011d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  4011d2:	4902      	ldr	r1, [pc, #8]	; (4011dc <pio_handler_set+0x64>)
  4011d4:	600e      	str	r6, [r1, #0]
  4011d6:	e7f6      	b.n	4011c6 <pio_handler_set+0x4e>
		return 1;
  4011d8:	2001      	movs	r0, #1
}
  4011da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4011dc:	20400c68 	.word	0x20400c68
  4011e0:	20400bf8 	.word	0x20400bf8
  4011e4:	004010e9 	.word	0x004010e9

004011e8 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4011e8:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4011ea:	210a      	movs	r1, #10
  4011ec:	4801      	ldr	r0, [pc, #4]	; (4011f4 <PIOA_Handler+0xc>)
  4011ee:	4b02      	ldr	r3, [pc, #8]	; (4011f8 <PIOA_Handler+0x10>)
  4011f0:	4798      	blx	r3
  4011f2:	bd08      	pop	{r3, pc}
  4011f4:	400e0e00 	.word	0x400e0e00
  4011f8:	00401129 	.word	0x00401129

004011fc <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  4011fc:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  4011fe:	210b      	movs	r1, #11
  401200:	4801      	ldr	r0, [pc, #4]	; (401208 <PIOB_Handler+0xc>)
  401202:	4b02      	ldr	r3, [pc, #8]	; (40120c <PIOB_Handler+0x10>)
  401204:	4798      	blx	r3
  401206:	bd08      	pop	{r3, pc}
  401208:	400e1000 	.word	0x400e1000
  40120c:	00401129 	.word	0x00401129

00401210 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  401210:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  401212:	210c      	movs	r1, #12
  401214:	4801      	ldr	r0, [pc, #4]	; (40121c <PIOC_Handler+0xc>)
  401216:	4b02      	ldr	r3, [pc, #8]	; (401220 <PIOC_Handler+0x10>)
  401218:	4798      	blx	r3
  40121a:	bd08      	pop	{r3, pc}
  40121c:	400e1200 	.word	0x400e1200
  401220:	00401129 	.word	0x00401129

00401224 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  401224:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  401226:	2110      	movs	r1, #16
  401228:	4801      	ldr	r0, [pc, #4]	; (401230 <PIOD_Handler+0xc>)
  40122a:	4b02      	ldr	r3, [pc, #8]	; (401234 <PIOD_Handler+0x10>)
  40122c:	4798      	blx	r3
  40122e:	bd08      	pop	{r3, pc}
  401230:	400e1400 	.word	0x400e1400
  401234:	00401129 	.word	0x00401129

00401238 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  401238:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  40123a:	2111      	movs	r1, #17
  40123c:	4801      	ldr	r0, [pc, #4]	; (401244 <PIOE_Handler+0xc>)
  40123e:	4b02      	ldr	r3, [pc, #8]	; (401248 <PIOE_Handler+0x10>)
  401240:	4798      	blx	r3
  401242:	bd08      	pop	{r3, pc}
  401244:	400e1600 	.word	0x400e1600
  401248:	00401129 	.word	0x00401129

0040124c <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  40124c:	2803      	cmp	r0, #3
  40124e:	d011      	beq.n	401274 <pmc_mck_set_division+0x28>
  401250:	2804      	cmp	r0, #4
  401252:	d012      	beq.n	40127a <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  401254:	2802      	cmp	r0, #2
  401256:	bf0c      	ite	eq
  401258:	f44f 7180 	moveq.w	r1, #256	; 0x100
  40125c:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  40125e:	4a08      	ldr	r2, [pc, #32]	; (401280 <pmc_mck_set_division+0x34>)
  401260:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401262:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  401266:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  401268:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40126a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40126c:	f013 0f08 	tst.w	r3, #8
  401270:	d0fb      	beq.n	40126a <pmc_mck_set_division+0x1e>
}
  401272:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  401274:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  401278:	e7f1      	b.n	40125e <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  40127a:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  40127e:	e7ee      	b.n	40125e <pmc_mck_set_division+0x12>
  401280:	400e0600 	.word	0x400e0600

00401284 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  401284:	4a17      	ldr	r2, [pc, #92]	; (4012e4 <pmc_switch_mck_to_pllack+0x60>)
  401286:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401288:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  40128c:	4318      	orrs	r0, r3
  40128e:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401290:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401292:	f013 0f08 	tst.w	r3, #8
  401296:	d10a      	bne.n	4012ae <pmc_switch_mck_to_pllack+0x2a>
  401298:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  40129c:	4911      	ldr	r1, [pc, #68]	; (4012e4 <pmc_switch_mck_to_pllack+0x60>)
  40129e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4012a0:	f012 0f08 	tst.w	r2, #8
  4012a4:	d103      	bne.n	4012ae <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4012a6:	3b01      	subs	r3, #1
  4012a8:	d1f9      	bne.n	40129e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  4012aa:	2001      	movs	r0, #1
  4012ac:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4012ae:	4a0d      	ldr	r2, [pc, #52]	; (4012e4 <pmc_switch_mck_to_pllack+0x60>)
  4012b0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4012b2:	f023 0303 	bic.w	r3, r3, #3
  4012b6:	f043 0302 	orr.w	r3, r3, #2
  4012ba:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4012bc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012be:	f013 0f08 	tst.w	r3, #8
  4012c2:	d10a      	bne.n	4012da <pmc_switch_mck_to_pllack+0x56>
  4012c4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4012c8:	4906      	ldr	r1, [pc, #24]	; (4012e4 <pmc_switch_mck_to_pllack+0x60>)
  4012ca:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4012cc:	f012 0f08 	tst.w	r2, #8
  4012d0:	d105      	bne.n	4012de <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4012d2:	3b01      	subs	r3, #1
  4012d4:	d1f9      	bne.n	4012ca <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4012d6:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4012d8:	4770      	bx	lr
	return 0;
  4012da:	2000      	movs	r0, #0
  4012dc:	4770      	bx	lr
  4012de:	2000      	movs	r0, #0
  4012e0:	4770      	bx	lr
  4012e2:	bf00      	nop
  4012e4:	400e0600 	.word	0x400e0600

004012e8 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4012e8:	b9a0      	cbnz	r0, 401314 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4012ea:	480e      	ldr	r0, [pc, #56]	; (401324 <pmc_switch_mainck_to_xtal+0x3c>)
  4012ec:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4012ee:	0209      	lsls	r1, r1, #8
  4012f0:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4012f2:	4a0d      	ldr	r2, [pc, #52]	; (401328 <pmc_switch_mainck_to_xtal+0x40>)
  4012f4:	401a      	ands	r2, r3
  4012f6:	4b0d      	ldr	r3, [pc, #52]	; (40132c <pmc_switch_mainck_to_xtal+0x44>)
  4012f8:	4313      	orrs	r3, r2
  4012fa:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4012fc:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4012fe:	4602      	mov	r2, r0
  401300:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401302:	f013 0f01 	tst.w	r3, #1
  401306:	d0fb      	beq.n	401300 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401308:	4a06      	ldr	r2, [pc, #24]	; (401324 <pmc_switch_mainck_to_xtal+0x3c>)
  40130a:	6a11      	ldr	r1, [r2, #32]
  40130c:	4b08      	ldr	r3, [pc, #32]	; (401330 <pmc_switch_mainck_to_xtal+0x48>)
  40130e:	430b      	orrs	r3, r1
  401310:	6213      	str	r3, [r2, #32]
  401312:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401314:	4903      	ldr	r1, [pc, #12]	; (401324 <pmc_switch_mainck_to_xtal+0x3c>)
  401316:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401318:	4a06      	ldr	r2, [pc, #24]	; (401334 <pmc_switch_mainck_to_xtal+0x4c>)
  40131a:	401a      	ands	r2, r3
  40131c:	4b06      	ldr	r3, [pc, #24]	; (401338 <pmc_switch_mainck_to_xtal+0x50>)
  40131e:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401320:	620b      	str	r3, [r1, #32]
  401322:	4770      	bx	lr
  401324:	400e0600 	.word	0x400e0600
  401328:	ffc8fffc 	.word	0xffc8fffc
  40132c:	00370001 	.word	0x00370001
  401330:	01370000 	.word	0x01370000
  401334:	fec8fffc 	.word	0xfec8fffc
  401338:	01370002 	.word	0x01370002

0040133c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  40133c:	4b02      	ldr	r3, [pc, #8]	; (401348 <pmc_osc_is_ready_mainck+0xc>)
  40133e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401340:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  401344:	4770      	bx	lr
  401346:	bf00      	nop
  401348:	400e0600 	.word	0x400e0600

0040134c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  40134c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401350:	4b01      	ldr	r3, [pc, #4]	; (401358 <pmc_disable_pllack+0xc>)
  401352:	629a      	str	r2, [r3, #40]	; 0x28
  401354:	4770      	bx	lr
  401356:	bf00      	nop
  401358:	400e0600 	.word	0x400e0600

0040135c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  40135c:	4b02      	ldr	r3, [pc, #8]	; (401368 <pmc_is_locked_pllack+0xc>)
  40135e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401360:	f000 0002 	and.w	r0, r0, #2
  401364:	4770      	bx	lr
  401366:	bf00      	nop
  401368:	400e0600 	.word	0x400e0600

0040136c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  40136c:	283f      	cmp	r0, #63	; 0x3f
  40136e:	d81e      	bhi.n	4013ae <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401370:	281f      	cmp	r0, #31
  401372:	d80c      	bhi.n	40138e <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401374:	4b11      	ldr	r3, [pc, #68]	; (4013bc <pmc_enable_periph_clk+0x50>)
  401376:	699a      	ldr	r2, [r3, #24]
  401378:	2301      	movs	r3, #1
  40137a:	4083      	lsls	r3, r0
  40137c:	4393      	bics	r3, r2
  40137e:	d018      	beq.n	4013b2 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  401380:	2301      	movs	r3, #1
  401382:	fa03 f000 	lsl.w	r0, r3, r0
  401386:	4b0d      	ldr	r3, [pc, #52]	; (4013bc <pmc_enable_periph_clk+0x50>)
  401388:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40138a:	2000      	movs	r0, #0
  40138c:	4770      	bx	lr
		ul_id -= 32;
  40138e:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401390:	4b0a      	ldr	r3, [pc, #40]	; (4013bc <pmc_enable_periph_clk+0x50>)
  401392:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  401396:	2301      	movs	r3, #1
  401398:	4083      	lsls	r3, r0
  40139a:	4393      	bics	r3, r2
  40139c:	d00b      	beq.n	4013b6 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40139e:	2301      	movs	r3, #1
  4013a0:	fa03 f000 	lsl.w	r0, r3, r0
  4013a4:	4b05      	ldr	r3, [pc, #20]	; (4013bc <pmc_enable_periph_clk+0x50>)
  4013a6:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  4013aa:	2000      	movs	r0, #0
  4013ac:	4770      	bx	lr
		return 1;
  4013ae:	2001      	movs	r0, #1
  4013b0:	4770      	bx	lr
	return 0;
  4013b2:	2000      	movs	r0, #0
  4013b4:	4770      	bx	lr
  4013b6:	2000      	movs	r0, #0
}
  4013b8:	4770      	bx	lr
  4013ba:	bf00      	nop
  4013bc:	400e0600 	.word	0x400e0600

004013c0 <pmc_disable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_disable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  4013c0:	283f      	cmp	r0, #63	; 0x3f
  4013c2:	d822      	bhi.n	40140a <pmc_disable_periph_clk+0x4a>
		return 1;
	}

	if (ul_id < 32) {
  4013c4:	281f      	cmp	r0, #31
  4013c6:	d80e      	bhi.n	4013e6 <pmc_disable_periph_clk+0x26>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
  4013c8:	4b11      	ldr	r3, [pc, #68]	; (401410 <pmc_disable_periph_clk+0x50>)
  4013ca:	699a      	ldr	r2, [r3, #24]
  4013cc:	2301      	movs	r3, #1
  4013ce:	4083      	lsls	r3, r0
  4013d0:	4393      	bics	r3, r2
  4013d2:	d001      	beq.n	4013d8 <pmc_disable_periph_clk+0x18>
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
			PMC->PMC_PCDR1 = 1 << ul_id;
		}
#endif
	}
	return 0;
  4013d4:	2000      	movs	r0, #0
  4013d6:	4770      	bx	lr
			PMC->PMC_PCDR0 = 1 << ul_id;
  4013d8:	2301      	movs	r3, #1
  4013da:	fa03 f000 	lsl.w	r0, r3, r0
  4013de:	4b0c      	ldr	r3, [pc, #48]	; (401410 <pmc_disable_periph_clk+0x50>)
  4013e0:	6158      	str	r0, [r3, #20]
	return 0;
  4013e2:	2000      	movs	r0, #0
  4013e4:	4770      	bx	lr
		ul_id -= 32;
  4013e6:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
  4013e8:	4b09      	ldr	r3, [pc, #36]	; (401410 <pmc_disable_periph_clk+0x50>)
  4013ea:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4013ee:	2301      	movs	r3, #1
  4013f0:	4083      	lsls	r3, r0
  4013f2:	4393      	bics	r3, r2
  4013f4:	d001      	beq.n	4013fa <pmc_disable_periph_clk+0x3a>
	return 0;
  4013f6:	2000      	movs	r0, #0
}
  4013f8:	4770      	bx	lr
			PMC->PMC_PCDR1 = 1 << ul_id;
  4013fa:	2301      	movs	r3, #1
  4013fc:	fa03 f000 	lsl.w	r0, r3, r0
  401400:	4b03      	ldr	r3, [pc, #12]	; (401410 <pmc_disable_periph_clk+0x50>)
  401402:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
	return 0;
  401406:	2000      	movs	r0, #0
  401408:	4770      	bx	lr
		return 1;
  40140a:	2001      	movs	r0, #1
  40140c:	4770      	bx	lr
  40140e:	bf00      	nop
  401410:	400e0600 	.word	0x400e0600

00401414 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401414:	e7fe      	b.n	401414 <Dummy_Handler>
	...

00401418 <Reset_Handler>:
{
  401418:	b500      	push	{lr}
  40141a:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  40141c:	4b25      	ldr	r3, [pc, #148]	; (4014b4 <Reset_Handler+0x9c>)
  40141e:	4a26      	ldr	r2, [pc, #152]	; (4014b8 <Reset_Handler+0xa0>)
  401420:	429a      	cmp	r2, r3
  401422:	d010      	beq.n	401446 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401424:	4b25      	ldr	r3, [pc, #148]	; (4014bc <Reset_Handler+0xa4>)
  401426:	4a23      	ldr	r2, [pc, #140]	; (4014b4 <Reset_Handler+0x9c>)
  401428:	429a      	cmp	r2, r3
  40142a:	d20c      	bcs.n	401446 <Reset_Handler+0x2e>
  40142c:	3b01      	subs	r3, #1
  40142e:	1a9b      	subs	r3, r3, r2
  401430:	f023 0303 	bic.w	r3, r3, #3
  401434:	3304      	adds	r3, #4
  401436:	4413      	add	r3, r2
  401438:	491f      	ldr	r1, [pc, #124]	; (4014b8 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  40143a:	f851 0b04 	ldr.w	r0, [r1], #4
  40143e:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401442:	429a      	cmp	r2, r3
  401444:	d1f9      	bne.n	40143a <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  401446:	4b1e      	ldr	r3, [pc, #120]	; (4014c0 <Reset_Handler+0xa8>)
  401448:	4a1e      	ldr	r2, [pc, #120]	; (4014c4 <Reset_Handler+0xac>)
  40144a:	429a      	cmp	r2, r3
  40144c:	d20a      	bcs.n	401464 <Reset_Handler+0x4c>
  40144e:	3b01      	subs	r3, #1
  401450:	1a9b      	subs	r3, r3, r2
  401452:	f023 0303 	bic.w	r3, r3, #3
  401456:	3304      	adds	r3, #4
  401458:	4413      	add	r3, r2
                *pDest++ = 0;
  40145a:	2100      	movs	r1, #0
  40145c:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401460:	4293      	cmp	r3, r2
  401462:	d1fb      	bne.n	40145c <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401464:	4a18      	ldr	r2, [pc, #96]	; (4014c8 <Reset_Handler+0xb0>)
  401466:	4b19      	ldr	r3, [pc, #100]	; (4014cc <Reset_Handler+0xb4>)
  401468:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  40146c:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  40146e:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401472:	fab3 f383 	clz	r3, r3
  401476:	095b      	lsrs	r3, r3, #5
  401478:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  40147a:	b672      	cpsid	i
  __ASM volatile ("dmb");
  40147c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401480:	2200      	movs	r2, #0
  401482:	4b13      	ldr	r3, [pc, #76]	; (4014d0 <Reset_Handler+0xb8>)
  401484:	701a      	strb	r2, [r3, #0]
	return flags;
  401486:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401488:	4a12      	ldr	r2, [pc, #72]	; (4014d4 <Reset_Handler+0xbc>)
  40148a:	6813      	ldr	r3, [r2, #0]
  40148c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401490:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401492:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401496:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40149a:	b129      	cbz	r1, 4014a8 <Reset_Handler+0x90>
		cpu_irq_enable();
  40149c:	2201      	movs	r2, #1
  40149e:	4b0c      	ldr	r3, [pc, #48]	; (4014d0 <Reset_Handler+0xb8>)
  4014a0:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4014a2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4014a6:	b662      	cpsie	i
        __libc_init_array();
  4014a8:	4b0b      	ldr	r3, [pc, #44]	; (4014d8 <Reset_Handler+0xc0>)
  4014aa:	4798      	blx	r3
        main();
  4014ac:	4b0b      	ldr	r3, [pc, #44]	; (4014dc <Reset_Handler+0xc4>)
  4014ae:	4798      	blx	r3
  4014b0:	e7fe      	b.n	4014b0 <Reset_Handler+0x98>
  4014b2:	bf00      	nop
  4014b4:	20400000 	.word	0x20400000
  4014b8:	004079ec 	.word	0x004079ec
  4014bc:	204009d8 	.word	0x204009d8
  4014c0:	20400cd4 	.word	0x20400cd4
  4014c4:	204009d8 	.word	0x204009d8
  4014c8:	e000ed00 	.word	0xe000ed00
  4014cc:	00400000 	.word	0x00400000
  4014d0:	20400018 	.word	0x20400018
  4014d4:	e000ed88 	.word	0xe000ed88
  4014d8:	00401d61 	.word	0x00401d61
  4014dc:	00401cdd 	.word	0x00401cdd

004014e0 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  4014e0:	4b3b      	ldr	r3, [pc, #236]	; (4015d0 <SystemCoreClockUpdate+0xf0>)
  4014e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014e4:	f003 0303 	and.w	r3, r3, #3
  4014e8:	2b01      	cmp	r3, #1
  4014ea:	d01d      	beq.n	401528 <SystemCoreClockUpdate+0x48>
  4014ec:	b183      	cbz	r3, 401510 <SystemCoreClockUpdate+0x30>
  4014ee:	2b02      	cmp	r3, #2
  4014f0:	d036      	beq.n	401560 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4014f2:	4b37      	ldr	r3, [pc, #220]	; (4015d0 <SystemCoreClockUpdate+0xf0>)
  4014f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014f6:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014fa:	2b70      	cmp	r3, #112	; 0x70
  4014fc:	d05f      	beq.n	4015be <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4014fe:	4b34      	ldr	r3, [pc, #208]	; (4015d0 <SystemCoreClockUpdate+0xf0>)
  401500:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401502:	4934      	ldr	r1, [pc, #208]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  401504:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401508:	680b      	ldr	r3, [r1, #0]
  40150a:	40d3      	lsrs	r3, r2
  40150c:	600b      	str	r3, [r1, #0]
  40150e:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401510:	4b31      	ldr	r3, [pc, #196]	; (4015d8 <SystemCoreClockUpdate+0xf8>)
  401512:	695b      	ldr	r3, [r3, #20]
  401514:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401518:	bf14      	ite	ne
  40151a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40151e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401522:	4b2c      	ldr	r3, [pc, #176]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  401524:	601a      	str	r2, [r3, #0]
  401526:	e7e4      	b.n	4014f2 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401528:	4b29      	ldr	r3, [pc, #164]	; (4015d0 <SystemCoreClockUpdate+0xf0>)
  40152a:	6a1b      	ldr	r3, [r3, #32]
  40152c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401530:	d003      	beq.n	40153a <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401532:	4a2a      	ldr	r2, [pc, #168]	; (4015dc <SystemCoreClockUpdate+0xfc>)
  401534:	4b27      	ldr	r3, [pc, #156]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  401536:	601a      	str	r2, [r3, #0]
  401538:	e7db      	b.n	4014f2 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40153a:	4a29      	ldr	r2, [pc, #164]	; (4015e0 <SystemCoreClockUpdate+0x100>)
  40153c:	4b25      	ldr	r3, [pc, #148]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  40153e:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401540:	4b23      	ldr	r3, [pc, #140]	; (4015d0 <SystemCoreClockUpdate+0xf0>)
  401542:	6a1b      	ldr	r3, [r3, #32]
  401544:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401548:	2b10      	cmp	r3, #16
  40154a:	d005      	beq.n	401558 <SystemCoreClockUpdate+0x78>
  40154c:	2b20      	cmp	r3, #32
  40154e:	d1d0      	bne.n	4014f2 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401550:	4a22      	ldr	r2, [pc, #136]	; (4015dc <SystemCoreClockUpdate+0xfc>)
  401552:	4b20      	ldr	r3, [pc, #128]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  401554:	601a      	str	r2, [r3, #0]
          break;
  401556:	e7cc      	b.n	4014f2 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  401558:	4a22      	ldr	r2, [pc, #136]	; (4015e4 <SystemCoreClockUpdate+0x104>)
  40155a:	4b1e      	ldr	r3, [pc, #120]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  40155c:	601a      	str	r2, [r3, #0]
          break;
  40155e:	e7c8      	b.n	4014f2 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401560:	4b1b      	ldr	r3, [pc, #108]	; (4015d0 <SystemCoreClockUpdate+0xf0>)
  401562:	6a1b      	ldr	r3, [r3, #32]
  401564:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401568:	d016      	beq.n	401598 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  40156a:	4a1c      	ldr	r2, [pc, #112]	; (4015dc <SystemCoreClockUpdate+0xfc>)
  40156c:	4b19      	ldr	r3, [pc, #100]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  40156e:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401570:	4b17      	ldr	r3, [pc, #92]	; (4015d0 <SystemCoreClockUpdate+0xf0>)
  401572:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401574:	f003 0303 	and.w	r3, r3, #3
  401578:	2b02      	cmp	r3, #2
  40157a:	d1ba      	bne.n	4014f2 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40157c:	4a14      	ldr	r2, [pc, #80]	; (4015d0 <SystemCoreClockUpdate+0xf0>)
  40157e:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401580:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401582:	4814      	ldr	r0, [pc, #80]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401584:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401588:	6803      	ldr	r3, [r0, #0]
  40158a:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40158e:	b2d2      	uxtb	r2, r2
  401590:	fbb3 f3f2 	udiv	r3, r3, r2
  401594:	6003      	str	r3, [r0, #0]
  401596:	e7ac      	b.n	4014f2 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401598:	4a11      	ldr	r2, [pc, #68]	; (4015e0 <SystemCoreClockUpdate+0x100>)
  40159a:	4b0e      	ldr	r3, [pc, #56]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  40159c:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40159e:	4b0c      	ldr	r3, [pc, #48]	; (4015d0 <SystemCoreClockUpdate+0xf0>)
  4015a0:	6a1b      	ldr	r3, [r3, #32]
  4015a2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4015a6:	2b10      	cmp	r3, #16
  4015a8:	d005      	beq.n	4015b6 <SystemCoreClockUpdate+0xd6>
  4015aa:	2b20      	cmp	r3, #32
  4015ac:	d1e0      	bne.n	401570 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  4015ae:	4a0b      	ldr	r2, [pc, #44]	; (4015dc <SystemCoreClockUpdate+0xfc>)
  4015b0:	4b08      	ldr	r3, [pc, #32]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  4015b2:	601a      	str	r2, [r3, #0]
          break;
  4015b4:	e7dc      	b.n	401570 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  4015b6:	4a0b      	ldr	r2, [pc, #44]	; (4015e4 <SystemCoreClockUpdate+0x104>)
  4015b8:	4b06      	ldr	r3, [pc, #24]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  4015ba:	601a      	str	r2, [r3, #0]
          break;
  4015bc:	e7d8      	b.n	401570 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  4015be:	4a05      	ldr	r2, [pc, #20]	; (4015d4 <SystemCoreClockUpdate+0xf4>)
  4015c0:	6813      	ldr	r3, [r2, #0]
  4015c2:	4909      	ldr	r1, [pc, #36]	; (4015e8 <SystemCoreClockUpdate+0x108>)
  4015c4:	fba1 1303 	umull	r1, r3, r1, r3
  4015c8:	085b      	lsrs	r3, r3, #1
  4015ca:	6013      	str	r3, [r2, #0]
  4015cc:	4770      	bx	lr
  4015ce:	bf00      	nop
  4015d0:	400e0600 	.word	0x400e0600
  4015d4:	2040001c 	.word	0x2040001c
  4015d8:	400e1810 	.word	0x400e1810
  4015dc:	00b71b00 	.word	0x00b71b00
  4015e0:	003d0900 	.word	0x003d0900
  4015e4:	007a1200 	.word	0x007a1200
  4015e8:	aaaaaaab 	.word	0xaaaaaaab

004015ec <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  4015ec:	4b16      	ldr	r3, [pc, #88]	; (401648 <system_init_flash+0x5c>)
  4015ee:	4298      	cmp	r0, r3
  4015f0:	d913      	bls.n	40161a <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  4015f2:	4b16      	ldr	r3, [pc, #88]	; (40164c <system_init_flash+0x60>)
  4015f4:	4298      	cmp	r0, r3
  4015f6:	d915      	bls.n	401624 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  4015f8:	4b15      	ldr	r3, [pc, #84]	; (401650 <system_init_flash+0x64>)
  4015fa:	4298      	cmp	r0, r3
  4015fc:	d916      	bls.n	40162c <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  4015fe:	4b15      	ldr	r3, [pc, #84]	; (401654 <system_init_flash+0x68>)
  401600:	4298      	cmp	r0, r3
  401602:	d917      	bls.n	401634 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401604:	4b14      	ldr	r3, [pc, #80]	; (401658 <system_init_flash+0x6c>)
  401606:	4298      	cmp	r0, r3
  401608:	d918      	bls.n	40163c <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  40160a:	4b14      	ldr	r3, [pc, #80]	; (40165c <system_init_flash+0x70>)
  40160c:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40160e:	bf94      	ite	ls
  401610:	4a13      	ldrls	r2, [pc, #76]	; (401660 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401612:	4a14      	ldrhi	r2, [pc, #80]	; (401664 <system_init_flash+0x78>)
  401614:	4b14      	ldr	r3, [pc, #80]	; (401668 <system_init_flash+0x7c>)
  401616:	601a      	str	r2, [r3, #0]
  401618:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40161a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40161e:	4b12      	ldr	r3, [pc, #72]	; (401668 <system_init_flash+0x7c>)
  401620:	601a      	str	r2, [r3, #0]
  401622:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401624:	4a11      	ldr	r2, [pc, #68]	; (40166c <system_init_flash+0x80>)
  401626:	4b10      	ldr	r3, [pc, #64]	; (401668 <system_init_flash+0x7c>)
  401628:	601a      	str	r2, [r3, #0]
  40162a:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  40162c:	4a10      	ldr	r2, [pc, #64]	; (401670 <system_init_flash+0x84>)
  40162e:	4b0e      	ldr	r3, [pc, #56]	; (401668 <system_init_flash+0x7c>)
  401630:	601a      	str	r2, [r3, #0]
  401632:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401634:	4a0f      	ldr	r2, [pc, #60]	; (401674 <system_init_flash+0x88>)
  401636:	4b0c      	ldr	r3, [pc, #48]	; (401668 <system_init_flash+0x7c>)
  401638:	601a      	str	r2, [r3, #0]
  40163a:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  40163c:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401640:	4b09      	ldr	r3, [pc, #36]	; (401668 <system_init_flash+0x7c>)
  401642:	601a      	str	r2, [r3, #0]
  401644:	4770      	bx	lr
  401646:	bf00      	nop
  401648:	015ef3bf 	.word	0x015ef3bf
  40164c:	02bde77f 	.word	0x02bde77f
  401650:	041cdb3f 	.word	0x041cdb3f
  401654:	057bceff 	.word	0x057bceff
  401658:	06dac2bf 	.word	0x06dac2bf
  40165c:	0839b67f 	.word	0x0839b67f
  401660:	04000500 	.word	0x04000500
  401664:	04000600 	.word	0x04000600
  401668:	400e0c00 	.word	0x400e0c00
  40166c:	04000100 	.word	0x04000100
  401670:	04000200 	.word	0x04000200
  401674:	04000300 	.word	0x04000300

00401678 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401678:	4b0a      	ldr	r3, [pc, #40]	; (4016a4 <_sbrk+0x2c>)
  40167a:	681b      	ldr	r3, [r3, #0]
  40167c:	b153      	cbz	r3, 401694 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40167e:	4b09      	ldr	r3, [pc, #36]	; (4016a4 <_sbrk+0x2c>)
  401680:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401682:	181a      	adds	r2, r3, r0
  401684:	4908      	ldr	r1, [pc, #32]	; (4016a8 <_sbrk+0x30>)
  401686:	4291      	cmp	r1, r2
  401688:	db08      	blt.n	40169c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40168a:	4610      	mov	r0, r2
  40168c:	4a05      	ldr	r2, [pc, #20]	; (4016a4 <_sbrk+0x2c>)
  40168e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401690:	4618      	mov	r0, r3
  401692:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401694:	4a05      	ldr	r2, [pc, #20]	; (4016ac <_sbrk+0x34>)
  401696:	4b03      	ldr	r3, [pc, #12]	; (4016a4 <_sbrk+0x2c>)
  401698:	601a      	str	r2, [r3, #0]
  40169a:	e7f0      	b.n	40167e <_sbrk+0x6>
		return (caddr_t) -1;	
  40169c:	f04f 30ff 	mov.w	r0, #4294967295
}
  4016a0:	4770      	bx	lr
  4016a2:	bf00      	nop
  4016a4:	20400c6c 	.word	0x20400c6c
  4016a8:	2045fffc 	.word	0x2045fffc
  4016ac:	20402ed8 	.word	0x20402ed8

004016b0 <Button_0_Handler>:
	sprintf(stringLCD, "A%02d:%02d", hora, minuto+but_counter);
	gfx_mono_draw_string(stringLCD, 0, 0, &sysfont);
	flag_but_1 = 1;
}

static void Button_0_Handler(uint32_t id, uint32_t mask){
  4016b0:	b508      	push	{r3, lr}
		flag_led0=0;
  4016b2:	2200      	movs	r2, #0
  4016b4:	4b02      	ldr	r3, [pc, #8]	; (4016c0 <Button_0_Handler+0x10>)
  4016b6:	701a      	strb	r2, [r3, #0]
		pmc_disable_periph_clk(ID_TC1);
  4016b8:	2018      	movs	r0, #24
  4016ba:	4b02      	ldr	r3, [pc, #8]	; (4016c4 <Button_0_Handler+0x14>)
  4016bc:	4798      	blx	r3
  4016be:	bd08      	pop	{r3, pc}
  4016c0:	20400c75 	.word	0x20400c75
  4016c4:	004013c1 	.word	0x004013c1

004016c8 <Button_2_Handler>:
static void Button_2_Handler(uint32_t id, uint32_t mask){
  4016c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4016cc:	b0c5      	sub	sp, #276	; 0x114
	if (minuto+but_counter==59){
  4016ce:	4b1e      	ldr	r3, [pc, #120]	; (401748 <Button_2_Handler+0x80>)
  4016d0:	681b      	ldr	r3, [r3, #0]
  4016d2:	4a1e      	ldr	r2, [pc, #120]	; (40174c <Button_2_Handler+0x84>)
  4016d4:	6812      	ldr	r2, [r2, #0]
  4016d6:	441a      	add	r2, r3
  4016d8:	2a3b      	cmp	r2, #59	; 0x3b
  4016da:	d02a      	beq.n	401732 <Button_2_Handler+0x6a>
		but_counter += 1;
  4016dc:	3301      	adds	r3, #1
  4016de:	4a1a      	ldr	r2, [pc, #104]	; (401748 <Button_2_Handler+0x80>)
  4016e0:	6013      	str	r3, [r2, #0]
	rtc_set_time_alarm(RTC, 1, hora, 1, minuto+but_counter, 1, SECOND);
  4016e2:	4e1b      	ldr	r6, [pc, #108]	; (401750 <Button_2_Handler+0x88>)
  4016e4:	2500      	movs	r5, #0
  4016e6:	9502      	str	r5, [sp, #8]
  4016e8:	2401      	movs	r4, #1
  4016ea:	9401      	str	r4, [sp, #4]
  4016ec:	f8df 805c 	ldr.w	r8, [pc, #92]	; 40174c <Button_2_Handler+0x84>
  4016f0:	4f15      	ldr	r7, [pc, #84]	; (401748 <Button_2_Handler+0x80>)
  4016f2:	f8d8 3000 	ldr.w	r3, [r8]
  4016f6:	683a      	ldr	r2, [r7, #0]
  4016f8:	4413      	add	r3, r2
  4016fa:	9300      	str	r3, [sp, #0]
  4016fc:	4623      	mov	r3, r4
  4016fe:	6832      	ldr	r2, [r6, #0]
  401700:	4621      	mov	r1, r4
  401702:	4814      	ldr	r0, [pc, #80]	; (401754 <Button_2_Handler+0x8c>)
  401704:	f8df 9064 	ldr.w	r9, [pc, #100]	; 40176c <Button_2_Handler+0xa4>
  401708:	47c8      	blx	r9
	sprintf(stringLCD, "A%02d:%02d", hora, minuto+but_counter);
  40170a:	f8d8 2000 	ldr.w	r2, [r8]
  40170e:	683b      	ldr	r3, [r7, #0]
  401710:	4413      	add	r3, r2
  401712:	6832      	ldr	r2, [r6, #0]
  401714:	4910      	ldr	r1, [pc, #64]	; (401758 <Button_2_Handler+0x90>)
  401716:	a804      	add	r0, sp, #16
  401718:	4e10      	ldr	r6, [pc, #64]	; (40175c <Button_2_Handler+0x94>)
  40171a:	47b0      	blx	r6
	gfx_mono_draw_string(stringLCD, 0, 0, &sysfont);
  40171c:	4b10      	ldr	r3, [pc, #64]	; (401760 <Button_2_Handler+0x98>)
  40171e:	462a      	mov	r2, r5
  401720:	4629      	mov	r1, r5
  401722:	a804      	add	r0, sp, #16
  401724:	4d0f      	ldr	r5, [pc, #60]	; (401764 <Button_2_Handler+0x9c>)
  401726:	47a8      	blx	r5
	flag_but_1 = 1;
  401728:	4b0f      	ldr	r3, [pc, #60]	; (401768 <Button_2_Handler+0xa0>)
  40172a:	701c      	strb	r4, [r3, #0]
}
  40172c:	b045      	add	sp, #276	; 0x114
  40172e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		minuto = 0;
  401732:	2300      	movs	r3, #0
  401734:	4a05      	ldr	r2, [pc, #20]	; (40174c <Button_2_Handler+0x84>)
  401736:	6013      	str	r3, [r2, #0]
		but_counter = 0;
  401738:	4a03      	ldr	r2, [pc, #12]	; (401748 <Button_2_Handler+0x80>)
  40173a:	6013      	str	r3, [r2, #0]
		hora += 1;
  40173c:	4a04      	ldr	r2, [pc, #16]	; (401750 <Button_2_Handler+0x88>)
  40173e:	6813      	ldr	r3, [r2, #0]
  401740:	3301      	adds	r3, #1
  401742:	6013      	str	r3, [r2, #0]
  401744:	e7cd      	b.n	4016e2 <Button_2_Handler+0x1a>
  401746:	bf00      	nop
  401748:	20400c70 	.word	0x20400c70
  40174c:	20400024 	.word	0x20400024
  401750:	20400020 	.word	0x20400020
  401754:	400e1860 	.word	0x400e1860
  401758:	00407720 	.word	0x00407720
  40175c:	00401e4d 	.word	0x00401e4d
  401760:	2040000c 	.word	0x2040000c
  401764:	00400995 	.word	0x00400995
  401768:	20400c74 	.word	0x20400c74
  40176c:	004002b1 	.word	0x004002b1

00401770 <Button_3_Handler>:
static void Button_3_Handler(uint32_t id, uint32_t mask){
  401770:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401774:	b0c5      	sub	sp, #276	; 0x114
	if (minuto+but_counter==0){
  401776:	4b1e      	ldr	r3, [pc, #120]	; (4017f0 <Button_3_Handler+0x80>)
  401778:	681b      	ldr	r3, [r3, #0]
  40177a:	4a1e      	ldr	r2, [pc, #120]	; (4017f4 <Button_3_Handler+0x84>)
  40177c:	6812      	ldr	r2, [r2, #0]
  40177e:	42d3      	cmn	r3, r2
  401780:	d02a      	beq.n	4017d8 <Button_3_Handler+0x68>
		but_counter -= 1;
  401782:	3b01      	subs	r3, #1
  401784:	4a1a      	ldr	r2, [pc, #104]	; (4017f0 <Button_3_Handler+0x80>)
  401786:	6013      	str	r3, [r2, #0]
	rtc_set_time_alarm(RTC, 1, hora, 1, minuto+but_counter, 1, SECOND);
  401788:	4e1b      	ldr	r6, [pc, #108]	; (4017f8 <Button_3_Handler+0x88>)
  40178a:	2500      	movs	r5, #0
  40178c:	9502      	str	r5, [sp, #8]
  40178e:	2401      	movs	r4, #1
  401790:	9401      	str	r4, [sp, #4]
  401792:	f8df 8060 	ldr.w	r8, [pc, #96]	; 4017f4 <Button_3_Handler+0x84>
  401796:	4f16      	ldr	r7, [pc, #88]	; (4017f0 <Button_3_Handler+0x80>)
  401798:	f8d8 3000 	ldr.w	r3, [r8]
  40179c:	683a      	ldr	r2, [r7, #0]
  40179e:	4413      	add	r3, r2
  4017a0:	9300      	str	r3, [sp, #0]
  4017a2:	4623      	mov	r3, r4
  4017a4:	6832      	ldr	r2, [r6, #0]
  4017a6:	4621      	mov	r1, r4
  4017a8:	4814      	ldr	r0, [pc, #80]	; (4017fc <Button_3_Handler+0x8c>)
  4017aa:	f8df 9068 	ldr.w	r9, [pc, #104]	; 401814 <Button_3_Handler+0xa4>
  4017ae:	47c8      	blx	r9
	sprintf(stringLCD, "A%02d:%02d", hora, minuto+but_counter);
  4017b0:	f8d8 2000 	ldr.w	r2, [r8]
  4017b4:	683b      	ldr	r3, [r7, #0]
  4017b6:	4413      	add	r3, r2
  4017b8:	6832      	ldr	r2, [r6, #0]
  4017ba:	4911      	ldr	r1, [pc, #68]	; (401800 <Button_3_Handler+0x90>)
  4017bc:	a804      	add	r0, sp, #16
  4017be:	4e11      	ldr	r6, [pc, #68]	; (401804 <Button_3_Handler+0x94>)
  4017c0:	47b0      	blx	r6
	gfx_mono_draw_string(stringLCD, 0, 0, &sysfont);
  4017c2:	4b11      	ldr	r3, [pc, #68]	; (401808 <Button_3_Handler+0x98>)
  4017c4:	462a      	mov	r2, r5
  4017c6:	4629      	mov	r1, r5
  4017c8:	a804      	add	r0, sp, #16
  4017ca:	4d10      	ldr	r5, [pc, #64]	; (40180c <Button_3_Handler+0x9c>)
  4017cc:	47a8      	blx	r5
	flag_but_1 = 1;
  4017ce:	4b10      	ldr	r3, [pc, #64]	; (401810 <Button_3_Handler+0xa0>)
  4017d0:	701c      	strb	r4, [r3, #0]
}
  4017d2:	b045      	add	sp, #276	; 0x114
  4017d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		minuto = 59;
  4017d8:	223b      	movs	r2, #59	; 0x3b
  4017da:	4b06      	ldr	r3, [pc, #24]	; (4017f4 <Button_3_Handler+0x84>)
  4017dc:	601a      	str	r2, [r3, #0]
		but_counter = 0;
  4017de:	2200      	movs	r2, #0
  4017e0:	4b03      	ldr	r3, [pc, #12]	; (4017f0 <Button_3_Handler+0x80>)
  4017e2:	601a      	str	r2, [r3, #0]
		hora -= 1;
  4017e4:	4a04      	ldr	r2, [pc, #16]	; (4017f8 <Button_3_Handler+0x88>)
  4017e6:	6813      	ldr	r3, [r2, #0]
  4017e8:	3b01      	subs	r3, #1
  4017ea:	6013      	str	r3, [r2, #0]
  4017ec:	e7cc      	b.n	401788 <Button_3_Handler+0x18>
  4017ee:	bf00      	nop
  4017f0:	20400c70 	.word	0x20400c70
  4017f4:	20400024 	.word	0x20400024
  4017f8:	20400020 	.word	0x20400020
  4017fc:	400e1860 	.word	0x400e1860
  401800:	00407720 	.word	0x00407720
  401804:	00401e4d 	.word	0x00401e4d
  401808:	2040000c 	.word	0x2040000c
  40180c:	00400995 	.word	0x00400995
  401810:	20400c74 	.word	0x20400c74
  401814:	004002b1 	.word	0x004002b1

00401818 <pin_toggle>:
}

/**
*  Toggle pin controlado pelo PIO (out)
*/
void pin_toggle(Pio *pio, uint32_t mask){
  401818:	b538      	push	{r3, r4, r5, lr}
  40181a:	4604      	mov	r4, r0
  40181c:	460d      	mov	r5, r1
	if(pio_get_output_data_status(pio, mask))
  40181e:	4b06      	ldr	r3, [pc, #24]	; (401838 <pin_toggle+0x20>)
  401820:	4798      	blx	r3
  401822:	b920      	cbnz	r0, 40182e <pin_toggle+0x16>
	pio_clear(pio, mask);
	else
	pio_set(pio,mask);
  401824:	4629      	mov	r1, r5
  401826:	4620      	mov	r0, r4
  401828:	4b04      	ldr	r3, [pc, #16]	; (40183c <pin_toggle+0x24>)
  40182a:	4798      	blx	r3
  40182c:	bd38      	pop	{r3, r4, r5, pc}
	pio_clear(pio, mask);
  40182e:	4629      	mov	r1, r5
  401830:	4620      	mov	r0, r4
  401832:	4b03      	ldr	r3, [pc, #12]	; (401840 <pin_toggle+0x28>)
  401834:	4798      	blx	r3
  401836:	bd38      	pop	{r3, r4, r5, pc}
  401838:	004010dd 	.word	0x004010dd
  40183c:	00400f55 	.word	0x00400f55
  401840:	00400f59 	.word	0x00400f59

00401844 <TC1_Handler>:
void TC1_Handler(void){
  401844:	b500      	push	{lr}
  401846:	b083      	sub	sp, #12
	ul_dummy = tc_get_status(TC0, 1);
  401848:	2101      	movs	r1, #1
  40184a:	4808      	ldr	r0, [pc, #32]	; (40186c <TC1_Handler+0x28>)
  40184c:	4b08      	ldr	r3, [pc, #32]	; (401870 <TC1_Handler+0x2c>)
  40184e:	4798      	blx	r3
  401850:	9001      	str	r0, [sp, #4]
	UNUSED(ul_dummy);
  401852:	9b01      	ldr	r3, [sp, #4]
	if(flag_led0)
  401854:	4b07      	ldr	r3, [pc, #28]	; (401874 <TC1_Handler+0x30>)
  401856:	781b      	ldrb	r3, [r3, #0]
  401858:	b913      	cbnz	r3, 401860 <TC1_Handler+0x1c>
}
  40185a:	b003      	add	sp, #12
  40185c:	f85d fb04 	ldr.w	pc, [sp], #4
		pin_toggle(LED_PIO, LED_PIN_MASK);
  401860:	2101      	movs	r1, #1
  401862:	4805      	ldr	r0, [pc, #20]	; (401878 <TC1_Handler+0x34>)
  401864:	4b05      	ldr	r3, [pc, #20]	; (40187c <TC1_Handler+0x38>)
  401866:	4798      	blx	r3
}
  401868:	e7f7      	b.n	40185a <TC1_Handler+0x16>
  40186a:	bf00      	nop
  40186c:	4000c000 	.word	0x4000c000
  401870:	00400581 	.word	0x00400581
  401874:	20400c75 	.word	0x20400c75
  401878:	400e0e00 	.word	0x400e0e00
  40187c:	00401819 	.word	0x00401819

00401880 <RTC_init>:
}

/**
* Configura o RTC para funcionar com interrupcao de alarme
*/
void RTC_init(){
  401880:	b530      	push	{r4, r5, lr}
  401882:	b083      	sub	sp, #12
	/* Configura o PMC */
	pmc_enable_periph_clk(ID_RTC);
  401884:	2002      	movs	r0, #2
  401886:	4b13      	ldr	r3, [pc, #76]	; (4018d4 <RTC_init+0x54>)
  401888:	4798      	blx	r3

	/* Default RTC configuration, 24-hour mode */
	rtc_set_hour_mode(RTC, 0);
  40188a:	4c13      	ldr	r4, [pc, #76]	; (4018d8 <RTC_init+0x58>)
  40188c:	2100      	movs	r1, #0
  40188e:	4620      	mov	r0, r4
  401890:	4b12      	ldr	r3, [pc, #72]	; (4018dc <RTC_init+0x5c>)
  401892:	4798      	blx	r3

	/* Configura data e hora manualmente */
	rtc_set_date(RTC, YEAR, MOUNTH, DAY, WEEK);
  401894:	230c      	movs	r3, #12
  401896:	9300      	str	r3, [sp, #0]
  401898:	2313      	movs	r3, #19
  40189a:	2203      	movs	r2, #3
  40189c:	f240 71e2 	movw	r1, #2018	; 0x7e2
  4018a0:	4620      	mov	r0, r4
  4018a2:	4d0f      	ldr	r5, [pc, #60]	; (4018e0 <RTC_init+0x60>)
  4018a4:	47a8      	blx	r5
	rtc_set_time(RTC, HOUR, MINUTE, SECOND);
  4018a6:	2300      	movs	r3, #0
  4018a8:	2237      	movs	r2, #55	; 0x37
  4018aa:	210a      	movs	r1, #10
  4018ac:	4620      	mov	r0, r4
  4018ae:	4d0d      	ldr	r5, [pc, #52]	; (4018e4 <RTC_init+0x64>)
  4018b0:	47a8      	blx	r5
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  4018b2:	4b0d      	ldr	r3, [pc, #52]	; (4018e8 <RTC_init+0x68>)
  4018b4:	2204      	movs	r2, #4
  4018b6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4018ba:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4018be:	2100      	movs	r1, #0
  4018c0:	f883 1302 	strb.w	r1, [r3, #770]	; 0x302
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4018c4:	601a      	str	r2, [r3, #0]
	NVIC_ClearPendingIRQ(RTC_IRQn);
	NVIC_SetPriority(RTC_IRQn, 0);
	NVIC_EnableIRQ(RTC_IRQn);

	/* Ativa interrupcao via alarme */
	rtc_enable_interrupt(RTC,  RTC_IER_ALREN|RTC_IER_SECEN);
  4018c6:	2106      	movs	r1, #6
  4018c8:	4620      	mov	r0, r4
  4018ca:	4b08      	ldr	r3, [pc, #32]	; (4018ec <RTC_init+0x6c>)
  4018cc:	4798      	blx	r3

}
  4018ce:	b003      	add	sp, #12
  4018d0:	bd30      	pop	{r4, r5, pc}
  4018d2:	bf00      	nop
  4018d4:	0040136d 	.word	0x0040136d
  4018d8:	400e1860 	.word	0x400e1860
  4018dc:	004001ad 	.word	0x004001ad
  4018e0:	00400345 	.word	0x00400345
  4018e4:	00400221 	.word	0x00400221
  4018e8:	e000e100 	.word	0xe000e100
  4018ec:	004001c3 	.word	0x004001c3

004018f0 <TC_init>:

/**
* Configura TimerCounter (TC) para gerar uma interrupcao no canal (ID_TC e TC_CHANNEL)
* na taxa de especificada em freq.
*/
void TC_init(Tc * TC, int ID_TC, int TC_CHANNEL, int freq){
  4018f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4018f4:	b085      	sub	sp, #20
  4018f6:	4606      	mov	r6, r0
  4018f8:	460c      	mov	r4, r1
  4018fa:	4617      	mov	r7, r2
  4018fc:	4698      	mov	r8, r3
	uint32_t ul_tcclks;
	uint32_t ul_sysclk = sysclk_get_cpu_hz();

	uint32_t channel = 1;

	pmc_enable_periph_clk(ID_TC);
  4018fe:	4608      	mov	r0, r1
  401900:	4b18      	ldr	r3, [pc, #96]	; (401964 <TC_init+0x74>)
  401902:	4798      	blx	r3

	/** Configura o TC para operar em  4Mhz e interrupco no RC compare */
	tc_find_mck_divisor(freq, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  401904:	4d18      	ldr	r5, [pc, #96]	; (401968 <TC_init+0x78>)
  401906:	9500      	str	r5, [sp, #0]
  401908:	ab02      	add	r3, sp, #8
  40190a:	aa03      	add	r2, sp, #12
  40190c:	4629      	mov	r1, r5
  40190e:	4640      	mov	r0, r8
  401910:	f8df 906c 	ldr.w	r9, [pc, #108]	; 401980 <TC_init+0x90>
  401914:	47c8      	blx	r9
	tc_init(TC, TC_CHANNEL, ul_tcclks | TC_CMR_CPCTRG);
  401916:	9a02      	ldr	r2, [sp, #8]
  401918:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  40191c:	4639      	mov	r1, r7
  40191e:	4630      	mov	r0, r6
  401920:	4b12      	ldr	r3, [pc, #72]	; (40196c <TC_init+0x7c>)
  401922:	4798      	blx	r3
	tc_write_rc(TC, TC_CHANNEL, (ul_sysclk / ul_div) / freq);
  401924:	9a03      	ldr	r2, [sp, #12]
  401926:	fbb5 f2f2 	udiv	r2, r5, r2
  40192a:	fbb2 f2f8 	udiv	r2, r2, r8
  40192e:	4639      	mov	r1, r7
  401930:	4630      	mov	r0, r6
  401932:	4b0f      	ldr	r3, [pc, #60]	; (401970 <TC_init+0x80>)
  401934:	4798      	blx	r3
  401936:	b263      	sxtb	r3, r4
  401938:	095b      	lsrs	r3, r3, #5
  40193a:	f004 041f 	and.w	r4, r4, #31
  40193e:	2201      	movs	r2, #1
  401940:	fa02 f404 	lsl.w	r4, r2, r4
  401944:	4a0b      	ldr	r2, [pc, #44]	; (401974 <TC_init+0x84>)
  401946:	f842 4023 	str.w	r4, [r2, r3, lsl #2]

	/* Configura e ativa interrupco no TC canal 0 */
	/* Interrupo no C */
	NVIC_EnableIRQ((IRQn_Type) ID_TC);
	tc_enable_interrupt(TC, TC_CHANNEL, TC_IER_CPCS);
  40194a:	2210      	movs	r2, #16
  40194c:	4639      	mov	r1, r7
  40194e:	4630      	mov	r0, r6
  401950:	4b09      	ldr	r3, [pc, #36]	; (401978 <TC_init+0x88>)
  401952:	4798      	blx	r3

	/* Inicializa o canal 0 do TC */
	tc_start(TC, TC_CHANNEL);
  401954:	4639      	mov	r1, r7
  401956:	4630      	mov	r0, r6
  401958:	4b08      	ldr	r3, [pc, #32]	; (40197c <TC_init+0x8c>)
  40195a:	4798      	blx	r3
}
  40195c:	b005      	add	sp, #20
  40195e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401962:	bf00      	nop
  401964:	0040136d 	.word	0x0040136d
  401968:	11e1a300 	.word	0x11e1a300
  40196c:	0040054f 	.word	0x0040054f
  401970:	00400571 	.word	0x00400571
  401974:	e000e100 	.word	0xe000e100
  401978:	00400579 	.word	0x00400579
  40197c:	00400569 	.word	0x00400569
  401980:	00400589 	.word	0x00400589

00401984 <LED_init>:


/**
* @Brief Inicializa o pino do LED
*/
void LED_init(int estado){
  401984:	b510      	push	{r4, lr}
  401986:	b082      	sub	sp, #8
  401988:	4604      	mov	r4, r0
	pmc_enable_periph_clk(LED_PIO_ID);
  40198a:	200a      	movs	r0, #10
  40198c:	4b05      	ldr	r3, [pc, #20]	; (4019a4 <LED_init+0x20>)
  40198e:	4798      	blx	r3
	pio_set_output(LED_PIO, LED_PIN_MASK, estado, 0, 0 );
  401990:	2300      	movs	r3, #0
  401992:	9300      	str	r3, [sp, #0]
  401994:	4622      	mov	r2, r4
  401996:	2101      	movs	r1, #1
  401998:	4803      	ldr	r0, [pc, #12]	; (4019a8 <LED_init+0x24>)
  40199a:	4c04      	ldr	r4, [pc, #16]	; (4019ac <LED_init+0x28>)
  40199c:	47a0      	blx	r4
};
  40199e:	b002      	add	sp, #8
  4019a0:	bd10      	pop	{r4, pc}
  4019a2:	bf00      	nop
  4019a4:	0040136d 	.word	0x0040136d
  4019a8:	400e0e00 	.word	0x400e0e00
  4019ac:	00401025 	.word	0x00401025

004019b0 <BUT_init>:

void BUT_init(void){
  4019b0:	b510      	push	{r4, lr}
  4019b2:	b082      	sub	sp, #8
	pmc_enable_periph_clk(BUT_PIO_ID);
  4019b4:	200a      	movs	r0, #10
  4019b6:	4b10      	ldr	r3, [pc, #64]	; (4019f8 <BUT_init+0x48>)
  4019b8:	4798      	blx	r3
	pio_set_input(BUT_PIO, BUT_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  4019ba:	4c10      	ldr	r4, [pc, #64]	; (4019fc <BUT_init+0x4c>)
  4019bc:	2209      	movs	r2, #9
  4019be:	f44f 6100 	mov.w	r1, #2048	; 0x800
  4019c2:	4620      	mov	r0, r4
  4019c4:	4b0e      	ldr	r3, [pc, #56]	; (401a00 <BUT_init+0x50>)
  4019c6:	4798      	blx	r3

	pio_enable_interrupt(BUT_PIO, BUT_PIN_MASK);
  4019c8:	f44f 6100 	mov.w	r1, #2048	; 0x800
  4019cc:	4620      	mov	r0, r4
  4019ce:	4b0d      	ldr	r3, [pc, #52]	; (401a04 <BUT_init+0x54>)
  4019d0:	4798      	blx	r3
	pio_handler_set(BUT_PIO, BUT_PIO_ID, BUT_PIN_MASK, PIO_IT_FALL_EDGE, Button_0_Handler);
  4019d2:	4b0d      	ldr	r3, [pc, #52]	; (401a08 <BUT_init+0x58>)
  4019d4:	9300      	str	r3, [sp, #0]
  4019d6:	2350      	movs	r3, #80	; 0x50
  4019d8:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4019dc:	210a      	movs	r1, #10
  4019de:	4620      	mov	r0, r4
  4019e0:	4c0a      	ldr	r4, [pc, #40]	; (401a0c <BUT_init+0x5c>)
  4019e2:	47a0      	blx	r4
  4019e4:	4b0a      	ldr	r3, [pc, #40]	; (401a10 <BUT_init+0x60>)
  4019e6:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4019ea:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4019ec:	2220      	movs	r2, #32
  4019ee:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a

	NVIC_EnableIRQ(BUT_PIO_ID);
	NVIC_SetPriority(BUT_PIO_ID, 1);
};
  4019f2:	b002      	add	sp, #8
  4019f4:	bd10      	pop	{r4, pc}
  4019f6:	bf00      	nop
  4019f8:	0040136d 	.word	0x0040136d
  4019fc:	400e0e00 	.word	0x400e0e00
  401a00:	00400fef 	.word	0x00400fef
  401a04:	0040111b 	.word	0x0040111b
  401a08:	004016b1 	.word	0x004016b1
  401a0c:	00401179 	.word	0x00401179
  401a10:	e000e100 	.word	0xe000e100

00401a14 <BUT_1_init>:

void BUT_1_init(void){
  401a14:	b510      	push	{r4, lr}
  401a16:	b082      	sub	sp, #8
	pmc_enable_periph_clk(BUT_1_PIO_ID);
  401a18:	2010      	movs	r0, #16
  401a1a:	4b10      	ldr	r3, [pc, #64]	; (401a5c <BUT_1_init+0x48>)
  401a1c:	4798      	blx	r3
	pio_set_input(BUT_1_PIO, BUT_1_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401a1e:	4c10      	ldr	r4, [pc, #64]	; (401a60 <BUT_1_init+0x4c>)
  401a20:	2209      	movs	r2, #9
  401a22:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401a26:	4620      	mov	r0, r4
  401a28:	4b0e      	ldr	r3, [pc, #56]	; (401a64 <BUT_1_init+0x50>)
  401a2a:	4798      	blx	r3

	pio_enable_interrupt(BUT_1_PIO, BUT_1_PIN_MASK);
  401a2c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401a30:	4620      	mov	r0, r4
  401a32:	4b0d      	ldr	r3, [pc, #52]	; (401a68 <BUT_1_init+0x54>)
  401a34:	4798      	blx	r3
	pio_handler_set(BUT_1_PIO, BUT_1_PIO_ID, BUT_1_PIN_MASK, PIO_IT_FALL_EDGE, Button_1_Handler);
  401a36:	4b0d      	ldr	r3, [pc, #52]	; (401a6c <BUT_1_init+0x58>)
  401a38:	9300      	str	r3, [sp, #0]
  401a3a:	2350      	movs	r3, #80	; 0x50
  401a3c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401a40:	2110      	movs	r1, #16
  401a42:	4620      	mov	r0, r4
  401a44:	4c0a      	ldr	r4, [pc, #40]	; (401a70 <BUT_1_init+0x5c>)
  401a46:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401a48:	4b0a      	ldr	r3, [pc, #40]	; (401a74 <BUT_1_init+0x60>)
  401a4a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  401a4e:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401a50:	2220      	movs	r2, #32
  401a52:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310

	NVIC_EnableIRQ(BUT_1_PIO_ID);
	NVIC_SetPriority(BUT_1_PIO_ID, 1);
};
  401a56:	b002      	add	sp, #8
  401a58:	bd10      	pop	{r4, pc}
  401a5a:	bf00      	nop
  401a5c:	0040136d 	.word	0x0040136d
  401a60:	400e1400 	.word	0x400e1400
  401a64:	00400fef 	.word	0x00400fef
  401a68:	0040111b 	.word	0x0040111b
  401a6c:	00401c3d 	.word	0x00401c3d
  401a70:	00401179 	.word	0x00401179
  401a74:	e000e100 	.word	0xe000e100

00401a78 <BUT_2_init>:

void BUT_2_init(void){
  401a78:	b510      	push	{r4, lr}
  401a7a:	b082      	sub	sp, #8
	/* config. pino botao em modo de entrada */
	pmc_enable_periph_clk(BUT_2_PIO_ID);
  401a7c:	200c      	movs	r0, #12
  401a7e:	4b10      	ldr	r3, [pc, #64]	; (401ac0 <BUT_2_init+0x48>)
  401a80:	4798      	blx	r3
	pio_set_input(BUT_2_PIO, BUT_2_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401a82:	4c10      	ldr	r4, [pc, #64]	; (401ac4 <BUT_2_init+0x4c>)
  401a84:	2209      	movs	r2, #9
  401a86:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  401a8a:	4620      	mov	r0, r4
  401a8c:	4b0e      	ldr	r3, [pc, #56]	; (401ac8 <BUT_2_init+0x50>)
  401a8e:	4798      	blx	r3

	pio_enable_interrupt(BUT_2_PIO, BUT_2_PIN_MASK);
  401a90:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  401a94:	4620      	mov	r0, r4
  401a96:	4b0d      	ldr	r3, [pc, #52]	; (401acc <BUT_2_init+0x54>)
  401a98:	4798      	blx	r3
	pio_handler_set(BUT_2_PIO, BUT_2_PIO_ID, BUT_2_PIN_MASK, PIO_IT_FALL_EDGE, Button_2_Handler);
  401a9a:	4b0d      	ldr	r3, [pc, #52]	; (401ad0 <BUT_2_init+0x58>)
  401a9c:	9300      	str	r3, [sp, #0]
  401a9e:	2350      	movs	r3, #80	; 0x50
  401aa0:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  401aa4:	210c      	movs	r1, #12
  401aa6:	4620      	mov	r0, r4
  401aa8:	4c0a      	ldr	r4, [pc, #40]	; (401ad4 <BUT_2_init+0x5c>)
  401aaa:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401aac:	4b0a      	ldr	r3, [pc, #40]	; (401ad8 <BUT_2_init+0x60>)
  401aae:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  401ab2:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401ab4:	2220      	movs	r2, #32
  401ab6:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c

	NVIC_EnableIRQ(BUT_2_PIO_ID);
	NVIC_SetPriority(BUT_2_PIO_ID, 1);
};
  401aba:	b002      	add	sp, #8
  401abc:	bd10      	pop	{r4, pc}
  401abe:	bf00      	nop
  401ac0:	0040136d 	.word	0x0040136d
  401ac4:	400e1200 	.word	0x400e1200
  401ac8:	00400fef 	.word	0x00400fef
  401acc:	0040111b 	.word	0x0040111b
  401ad0:	004016c9 	.word	0x004016c9
  401ad4:	00401179 	.word	0x00401179
  401ad8:	e000e100 	.word	0xe000e100

00401adc <BUT_3_init>:

void BUT_3_init(void){
  401adc:	b510      	push	{r4, lr}
  401ade:	b082      	sub	sp, #8

	pmc_enable_periph_clk(BUT_3_PIO_ID);
  401ae0:	200a      	movs	r0, #10
  401ae2:	4b10      	ldr	r3, [pc, #64]	; (401b24 <BUT_3_init+0x48>)
  401ae4:	4798      	blx	r3
	pio_set_input(BUT_3_PIO, BUT_3_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401ae6:	4c10      	ldr	r4, [pc, #64]	; (401b28 <BUT_3_init+0x4c>)
  401ae8:	2209      	movs	r2, #9
  401aea:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  401aee:	4620      	mov	r0, r4
  401af0:	4b0e      	ldr	r3, [pc, #56]	; (401b2c <BUT_3_init+0x50>)
  401af2:	4798      	blx	r3

	pio_enable_interrupt(BUT_3_PIO, BUT_3_PIN_MASK);
  401af4:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  401af8:	4620      	mov	r0, r4
  401afa:	4b0d      	ldr	r3, [pc, #52]	; (401b30 <BUT_3_init+0x54>)
  401afc:	4798      	blx	r3
	pio_handler_set(BUT_3_PIO, BUT_3_PIO_ID, BUT_3_PIN_MASK, PIO_IT_FALL_EDGE, Button_3_Handler);
  401afe:	4b0d      	ldr	r3, [pc, #52]	; (401b34 <BUT_3_init+0x58>)
  401b00:	9300      	str	r3, [sp, #0]
  401b02:	2350      	movs	r3, #80	; 0x50
  401b04:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  401b08:	210a      	movs	r1, #10
  401b0a:	4620      	mov	r0, r4
  401b0c:	4c0a      	ldr	r4, [pc, #40]	; (401b38 <BUT_3_init+0x5c>)
  401b0e:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401b10:	4b0a      	ldr	r3, [pc, #40]	; (401b3c <BUT_3_init+0x60>)
  401b12:	f44f 6280 	mov.w	r2, #1024	; 0x400
  401b16:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401b18:	2220      	movs	r2, #32
  401b1a:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a

	NVIC_EnableIRQ(BUT_3_PIO_ID);
	NVIC_SetPriority(BUT_3_PIO_ID, 1);
};
  401b1e:	b002      	add	sp, #8
  401b20:	bd10      	pop	{r4, pc}
  401b22:	bf00      	nop
  401b24:	0040136d 	.word	0x0040136d
  401b28:	400e0e00 	.word	0x400e0e00
  401b2c:	00400fef 	.word	0x00400fef
  401b30:	0040111b 	.word	0x0040111b
  401b34:	00401771 	.word	0x00401771
  401b38:	00401179 	.word	0x00401179
  401b3c:	e000e100 	.word	0xe000e100

00401b40 <print>:

void print(int h, int m){
  401b40:	b570      	push	{r4, r5, r6, lr}
  401b42:	b0c2      	sub	sp, #264	; 0x108
  401b44:	4604      	mov	r4, r0
  401b46:	460d      	mov	r5, r1
	
	gfx_mono_draw_filled_circle(115, 5, 5, GFX_PIXEL_SET, GFX_WHOLE);
  401b48:	23ff      	movs	r3, #255	; 0xff
  401b4a:	9300      	str	r3, [sp, #0]
  401b4c:	2301      	movs	r3, #1
  401b4e:	2205      	movs	r2, #5
  401b50:	4611      	mov	r1, r2
  401b52:	2073      	movs	r0, #115	; 0x73
  401b54:	4e07      	ldr	r6, [pc, #28]	; (401b74 <print+0x34>)
  401b56:	47b0      	blx	r6
	uint8_t stringLCD[256];
	sprintf(stringLCD, "T%02d:%02d", h, m);
  401b58:	462b      	mov	r3, r5
  401b5a:	4622      	mov	r2, r4
  401b5c:	4906      	ldr	r1, [pc, #24]	; (401b78 <print+0x38>)
  401b5e:	a802      	add	r0, sp, #8
  401b60:	4c06      	ldr	r4, [pc, #24]	; (401b7c <print+0x3c>)
  401b62:	47a0      	blx	r4
	gfx_mono_draw_string(stringLCD, 0, 0, &sysfont);
  401b64:	4b06      	ldr	r3, [pc, #24]	; (401b80 <print+0x40>)
  401b66:	2200      	movs	r2, #0
  401b68:	4611      	mov	r1, r2
  401b6a:	a802      	add	r0, sp, #8
  401b6c:	4c05      	ldr	r4, [pc, #20]	; (401b84 <print+0x44>)
  401b6e:	47a0      	blx	r4
	
}
  401b70:	b042      	add	sp, #264	; 0x108
  401b72:	bd70      	pop	{r4, r5, r6, pc}
  401b74:	004007cd 	.word	0x004007cd
  401b78:	0040772c 	.word	0x0040772c
  401b7c:	00401e4d 	.word	0x00401e4d
  401b80:	2040000c 	.word	0x2040000c
  401b84:	00400995 	.word	0x00400995

00401b88 <RTC_Handler>:
{
  401b88:	b530      	push	{r4, r5, lr}
  401b8a:	b085      	sub	sp, #20
	uint32_t ul_status = rtc_get_status(RTC);
  401b8c:	4823      	ldr	r0, [pc, #140]	; (401c1c <RTC_Handler+0x94>)
  401b8e:	4b24      	ldr	r3, [pc, #144]	; (401c20 <RTC_Handler+0x98>)
  401b90:	4798      	blx	r3
  401b92:	4604      	mov	r4, r0
	if ((ul_status & RTC_SR_SEC) == RTC_SR_SEC) {
  401b94:	f010 0f04 	tst.w	r0, #4
  401b98:	d112      	bne.n	401bc0 <RTC_Handler+0x38>
	if ((ul_status & RTC_SR_ALARM) == RTC_SR_ALARM) {
  401b9a:	f014 0f02 	tst.w	r4, #2
  401b9e:	d122      	bne.n	401be6 <RTC_Handler+0x5e>
	rtc_clear_status(RTC, RTC_SCCR_ACKCLR);
  401ba0:	4d1e      	ldr	r5, [pc, #120]	; (401c1c <RTC_Handler+0x94>)
  401ba2:	2101      	movs	r1, #1
  401ba4:	4628      	mov	r0, r5
  401ba6:	4c1f      	ldr	r4, [pc, #124]	; (401c24 <RTC_Handler+0x9c>)
  401ba8:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TIMCLR);
  401baa:	2108      	movs	r1, #8
  401bac:	4628      	mov	r0, r5
  401bae:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_CALCLR);
  401bb0:	2110      	movs	r1, #16
  401bb2:	4628      	mov	r0, r5
  401bb4:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TDERRCLR);	
  401bb6:	2120      	movs	r1, #32
  401bb8:	4628      	mov	r0, r5
  401bba:	47a0      	blx	r4
}
  401bbc:	b005      	add	sp, #20
  401bbe:	bd30      	pop	{r4, r5, pc}
		rtc_clear_status(RTC, RTC_SCCR_SECCLR);
  401bc0:	4d16      	ldr	r5, [pc, #88]	; (401c1c <RTC_Handler+0x94>)
  401bc2:	2104      	movs	r1, #4
  401bc4:	4628      	mov	r0, r5
  401bc6:	4b17      	ldr	r3, [pc, #92]	; (401c24 <RTC_Handler+0x9c>)
  401bc8:	4798      	blx	r3
		rtc_get_time(RTC, &h, &m, &s);
  401bca:	ab03      	add	r3, sp, #12
  401bcc:	aa02      	add	r2, sp, #8
  401bce:	a901      	add	r1, sp, #4
  401bd0:	4628      	mov	r0, r5
  401bd2:	4d15      	ldr	r5, [pc, #84]	; (401c28 <RTC_Handler+0xa0>)
  401bd4:	47a8      	blx	r5
		if (s==0){
  401bd6:	9b03      	ldr	r3, [sp, #12]
  401bd8:	2b00      	cmp	r3, #0
  401bda:	d1de      	bne.n	401b9a <RTC_Handler+0x12>
			print(h,m);
  401bdc:	9902      	ldr	r1, [sp, #8]
  401bde:	9801      	ldr	r0, [sp, #4]
  401be0:	4b12      	ldr	r3, [pc, #72]	; (401c2c <RTC_Handler+0xa4>)
  401be2:	4798      	blx	r3
  401be4:	e7d9      	b.n	401b9a <RTC_Handler+0x12>
			rtc_clear_status(RTC, RTC_SCCR_ALRCLR);
  401be6:	4c0d      	ldr	r4, [pc, #52]	; (401c1c <RTC_Handler+0x94>)
  401be8:	2102      	movs	r1, #2
  401bea:	4620      	mov	r0, r4
  401bec:	4b0d      	ldr	r3, [pc, #52]	; (401c24 <RTC_Handler+0x9c>)
  401bee:	4798      	blx	r3
			rtc_get_time(RTC, &h, &m, &s);
  401bf0:	ab03      	add	r3, sp, #12
  401bf2:	aa02      	add	r2, sp, #8
  401bf4:	a901      	add	r1, sp, #4
  401bf6:	4620      	mov	r0, r4
  401bf8:	4c0b      	ldr	r4, [pc, #44]	; (401c28 <RTC_Handler+0xa0>)
  401bfa:	47a0      	blx	r4
			flag_led0 = !flag_led0;
  401bfc:	4a0c      	ldr	r2, [pc, #48]	; (401c30 <RTC_Handler+0xa8>)
  401bfe:	7813      	ldrb	r3, [r2, #0]
  401c00:	fab3 f383 	clz	r3, r3
  401c04:	095b      	lsrs	r3, r3, #5
  401c06:	7013      	strb	r3, [r2, #0]
			if (flag_led0){
  401c08:	7813      	ldrb	r3, [r2, #0]
  401c0a:	b11b      	cbz	r3, 401c14 <RTC_Handler+0x8c>
				pmc_enable_periph_clk(ID_TC1);
  401c0c:	2018      	movs	r0, #24
  401c0e:	4b09      	ldr	r3, [pc, #36]	; (401c34 <RTC_Handler+0xac>)
  401c10:	4798      	blx	r3
  401c12:	e7c5      	b.n	401ba0 <RTC_Handler+0x18>
				pmc_disable_periph_clk(ID_TC1);
  401c14:	2018      	movs	r0, #24
  401c16:	4b08      	ldr	r3, [pc, #32]	; (401c38 <RTC_Handler+0xb0>)
  401c18:	4798      	blx	r3
  401c1a:	e7c1      	b.n	401ba0 <RTC_Handler+0x18>
  401c1c:	400e1860 	.word	0x400e1860
  401c20:	004003fd 	.word	0x004003fd
  401c24:	00400401 	.word	0x00400401
  401c28:	004001c7 	.word	0x004001c7
  401c2c:	00401b41 	.word	0x00401b41
  401c30:	20400c75 	.word	0x20400c75
  401c34:	0040136d 	.word	0x0040136d
  401c38:	004013c1 	.word	0x004013c1

00401c3c <Button_1_Handler>:
static void Button_1_Handler(uint32_t id, uint32_t mask){
  401c3c:	b510      	push	{r4, lr}
  401c3e:	b0c4      	sub	sp, #272	; 0x110
	if(flag_but_1){
  401c40:	4b1a      	ldr	r3, [pc, #104]	; (401cac <Button_1_Handler+0x70>)
  401c42:	781b      	ldrb	r3, [r3, #0]
  401c44:	bb03      	cbnz	r3, 401c88 <Button_1_Handler+0x4c>
		gfx_mono_draw_filled_circle(115, 5, 5, GFX_PIXEL_SET, GFX_WHOLE);
  401c46:	23ff      	movs	r3, #255	; 0xff
  401c48:	9300      	str	r3, [sp, #0]
  401c4a:	2301      	movs	r3, #1
  401c4c:	2205      	movs	r2, #5
  401c4e:	4611      	mov	r1, r2
  401c50:	2073      	movs	r0, #115	; 0x73
  401c52:	4c17      	ldr	r4, [pc, #92]	; (401cb0 <Button_1_Handler+0x74>)
  401c54:	47a0      	blx	r4
		sprintf(stringLCD, "A%02d:%02d", hora, minuto+but_counter);
  401c56:	4b17      	ldr	r3, [pc, #92]	; (401cb4 <Button_1_Handler+0x78>)
  401c58:	681a      	ldr	r2, [r3, #0]
  401c5a:	4b17      	ldr	r3, [pc, #92]	; (401cb8 <Button_1_Handler+0x7c>)
  401c5c:	681b      	ldr	r3, [r3, #0]
  401c5e:	4413      	add	r3, r2
  401c60:	4a16      	ldr	r2, [pc, #88]	; (401cbc <Button_1_Handler+0x80>)
  401c62:	6812      	ldr	r2, [r2, #0]
  401c64:	4916      	ldr	r1, [pc, #88]	; (401cc0 <Button_1_Handler+0x84>)
  401c66:	a804      	add	r0, sp, #16
  401c68:	4c16      	ldr	r4, [pc, #88]	; (401cc4 <Button_1_Handler+0x88>)
  401c6a:	47a0      	blx	r4
		gfx_mono_draw_string(stringLCD, 0, 0, &sysfont);
  401c6c:	4b16      	ldr	r3, [pc, #88]	; (401cc8 <Button_1_Handler+0x8c>)
  401c6e:	2200      	movs	r2, #0
  401c70:	4611      	mov	r1, r2
  401c72:	a804      	add	r0, sp, #16
  401c74:	4c15      	ldr	r4, [pc, #84]	; (401ccc <Button_1_Handler+0x90>)
  401c76:	47a0      	blx	r4
		flag_but_1=!flag_but_1;
  401c78:	4a0c      	ldr	r2, [pc, #48]	; (401cac <Button_1_Handler+0x70>)
  401c7a:	7813      	ldrb	r3, [r2, #0]
  401c7c:	fab3 f383 	clz	r3, r3
  401c80:	095b      	lsrs	r3, r3, #5
  401c82:	7013      	strb	r3, [r2, #0]
}
  401c84:	b044      	add	sp, #272	; 0x110
  401c86:	bd10      	pop	{r4, pc}
		rtc_get_time(RTC, &h, &m, &s);
  401c88:	ab04      	add	r3, sp, #16
  401c8a:	aa03      	add	r2, sp, #12
  401c8c:	a902      	add	r1, sp, #8
  401c8e:	4810      	ldr	r0, [pc, #64]	; (401cd0 <Button_1_Handler+0x94>)
  401c90:	4c10      	ldr	r4, [pc, #64]	; (401cd4 <Button_1_Handler+0x98>)
  401c92:	47a0      	blx	r4
		print(h,m);
  401c94:	9903      	ldr	r1, [sp, #12]
  401c96:	9802      	ldr	r0, [sp, #8]
  401c98:	4b0f      	ldr	r3, [pc, #60]	; (401cd8 <Button_1_Handler+0x9c>)
  401c9a:	4798      	blx	r3
		flag_but_1=!flag_but_1;
  401c9c:	4a03      	ldr	r2, [pc, #12]	; (401cac <Button_1_Handler+0x70>)
  401c9e:	7813      	ldrb	r3, [r2, #0]
  401ca0:	fab3 f383 	clz	r3, r3
  401ca4:	095b      	lsrs	r3, r3, #5
  401ca6:	7013      	strb	r3, [r2, #0]
  401ca8:	e7ec      	b.n	401c84 <Button_1_Handler+0x48>
  401caa:	bf00      	nop
  401cac:	20400c74 	.word	0x20400c74
  401cb0:	004007cd 	.word	0x004007cd
  401cb4:	20400024 	.word	0x20400024
  401cb8:	20400c70 	.word	0x20400c70
  401cbc:	20400020 	.word	0x20400020
  401cc0:	00407720 	.word	0x00407720
  401cc4:	00401e4d 	.word	0x00401e4d
  401cc8:	2040000c 	.word	0x2040000c
  401ccc:	00400995 	.word	0x00400995
  401cd0:	400e1860 	.word	0x400e1860
  401cd4:	004001c7 	.word	0x004001c7
  401cd8:	00401b41 	.word	0x00401b41

00401cdc <main>:

int main (void)
{
  401cdc:	b508      	push	{r3, lr}
	board_init();
  401cde:	4b11      	ldr	r3, [pc, #68]	; (401d24 <main+0x48>)
  401ce0:	4798      	blx	r3
	sysclk_init();
  401ce2:	4b11      	ldr	r3, [pc, #68]	; (401d28 <main+0x4c>)
  401ce4:	4798      	blx	r3
	delay_init();
	gfx_mono_ssd1306_init();
  401ce6:	4b11      	ldr	r3, [pc, #68]	; (401d2c <main+0x50>)
  401ce8:	4798      	blx	r3

	/* Configura os bot?es */
	BUT_init();
  401cea:	4b11      	ldr	r3, [pc, #68]	; (401d30 <main+0x54>)
  401cec:	4798      	blx	r3
	BUT_1_init();
  401cee:	4b11      	ldr	r3, [pc, #68]	; (401d34 <main+0x58>)
  401cf0:	4798      	blx	r3
	BUT_2_init();
  401cf2:	4b11      	ldr	r3, [pc, #68]	; (401d38 <main+0x5c>)
  401cf4:	4798      	blx	r3
	BUT_3_init();
  401cf6:	4b11      	ldr	r3, [pc, #68]	; (401d3c <main+0x60>)
  401cf8:	4798      	blx	r3
	
	/* Configura Leds */
	LED_init(1);
  401cfa:	2001      	movs	r0, #1
  401cfc:	4b10      	ldr	r3, [pc, #64]	; (401d40 <main+0x64>)
  401cfe:	4798      	blx	r3
	
	/** Configura RTC */
	RTC_init();
  401d00:	4b10      	ldr	r3, [pc, #64]	; (401d44 <main+0x68>)
  401d02:	4798      	blx	r3

	
	/** Configura timer TC0, canal 1 */
	TC_init(TC0, ID_TC1, 1, 4);
  401d04:	2304      	movs	r3, #4
  401d06:	2201      	movs	r2, #1
  401d08:	2118      	movs	r1, #24
  401d0a:	480f      	ldr	r0, [pc, #60]	; (401d48 <main+0x6c>)
  401d0c:	4c0f      	ldr	r4, [pc, #60]	; (401d4c <main+0x70>)
  401d0e:	47a0      	blx	r4

	flag_led0 = 0;
  401d10:	2300      	movs	r3, #0
  401d12:	4a0f      	ldr	r2, [pc, #60]	; (401d50 <main+0x74>)
  401d14:	7013      	strb	r3, [r2, #0]
	flag_but_1 = 0;
  401d16:	4a0f      	ldr	r2, [pc, #60]	; (401d54 <main+0x78>)
  401d18:	7013      	strb	r3, [r2, #0]
	flag_led_2 = 0;
  401d1a:	4a0f      	ldr	r2, [pc, #60]	; (401d58 <main+0x7c>)
  401d1c:	7013      	strb	r3, [r2, #0]
	flag_led_3 = 0;
  401d1e:	4a0f      	ldr	r2, [pc, #60]	; (401d5c <main+0x80>)
  401d20:	7013      	strb	r3, [r2, #0]
  401d22:	e7fe      	b.n	401d22 <main+0x46>
  401d24:	00400e15 	.word	0x00400e15
  401d28:	00400da5 	.word	0x00400da5
  401d2c:	00400a2d 	.word	0x00400a2d
  401d30:	004019b1 	.word	0x004019b1
  401d34:	00401a15 	.word	0x00401a15
  401d38:	00401a79 	.word	0x00401a79
  401d3c:	00401add 	.word	0x00401add
  401d40:	00401985 	.word	0x00401985
  401d44:	00401881 	.word	0x00401881
  401d48:	4000c000 	.word	0x4000c000
  401d4c:	004018f1 	.word	0x004018f1
  401d50:	20400c75 	.word	0x20400c75
  401d54:	20400c74 	.word	0x20400c74
  401d58:	20400c76 	.word	0x20400c76
  401d5c:	20400c77 	.word	0x20400c77

00401d60 <__libc_init_array>:
  401d60:	b570      	push	{r4, r5, r6, lr}
  401d62:	4e0f      	ldr	r6, [pc, #60]	; (401da0 <__libc_init_array+0x40>)
  401d64:	4d0f      	ldr	r5, [pc, #60]	; (401da4 <__libc_init_array+0x44>)
  401d66:	1b76      	subs	r6, r6, r5
  401d68:	10b6      	asrs	r6, r6, #2
  401d6a:	bf18      	it	ne
  401d6c:	2400      	movne	r4, #0
  401d6e:	d005      	beq.n	401d7c <__libc_init_array+0x1c>
  401d70:	3401      	adds	r4, #1
  401d72:	f855 3b04 	ldr.w	r3, [r5], #4
  401d76:	4798      	blx	r3
  401d78:	42a6      	cmp	r6, r4
  401d7a:	d1f9      	bne.n	401d70 <__libc_init_array+0x10>
  401d7c:	4e0a      	ldr	r6, [pc, #40]	; (401da8 <__libc_init_array+0x48>)
  401d7e:	4d0b      	ldr	r5, [pc, #44]	; (401dac <__libc_init_array+0x4c>)
  401d80:	1b76      	subs	r6, r6, r5
  401d82:	f005 fe1d 	bl	4079c0 <_init>
  401d86:	10b6      	asrs	r6, r6, #2
  401d88:	bf18      	it	ne
  401d8a:	2400      	movne	r4, #0
  401d8c:	d006      	beq.n	401d9c <__libc_init_array+0x3c>
  401d8e:	3401      	adds	r4, #1
  401d90:	f855 3b04 	ldr.w	r3, [r5], #4
  401d94:	4798      	blx	r3
  401d96:	42a6      	cmp	r6, r4
  401d98:	d1f9      	bne.n	401d8e <__libc_init_array+0x2e>
  401d9a:	bd70      	pop	{r4, r5, r6, pc}
  401d9c:	bd70      	pop	{r4, r5, r6, pc}
  401d9e:	bf00      	nop
  401da0:	004079cc 	.word	0x004079cc
  401da4:	004079cc 	.word	0x004079cc
  401da8:	004079d4 	.word	0x004079d4
  401dac:	004079cc 	.word	0x004079cc

00401db0 <memset>:
  401db0:	b470      	push	{r4, r5, r6}
  401db2:	0786      	lsls	r6, r0, #30
  401db4:	d046      	beq.n	401e44 <memset+0x94>
  401db6:	1e54      	subs	r4, r2, #1
  401db8:	2a00      	cmp	r2, #0
  401dba:	d041      	beq.n	401e40 <memset+0x90>
  401dbc:	b2ca      	uxtb	r2, r1
  401dbe:	4603      	mov	r3, r0
  401dc0:	e002      	b.n	401dc8 <memset+0x18>
  401dc2:	f114 34ff 	adds.w	r4, r4, #4294967295
  401dc6:	d33b      	bcc.n	401e40 <memset+0x90>
  401dc8:	f803 2b01 	strb.w	r2, [r3], #1
  401dcc:	079d      	lsls	r5, r3, #30
  401dce:	d1f8      	bne.n	401dc2 <memset+0x12>
  401dd0:	2c03      	cmp	r4, #3
  401dd2:	d92e      	bls.n	401e32 <memset+0x82>
  401dd4:	b2cd      	uxtb	r5, r1
  401dd6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401dda:	2c0f      	cmp	r4, #15
  401ddc:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401de0:	d919      	bls.n	401e16 <memset+0x66>
  401de2:	f103 0210 	add.w	r2, r3, #16
  401de6:	4626      	mov	r6, r4
  401de8:	3e10      	subs	r6, #16
  401dea:	2e0f      	cmp	r6, #15
  401dec:	f842 5c10 	str.w	r5, [r2, #-16]
  401df0:	f842 5c0c 	str.w	r5, [r2, #-12]
  401df4:	f842 5c08 	str.w	r5, [r2, #-8]
  401df8:	f842 5c04 	str.w	r5, [r2, #-4]
  401dfc:	f102 0210 	add.w	r2, r2, #16
  401e00:	d8f2      	bhi.n	401de8 <memset+0x38>
  401e02:	f1a4 0210 	sub.w	r2, r4, #16
  401e06:	f022 020f 	bic.w	r2, r2, #15
  401e0a:	f004 040f 	and.w	r4, r4, #15
  401e0e:	3210      	adds	r2, #16
  401e10:	2c03      	cmp	r4, #3
  401e12:	4413      	add	r3, r2
  401e14:	d90d      	bls.n	401e32 <memset+0x82>
  401e16:	461e      	mov	r6, r3
  401e18:	4622      	mov	r2, r4
  401e1a:	3a04      	subs	r2, #4
  401e1c:	2a03      	cmp	r2, #3
  401e1e:	f846 5b04 	str.w	r5, [r6], #4
  401e22:	d8fa      	bhi.n	401e1a <memset+0x6a>
  401e24:	1f22      	subs	r2, r4, #4
  401e26:	f022 0203 	bic.w	r2, r2, #3
  401e2a:	3204      	adds	r2, #4
  401e2c:	4413      	add	r3, r2
  401e2e:	f004 0403 	and.w	r4, r4, #3
  401e32:	b12c      	cbz	r4, 401e40 <memset+0x90>
  401e34:	b2c9      	uxtb	r1, r1
  401e36:	441c      	add	r4, r3
  401e38:	f803 1b01 	strb.w	r1, [r3], #1
  401e3c:	429c      	cmp	r4, r3
  401e3e:	d1fb      	bne.n	401e38 <memset+0x88>
  401e40:	bc70      	pop	{r4, r5, r6}
  401e42:	4770      	bx	lr
  401e44:	4614      	mov	r4, r2
  401e46:	4603      	mov	r3, r0
  401e48:	e7c2      	b.n	401dd0 <memset+0x20>
  401e4a:	bf00      	nop

00401e4c <sprintf>:
  401e4c:	b40e      	push	{r1, r2, r3}
  401e4e:	b5f0      	push	{r4, r5, r6, r7, lr}
  401e50:	b09c      	sub	sp, #112	; 0x70
  401e52:	ab21      	add	r3, sp, #132	; 0x84
  401e54:	490f      	ldr	r1, [pc, #60]	; (401e94 <sprintf+0x48>)
  401e56:	f853 2b04 	ldr.w	r2, [r3], #4
  401e5a:	9301      	str	r3, [sp, #4]
  401e5c:	4605      	mov	r5, r0
  401e5e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401e62:	6808      	ldr	r0, [r1, #0]
  401e64:	9502      	str	r5, [sp, #8]
  401e66:	f44f 7702 	mov.w	r7, #520	; 0x208
  401e6a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401e6e:	a902      	add	r1, sp, #8
  401e70:	9506      	str	r5, [sp, #24]
  401e72:	f8ad 7014 	strh.w	r7, [sp, #20]
  401e76:	9404      	str	r4, [sp, #16]
  401e78:	9407      	str	r4, [sp, #28]
  401e7a:	f8ad 6016 	strh.w	r6, [sp, #22]
  401e7e:	f000 f80b 	bl	401e98 <_svfprintf_r>
  401e82:	9b02      	ldr	r3, [sp, #8]
  401e84:	2200      	movs	r2, #0
  401e86:	701a      	strb	r2, [r3, #0]
  401e88:	b01c      	add	sp, #112	; 0x70
  401e8a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401e8e:	b003      	add	sp, #12
  401e90:	4770      	bx	lr
  401e92:	bf00      	nop
  401e94:	20400028 	.word	0x20400028

00401e98 <_svfprintf_r>:
  401e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401e9c:	b0c3      	sub	sp, #268	; 0x10c
  401e9e:	460c      	mov	r4, r1
  401ea0:	910b      	str	r1, [sp, #44]	; 0x2c
  401ea2:	4692      	mov	sl, r2
  401ea4:	930f      	str	r3, [sp, #60]	; 0x3c
  401ea6:	900c      	str	r0, [sp, #48]	; 0x30
  401ea8:	f002 fa0e 	bl	4042c8 <_localeconv_r>
  401eac:	6803      	ldr	r3, [r0, #0]
  401eae:	931a      	str	r3, [sp, #104]	; 0x68
  401eb0:	4618      	mov	r0, r3
  401eb2:	f003 f8e5 	bl	405080 <strlen>
  401eb6:	89a3      	ldrh	r3, [r4, #12]
  401eb8:	9019      	str	r0, [sp, #100]	; 0x64
  401eba:	0619      	lsls	r1, r3, #24
  401ebc:	d503      	bpl.n	401ec6 <_svfprintf_r+0x2e>
  401ebe:	6923      	ldr	r3, [r4, #16]
  401ec0:	2b00      	cmp	r3, #0
  401ec2:	f001 8003 	beq.w	402ecc <_svfprintf_r+0x1034>
  401ec6:	2300      	movs	r3, #0
  401ec8:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401ecc:	9313      	str	r3, [sp, #76]	; 0x4c
  401ece:	9315      	str	r3, [sp, #84]	; 0x54
  401ed0:	9314      	str	r3, [sp, #80]	; 0x50
  401ed2:	9327      	str	r3, [sp, #156]	; 0x9c
  401ed4:	9326      	str	r3, [sp, #152]	; 0x98
  401ed6:	9318      	str	r3, [sp, #96]	; 0x60
  401ed8:	931b      	str	r3, [sp, #108]	; 0x6c
  401eda:	9309      	str	r3, [sp, #36]	; 0x24
  401edc:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401ee0:	46c8      	mov	r8, r9
  401ee2:	9316      	str	r3, [sp, #88]	; 0x58
  401ee4:	9317      	str	r3, [sp, #92]	; 0x5c
  401ee6:	f89a 3000 	ldrb.w	r3, [sl]
  401eea:	4654      	mov	r4, sl
  401eec:	b1e3      	cbz	r3, 401f28 <_svfprintf_r+0x90>
  401eee:	2b25      	cmp	r3, #37	; 0x25
  401ef0:	d102      	bne.n	401ef8 <_svfprintf_r+0x60>
  401ef2:	e019      	b.n	401f28 <_svfprintf_r+0x90>
  401ef4:	2b25      	cmp	r3, #37	; 0x25
  401ef6:	d003      	beq.n	401f00 <_svfprintf_r+0x68>
  401ef8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401efc:	2b00      	cmp	r3, #0
  401efe:	d1f9      	bne.n	401ef4 <_svfprintf_r+0x5c>
  401f00:	eba4 050a 	sub.w	r5, r4, sl
  401f04:	b185      	cbz	r5, 401f28 <_svfprintf_r+0x90>
  401f06:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401f08:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401f0a:	f8c8 a000 	str.w	sl, [r8]
  401f0e:	3301      	adds	r3, #1
  401f10:	442a      	add	r2, r5
  401f12:	2b07      	cmp	r3, #7
  401f14:	f8c8 5004 	str.w	r5, [r8, #4]
  401f18:	9227      	str	r2, [sp, #156]	; 0x9c
  401f1a:	9326      	str	r3, [sp, #152]	; 0x98
  401f1c:	dc7f      	bgt.n	40201e <_svfprintf_r+0x186>
  401f1e:	f108 0808 	add.w	r8, r8, #8
  401f22:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401f24:	442b      	add	r3, r5
  401f26:	9309      	str	r3, [sp, #36]	; 0x24
  401f28:	7823      	ldrb	r3, [r4, #0]
  401f2a:	2b00      	cmp	r3, #0
  401f2c:	d07f      	beq.n	40202e <_svfprintf_r+0x196>
  401f2e:	2300      	movs	r3, #0
  401f30:	461a      	mov	r2, r3
  401f32:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401f36:	4619      	mov	r1, r3
  401f38:	930d      	str	r3, [sp, #52]	; 0x34
  401f3a:	469b      	mov	fp, r3
  401f3c:	f04f 30ff 	mov.w	r0, #4294967295
  401f40:	7863      	ldrb	r3, [r4, #1]
  401f42:	900a      	str	r0, [sp, #40]	; 0x28
  401f44:	f104 0a01 	add.w	sl, r4, #1
  401f48:	f10a 0a01 	add.w	sl, sl, #1
  401f4c:	f1a3 0020 	sub.w	r0, r3, #32
  401f50:	2858      	cmp	r0, #88	; 0x58
  401f52:	f200 83c1 	bhi.w	4026d8 <_svfprintf_r+0x840>
  401f56:	e8df f010 	tbh	[pc, r0, lsl #1]
  401f5a:	0238      	.short	0x0238
  401f5c:	03bf03bf 	.word	0x03bf03bf
  401f60:	03bf0240 	.word	0x03bf0240
  401f64:	03bf03bf 	.word	0x03bf03bf
  401f68:	03bf03bf 	.word	0x03bf03bf
  401f6c:	024503bf 	.word	0x024503bf
  401f70:	03bf0203 	.word	0x03bf0203
  401f74:	026b005d 	.word	0x026b005d
  401f78:	028603bf 	.word	0x028603bf
  401f7c:	039d039d 	.word	0x039d039d
  401f80:	039d039d 	.word	0x039d039d
  401f84:	039d039d 	.word	0x039d039d
  401f88:	039d039d 	.word	0x039d039d
  401f8c:	03bf039d 	.word	0x03bf039d
  401f90:	03bf03bf 	.word	0x03bf03bf
  401f94:	03bf03bf 	.word	0x03bf03bf
  401f98:	03bf03bf 	.word	0x03bf03bf
  401f9c:	03bf03bf 	.word	0x03bf03bf
  401fa0:	033703bf 	.word	0x033703bf
  401fa4:	03bf0357 	.word	0x03bf0357
  401fa8:	03bf0357 	.word	0x03bf0357
  401fac:	03bf03bf 	.word	0x03bf03bf
  401fb0:	039803bf 	.word	0x039803bf
  401fb4:	03bf03bf 	.word	0x03bf03bf
  401fb8:	03bf03ad 	.word	0x03bf03ad
  401fbc:	03bf03bf 	.word	0x03bf03bf
  401fc0:	03bf03bf 	.word	0x03bf03bf
  401fc4:	03bf0259 	.word	0x03bf0259
  401fc8:	031e03bf 	.word	0x031e03bf
  401fcc:	03bf03bf 	.word	0x03bf03bf
  401fd0:	03bf03bf 	.word	0x03bf03bf
  401fd4:	03bf03bf 	.word	0x03bf03bf
  401fd8:	03bf03bf 	.word	0x03bf03bf
  401fdc:	03bf03bf 	.word	0x03bf03bf
  401fe0:	02db02c6 	.word	0x02db02c6
  401fe4:	03570357 	.word	0x03570357
  401fe8:	028b0357 	.word	0x028b0357
  401fec:	03bf02db 	.word	0x03bf02db
  401ff0:	029003bf 	.word	0x029003bf
  401ff4:	029d03bf 	.word	0x029d03bf
  401ff8:	02b401cc 	.word	0x02b401cc
  401ffc:	03bf0208 	.word	0x03bf0208
  402000:	03bf01e1 	.word	0x03bf01e1
  402004:	03bf007e 	.word	0x03bf007e
  402008:	020d03bf 	.word	0x020d03bf
  40200c:	980d      	ldr	r0, [sp, #52]	; 0x34
  40200e:	930f      	str	r3, [sp, #60]	; 0x3c
  402010:	4240      	negs	r0, r0
  402012:	900d      	str	r0, [sp, #52]	; 0x34
  402014:	f04b 0b04 	orr.w	fp, fp, #4
  402018:	f89a 3000 	ldrb.w	r3, [sl]
  40201c:	e794      	b.n	401f48 <_svfprintf_r+0xb0>
  40201e:	aa25      	add	r2, sp, #148	; 0x94
  402020:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402022:	980c      	ldr	r0, [sp, #48]	; 0x30
  402024:	f003 f89a 	bl	40515c <__ssprint_r>
  402028:	b940      	cbnz	r0, 40203c <_svfprintf_r+0x1a4>
  40202a:	46c8      	mov	r8, r9
  40202c:	e779      	b.n	401f22 <_svfprintf_r+0x8a>
  40202e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402030:	b123      	cbz	r3, 40203c <_svfprintf_r+0x1a4>
  402032:	980c      	ldr	r0, [sp, #48]	; 0x30
  402034:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402036:	aa25      	add	r2, sp, #148	; 0x94
  402038:	f003 f890 	bl	40515c <__ssprint_r>
  40203c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40203e:	899b      	ldrh	r3, [r3, #12]
  402040:	f013 0f40 	tst.w	r3, #64	; 0x40
  402044:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402046:	bf18      	it	ne
  402048:	f04f 33ff 	movne.w	r3, #4294967295
  40204c:	9309      	str	r3, [sp, #36]	; 0x24
  40204e:	9809      	ldr	r0, [sp, #36]	; 0x24
  402050:	b043      	add	sp, #268	; 0x10c
  402052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402056:	f01b 0f20 	tst.w	fp, #32
  40205a:	9311      	str	r3, [sp, #68]	; 0x44
  40205c:	f040 81dd 	bne.w	40241a <_svfprintf_r+0x582>
  402060:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402062:	f01b 0f10 	tst.w	fp, #16
  402066:	4613      	mov	r3, r2
  402068:	f040 856e 	bne.w	402b48 <_svfprintf_r+0xcb0>
  40206c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402070:	f000 856a 	beq.w	402b48 <_svfprintf_r+0xcb0>
  402074:	8814      	ldrh	r4, [r2, #0]
  402076:	3204      	adds	r2, #4
  402078:	2500      	movs	r5, #0
  40207a:	2301      	movs	r3, #1
  40207c:	920f      	str	r2, [sp, #60]	; 0x3c
  40207e:	2700      	movs	r7, #0
  402080:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402084:	990a      	ldr	r1, [sp, #40]	; 0x28
  402086:	1c4a      	adds	r2, r1, #1
  402088:	f000 8265 	beq.w	402556 <_svfprintf_r+0x6be>
  40208c:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402090:	9207      	str	r2, [sp, #28]
  402092:	ea54 0205 	orrs.w	r2, r4, r5
  402096:	f040 8264 	bne.w	402562 <_svfprintf_r+0x6ca>
  40209a:	2900      	cmp	r1, #0
  40209c:	f040 843c 	bne.w	402918 <_svfprintf_r+0xa80>
  4020a0:	2b00      	cmp	r3, #0
  4020a2:	f040 84d7 	bne.w	402a54 <_svfprintf_r+0xbbc>
  4020a6:	f01b 0301 	ands.w	r3, fp, #1
  4020aa:	930e      	str	r3, [sp, #56]	; 0x38
  4020ac:	f000 8604 	beq.w	402cb8 <_svfprintf_r+0xe20>
  4020b0:	ae42      	add	r6, sp, #264	; 0x108
  4020b2:	2330      	movs	r3, #48	; 0x30
  4020b4:	f806 3d41 	strb.w	r3, [r6, #-65]!
  4020b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4020ba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4020bc:	4293      	cmp	r3, r2
  4020be:	bfb8      	it	lt
  4020c0:	4613      	movlt	r3, r2
  4020c2:	9308      	str	r3, [sp, #32]
  4020c4:	2300      	movs	r3, #0
  4020c6:	9312      	str	r3, [sp, #72]	; 0x48
  4020c8:	b117      	cbz	r7, 4020d0 <_svfprintf_r+0x238>
  4020ca:	9b08      	ldr	r3, [sp, #32]
  4020cc:	3301      	adds	r3, #1
  4020ce:	9308      	str	r3, [sp, #32]
  4020d0:	9b07      	ldr	r3, [sp, #28]
  4020d2:	f013 0302 	ands.w	r3, r3, #2
  4020d6:	9310      	str	r3, [sp, #64]	; 0x40
  4020d8:	d002      	beq.n	4020e0 <_svfprintf_r+0x248>
  4020da:	9b08      	ldr	r3, [sp, #32]
  4020dc:	3302      	adds	r3, #2
  4020de:	9308      	str	r3, [sp, #32]
  4020e0:	9b07      	ldr	r3, [sp, #28]
  4020e2:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4020e6:	f040 830e 	bne.w	402706 <_svfprintf_r+0x86e>
  4020ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4020ec:	9a08      	ldr	r2, [sp, #32]
  4020ee:	eba3 0b02 	sub.w	fp, r3, r2
  4020f2:	f1bb 0f00 	cmp.w	fp, #0
  4020f6:	f340 8306 	ble.w	402706 <_svfprintf_r+0x86e>
  4020fa:	f1bb 0f10 	cmp.w	fp, #16
  4020fe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402100:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402102:	dd29      	ble.n	402158 <_svfprintf_r+0x2c0>
  402104:	4643      	mov	r3, r8
  402106:	4621      	mov	r1, r4
  402108:	46a8      	mov	r8, r5
  40210a:	2710      	movs	r7, #16
  40210c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40210e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402110:	e006      	b.n	402120 <_svfprintf_r+0x288>
  402112:	f1ab 0b10 	sub.w	fp, fp, #16
  402116:	f1bb 0f10 	cmp.w	fp, #16
  40211a:	f103 0308 	add.w	r3, r3, #8
  40211e:	dd18      	ble.n	402152 <_svfprintf_r+0x2ba>
  402120:	3201      	adds	r2, #1
  402122:	48b7      	ldr	r0, [pc, #732]	; (402400 <_svfprintf_r+0x568>)
  402124:	9226      	str	r2, [sp, #152]	; 0x98
  402126:	3110      	adds	r1, #16
  402128:	2a07      	cmp	r2, #7
  40212a:	9127      	str	r1, [sp, #156]	; 0x9c
  40212c:	e883 0081 	stmia.w	r3, {r0, r7}
  402130:	ddef      	ble.n	402112 <_svfprintf_r+0x27a>
  402132:	aa25      	add	r2, sp, #148	; 0x94
  402134:	4629      	mov	r1, r5
  402136:	4620      	mov	r0, r4
  402138:	f003 f810 	bl	40515c <__ssprint_r>
  40213c:	2800      	cmp	r0, #0
  40213e:	f47f af7d 	bne.w	40203c <_svfprintf_r+0x1a4>
  402142:	f1ab 0b10 	sub.w	fp, fp, #16
  402146:	f1bb 0f10 	cmp.w	fp, #16
  40214a:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40214c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40214e:	464b      	mov	r3, r9
  402150:	dce6      	bgt.n	402120 <_svfprintf_r+0x288>
  402152:	4645      	mov	r5, r8
  402154:	460c      	mov	r4, r1
  402156:	4698      	mov	r8, r3
  402158:	3201      	adds	r2, #1
  40215a:	4ba9      	ldr	r3, [pc, #676]	; (402400 <_svfprintf_r+0x568>)
  40215c:	9226      	str	r2, [sp, #152]	; 0x98
  40215e:	445c      	add	r4, fp
  402160:	2a07      	cmp	r2, #7
  402162:	9427      	str	r4, [sp, #156]	; 0x9c
  402164:	e888 0808 	stmia.w	r8, {r3, fp}
  402168:	f300 8498 	bgt.w	402a9c <_svfprintf_r+0xc04>
  40216c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402170:	f108 0808 	add.w	r8, r8, #8
  402174:	b177      	cbz	r7, 402194 <_svfprintf_r+0x2fc>
  402176:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402178:	3301      	adds	r3, #1
  40217a:	3401      	adds	r4, #1
  40217c:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402180:	2201      	movs	r2, #1
  402182:	2b07      	cmp	r3, #7
  402184:	9427      	str	r4, [sp, #156]	; 0x9c
  402186:	9326      	str	r3, [sp, #152]	; 0x98
  402188:	e888 0006 	stmia.w	r8, {r1, r2}
  40218c:	f300 83db 	bgt.w	402946 <_svfprintf_r+0xaae>
  402190:	f108 0808 	add.w	r8, r8, #8
  402194:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402196:	b16b      	cbz	r3, 4021b4 <_svfprintf_r+0x31c>
  402198:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40219a:	3301      	adds	r3, #1
  40219c:	3402      	adds	r4, #2
  40219e:	a91e      	add	r1, sp, #120	; 0x78
  4021a0:	2202      	movs	r2, #2
  4021a2:	2b07      	cmp	r3, #7
  4021a4:	9427      	str	r4, [sp, #156]	; 0x9c
  4021a6:	9326      	str	r3, [sp, #152]	; 0x98
  4021a8:	e888 0006 	stmia.w	r8, {r1, r2}
  4021ac:	f300 83d6 	bgt.w	40295c <_svfprintf_r+0xac4>
  4021b0:	f108 0808 	add.w	r8, r8, #8
  4021b4:	2d80      	cmp	r5, #128	; 0x80
  4021b6:	f000 8315 	beq.w	4027e4 <_svfprintf_r+0x94c>
  4021ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4021bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4021be:	1a9f      	subs	r7, r3, r2
  4021c0:	2f00      	cmp	r7, #0
  4021c2:	dd36      	ble.n	402232 <_svfprintf_r+0x39a>
  4021c4:	2f10      	cmp	r7, #16
  4021c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4021c8:	4d8e      	ldr	r5, [pc, #568]	; (402404 <_svfprintf_r+0x56c>)
  4021ca:	dd27      	ble.n	40221c <_svfprintf_r+0x384>
  4021cc:	4642      	mov	r2, r8
  4021ce:	4621      	mov	r1, r4
  4021d0:	46b0      	mov	r8, r6
  4021d2:	f04f 0b10 	mov.w	fp, #16
  4021d6:	462e      	mov	r6, r5
  4021d8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4021da:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4021dc:	e004      	b.n	4021e8 <_svfprintf_r+0x350>
  4021de:	3f10      	subs	r7, #16
  4021e0:	2f10      	cmp	r7, #16
  4021e2:	f102 0208 	add.w	r2, r2, #8
  4021e6:	dd15      	ble.n	402214 <_svfprintf_r+0x37c>
  4021e8:	3301      	adds	r3, #1
  4021ea:	3110      	adds	r1, #16
  4021ec:	2b07      	cmp	r3, #7
  4021ee:	9127      	str	r1, [sp, #156]	; 0x9c
  4021f0:	9326      	str	r3, [sp, #152]	; 0x98
  4021f2:	e882 0840 	stmia.w	r2, {r6, fp}
  4021f6:	ddf2      	ble.n	4021de <_svfprintf_r+0x346>
  4021f8:	aa25      	add	r2, sp, #148	; 0x94
  4021fa:	4629      	mov	r1, r5
  4021fc:	4620      	mov	r0, r4
  4021fe:	f002 ffad 	bl	40515c <__ssprint_r>
  402202:	2800      	cmp	r0, #0
  402204:	f47f af1a 	bne.w	40203c <_svfprintf_r+0x1a4>
  402208:	3f10      	subs	r7, #16
  40220a:	2f10      	cmp	r7, #16
  40220c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40220e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402210:	464a      	mov	r2, r9
  402212:	dce9      	bgt.n	4021e8 <_svfprintf_r+0x350>
  402214:	4635      	mov	r5, r6
  402216:	460c      	mov	r4, r1
  402218:	4646      	mov	r6, r8
  40221a:	4690      	mov	r8, r2
  40221c:	3301      	adds	r3, #1
  40221e:	443c      	add	r4, r7
  402220:	2b07      	cmp	r3, #7
  402222:	9427      	str	r4, [sp, #156]	; 0x9c
  402224:	9326      	str	r3, [sp, #152]	; 0x98
  402226:	e888 00a0 	stmia.w	r8, {r5, r7}
  40222a:	f300 8381 	bgt.w	402930 <_svfprintf_r+0xa98>
  40222e:	f108 0808 	add.w	r8, r8, #8
  402232:	9b07      	ldr	r3, [sp, #28]
  402234:	05df      	lsls	r7, r3, #23
  402236:	f100 8268 	bmi.w	40270a <_svfprintf_r+0x872>
  40223a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40223c:	990e      	ldr	r1, [sp, #56]	; 0x38
  40223e:	f8c8 6000 	str.w	r6, [r8]
  402242:	3301      	adds	r3, #1
  402244:	440c      	add	r4, r1
  402246:	2b07      	cmp	r3, #7
  402248:	9427      	str	r4, [sp, #156]	; 0x9c
  40224a:	f8c8 1004 	str.w	r1, [r8, #4]
  40224e:	9326      	str	r3, [sp, #152]	; 0x98
  402250:	f300 834d 	bgt.w	4028ee <_svfprintf_r+0xa56>
  402254:	f108 0808 	add.w	r8, r8, #8
  402258:	9b07      	ldr	r3, [sp, #28]
  40225a:	075b      	lsls	r3, r3, #29
  40225c:	d53a      	bpl.n	4022d4 <_svfprintf_r+0x43c>
  40225e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402260:	9a08      	ldr	r2, [sp, #32]
  402262:	1a9d      	subs	r5, r3, r2
  402264:	2d00      	cmp	r5, #0
  402266:	dd35      	ble.n	4022d4 <_svfprintf_r+0x43c>
  402268:	2d10      	cmp	r5, #16
  40226a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40226c:	dd20      	ble.n	4022b0 <_svfprintf_r+0x418>
  40226e:	2610      	movs	r6, #16
  402270:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402272:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402276:	e004      	b.n	402282 <_svfprintf_r+0x3ea>
  402278:	3d10      	subs	r5, #16
  40227a:	2d10      	cmp	r5, #16
  40227c:	f108 0808 	add.w	r8, r8, #8
  402280:	dd16      	ble.n	4022b0 <_svfprintf_r+0x418>
  402282:	3301      	adds	r3, #1
  402284:	4a5e      	ldr	r2, [pc, #376]	; (402400 <_svfprintf_r+0x568>)
  402286:	9326      	str	r3, [sp, #152]	; 0x98
  402288:	3410      	adds	r4, #16
  40228a:	2b07      	cmp	r3, #7
  40228c:	9427      	str	r4, [sp, #156]	; 0x9c
  40228e:	e888 0044 	stmia.w	r8, {r2, r6}
  402292:	ddf1      	ble.n	402278 <_svfprintf_r+0x3e0>
  402294:	aa25      	add	r2, sp, #148	; 0x94
  402296:	4659      	mov	r1, fp
  402298:	4638      	mov	r0, r7
  40229a:	f002 ff5f 	bl	40515c <__ssprint_r>
  40229e:	2800      	cmp	r0, #0
  4022a0:	f47f aecc 	bne.w	40203c <_svfprintf_r+0x1a4>
  4022a4:	3d10      	subs	r5, #16
  4022a6:	2d10      	cmp	r5, #16
  4022a8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4022aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022ac:	46c8      	mov	r8, r9
  4022ae:	dce8      	bgt.n	402282 <_svfprintf_r+0x3ea>
  4022b0:	3301      	adds	r3, #1
  4022b2:	4a53      	ldr	r2, [pc, #332]	; (402400 <_svfprintf_r+0x568>)
  4022b4:	9326      	str	r3, [sp, #152]	; 0x98
  4022b6:	442c      	add	r4, r5
  4022b8:	2b07      	cmp	r3, #7
  4022ba:	9427      	str	r4, [sp, #156]	; 0x9c
  4022bc:	e888 0024 	stmia.w	r8, {r2, r5}
  4022c0:	dd08      	ble.n	4022d4 <_svfprintf_r+0x43c>
  4022c2:	aa25      	add	r2, sp, #148	; 0x94
  4022c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4022c6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4022c8:	f002 ff48 	bl	40515c <__ssprint_r>
  4022cc:	2800      	cmp	r0, #0
  4022ce:	f47f aeb5 	bne.w	40203c <_svfprintf_r+0x1a4>
  4022d2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4022d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4022d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4022d8:	9908      	ldr	r1, [sp, #32]
  4022da:	428a      	cmp	r2, r1
  4022dc:	bfac      	ite	ge
  4022de:	189b      	addge	r3, r3, r2
  4022e0:	185b      	addlt	r3, r3, r1
  4022e2:	9309      	str	r3, [sp, #36]	; 0x24
  4022e4:	2c00      	cmp	r4, #0
  4022e6:	f040 830d 	bne.w	402904 <_svfprintf_r+0xa6c>
  4022ea:	2300      	movs	r3, #0
  4022ec:	9326      	str	r3, [sp, #152]	; 0x98
  4022ee:	46c8      	mov	r8, r9
  4022f0:	e5f9      	b.n	401ee6 <_svfprintf_r+0x4e>
  4022f2:	9311      	str	r3, [sp, #68]	; 0x44
  4022f4:	f01b 0320 	ands.w	r3, fp, #32
  4022f8:	f040 81e3 	bne.w	4026c2 <_svfprintf_r+0x82a>
  4022fc:	f01b 0210 	ands.w	r2, fp, #16
  402300:	f040 842e 	bne.w	402b60 <_svfprintf_r+0xcc8>
  402304:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402308:	f000 842a 	beq.w	402b60 <_svfprintf_r+0xcc8>
  40230c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40230e:	4613      	mov	r3, r2
  402310:	460a      	mov	r2, r1
  402312:	3204      	adds	r2, #4
  402314:	880c      	ldrh	r4, [r1, #0]
  402316:	920f      	str	r2, [sp, #60]	; 0x3c
  402318:	2500      	movs	r5, #0
  40231a:	e6b0      	b.n	40207e <_svfprintf_r+0x1e6>
  40231c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40231e:	9311      	str	r3, [sp, #68]	; 0x44
  402320:	6816      	ldr	r6, [r2, #0]
  402322:	2400      	movs	r4, #0
  402324:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402328:	1d15      	adds	r5, r2, #4
  40232a:	2e00      	cmp	r6, #0
  40232c:	f000 86a7 	beq.w	40307e <_svfprintf_r+0x11e6>
  402330:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402332:	1c53      	adds	r3, r2, #1
  402334:	f000 8609 	beq.w	402f4a <_svfprintf_r+0x10b2>
  402338:	4621      	mov	r1, r4
  40233a:	4630      	mov	r0, r6
  40233c:	f002 fa88 	bl	404850 <memchr>
  402340:	2800      	cmp	r0, #0
  402342:	f000 86e1 	beq.w	403108 <_svfprintf_r+0x1270>
  402346:	1b83      	subs	r3, r0, r6
  402348:	930e      	str	r3, [sp, #56]	; 0x38
  40234a:	940a      	str	r4, [sp, #40]	; 0x28
  40234c:	950f      	str	r5, [sp, #60]	; 0x3c
  40234e:	f8cd b01c 	str.w	fp, [sp, #28]
  402352:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402356:	9308      	str	r3, [sp, #32]
  402358:	9412      	str	r4, [sp, #72]	; 0x48
  40235a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40235e:	e6b3      	b.n	4020c8 <_svfprintf_r+0x230>
  402360:	f89a 3000 	ldrb.w	r3, [sl]
  402364:	2201      	movs	r2, #1
  402366:	212b      	movs	r1, #43	; 0x2b
  402368:	e5ee      	b.n	401f48 <_svfprintf_r+0xb0>
  40236a:	f04b 0b20 	orr.w	fp, fp, #32
  40236e:	f89a 3000 	ldrb.w	r3, [sl]
  402372:	e5e9      	b.n	401f48 <_svfprintf_r+0xb0>
  402374:	9311      	str	r3, [sp, #68]	; 0x44
  402376:	2a00      	cmp	r2, #0
  402378:	f040 8795 	bne.w	4032a6 <_svfprintf_r+0x140e>
  40237c:	4b22      	ldr	r3, [pc, #136]	; (402408 <_svfprintf_r+0x570>)
  40237e:	9318      	str	r3, [sp, #96]	; 0x60
  402380:	f01b 0f20 	tst.w	fp, #32
  402384:	f040 8111 	bne.w	4025aa <_svfprintf_r+0x712>
  402388:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40238a:	f01b 0f10 	tst.w	fp, #16
  40238e:	4613      	mov	r3, r2
  402390:	f040 83e1 	bne.w	402b56 <_svfprintf_r+0xcbe>
  402394:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402398:	f000 83dd 	beq.w	402b56 <_svfprintf_r+0xcbe>
  40239c:	3304      	adds	r3, #4
  40239e:	8814      	ldrh	r4, [r2, #0]
  4023a0:	930f      	str	r3, [sp, #60]	; 0x3c
  4023a2:	2500      	movs	r5, #0
  4023a4:	f01b 0f01 	tst.w	fp, #1
  4023a8:	f000 810c 	beq.w	4025c4 <_svfprintf_r+0x72c>
  4023ac:	ea54 0305 	orrs.w	r3, r4, r5
  4023b0:	f000 8108 	beq.w	4025c4 <_svfprintf_r+0x72c>
  4023b4:	2330      	movs	r3, #48	; 0x30
  4023b6:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4023ba:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4023be:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4023c2:	f04b 0b02 	orr.w	fp, fp, #2
  4023c6:	2302      	movs	r3, #2
  4023c8:	e659      	b.n	40207e <_svfprintf_r+0x1e6>
  4023ca:	f89a 3000 	ldrb.w	r3, [sl]
  4023ce:	2900      	cmp	r1, #0
  4023d0:	f47f adba 	bne.w	401f48 <_svfprintf_r+0xb0>
  4023d4:	2201      	movs	r2, #1
  4023d6:	2120      	movs	r1, #32
  4023d8:	e5b6      	b.n	401f48 <_svfprintf_r+0xb0>
  4023da:	f04b 0b01 	orr.w	fp, fp, #1
  4023de:	f89a 3000 	ldrb.w	r3, [sl]
  4023e2:	e5b1      	b.n	401f48 <_svfprintf_r+0xb0>
  4023e4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4023e6:	6823      	ldr	r3, [r4, #0]
  4023e8:	930d      	str	r3, [sp, #52]	; 0x34
  4023ea:	4618      	mov	r0, r3
  4023ec:	2800      	cmp	r0, #0
  4023ee:	4623      	mov	r3, r4
  4023f0:	f103 0304 	add.w	r3, r3, #4
  4023f4:	f6ff ae0a 	blt.w	40200c <_svfprintf_r+0x174>
  4023f8:	930f      	str	r3, [sp, #60]	; 0x3c
  4023fa:	f89a 3000 	ldrb.w	r3, [sl]
  4023fe:	e5a3      	b.n	401f48 <_svfprintf_r+0xb0>
  402400:	00407780 	.word	0x00407780
  402404:	00407790 	.word	0x00407790
  402408:	00407760 	.word	0x00407760
  40240c:	f04b 0b10 	orr.w	fp, fp, #16
  402410:	f01b 0f20 	tst.w	fp, #32
  402414:	9311      	str	r3, [sp, #68]	; 0x44
  402416:	f43f ae23 	beq.w	402060 <_svfprintf_r+0x1c8>
  40241a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40241c:	3507      	adds	r5, #7
  40241e:	f025 0307 	bic.w	r3, r5, #7
  402422:	f103 0208 	add.w	r2, r3, #8
  402426:	e9d3 4500 	ldrd	r4, r5, [r3]
  40242a:	920f      	str	r2, [sp, #60]	; 0x3c
  40242c:	2301      	movs	r3, #1
  40242e:	e626      	b.n	40207e <_svfprintf_r+0x1e6>
  402430:	f89a 3000 	ldrb.w	r3, [sl]
  402434:	2b2a      	cmp	r3, #42	; 0x2a
  402436:	f10a 0401 	add.w	r4, sl, #1
  40243a:	f000 8727 	beq.w	40328c <_svfprintf_r+0x13f4>
  40243e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402442:	2809      	cmp	r0, #9
  402444:	46a2      	mov	sl, r4
  402446:	f200 86ad 	bhi.w	4031a4 <_svfprintf_r+0x130c>
  40244a:	2300      	movs	r3, #0
  40244c:	461c      	mov	r4, r3
  40244e:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402452:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402456:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40245a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40245e:	2809      	cmp	r0, #9
  402460:	d9f5      	bls.n	40244e <_svfprintf_r+0x5b6>
  402462:	940a      	str	r4, [sp, #40]	; 0x28
  402464:	e572      	b.n	401f4c <_svfprintf_r+0xb4>
  402466:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40246a:	f89a 3000 	ldrb.w	r3, [sl]
  40246e:	e56b      	b.n	401f48 <_svfprintf_r+0xb0>
  402470:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402474:	f89a 3000 	ldrb.w	r3, [sl]
  402478:	e566      	b.n	401f48 <_svfprintf_r+0xb0>
  40247a:	f89a 3000 	ldrb.w	r3, [sl]
  40247e:	2b6c      	cmp	r3, #108	; 0x6c
  402480:	bf03      	ittte	eq
  402482:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402486:	f04b 0b20 	orreq.w	fp, fp, #32
  40248a:	f10a 0a01 	addeq.w	sl, sl, #1
  40248e:	f04b 0b10 	orrne.w	fp, fp, #16
  402492:	e559      	b.n	401f48 <_svfprintf_r+0xb0>
  402494:	2a00      	cmp	r2, #0
  402496:	f040 8711 	bne.w	4032bc <_svfprintf_r+0x1424>
  40249a:	f01b 0f20 	tst.w	fp, #32
  40249e:	f040 84f9 	bne.w	402e94 <_svfprintf_r+0xffc>
  4024a2:	f01b 0f10 	tst.w	fp, #16
  4024a6:	f040 84ac 	bne.w	402e02 <_svfprintf_r+0xf6a>
  4024aa:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4024ae:	f000 84a8 	beq.w	402e02 <_svfprintf_r+0xf6a>
  4024b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4024b4:	6813      	ldr	r3, [r2, #0]
  4024b6:	3204      	adds	r2, #4
  4024b8:	920f      	str	r2, [sp, #60]	; 0x3c
  4024ba:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  4024be:	801a      	strh	r2, [r3, #0]
  4024c0:	e511      	b.n	401ee6 <_svfprintf_r+0x4e>
  4024c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4024c4:	4bb3      	ldr	r3, [pc, #716]	; (402794 <_svfprintf_r+0x8fc>)
  4024c6:	680c      	ldr	r4, [r1, #0]
  4024c8:	9318      	str	r3, [sp, #96]	; 0x60
  4024ca:	2230      	movs	r2, #48	; 0x30
  4024cc:	2378      	movs	r3, #120	; 0x78
  4024ce:	3104      	adds	r1, #4
  4024d0:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4024d4:	9311      	str	r3, [sp, #68]	; 0x44
  4024d6:	f04b 0b02 	orr.w	fp, fp, #2
  4024da:	910f      	str	r1, [sp, #60]	; 0x3c
  4024dc:	2500      	movs	r5, #0
  4024de:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4024e2:	2302      	movs	r3, #2
  4024e4:	e5cb      	b.n	40207e <_svfprintf_r+0x1e6>
  4024e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4024e8:	9311      	str	r3, [sp, #68]	; 0x44
  4024ea:	680a      	ldr	r2, [r1, #0]
  4024ec:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4024f0:	2300      	movs	r3, #0
  4024f2:	460a      	mov	r2, r1
  4024f4:	461f      	mov	r7, r3
  4024f6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4024fa:	3204      	adds	r2, #4
  4024fc:	2301      	movs	r3, #1
  4024fe:	9308      	str	r3, [sp, #32]
  402500:	f8cd b01c 	str.w	fp, [sp, #28]
  402504:	970a      	str	r7, [sp, #40]	; 0x28
  402506:	9712      	str	r7, [sp, #72]	; 0x48
  402508:	920f      	str	r2, [sp, #60]	; 0x3c
  40250a:	930e      	str	r3, [sp, #56]	; 0x38
  40250c:	ae28      	add	r6, sp, #160	; 0xa0
  40250e:	e5df      	b.n	4020d0 <_svfprintf_r+0x238>
  402510:	9311      	str	r3, [sp, #68]	; 0x44
  402512:	2a00      	cmp	r2, #0
  402514:	f040 86ea 	bne.w	4032ec <_svfprintf_r+0x1454>
  402518:	f01b 0f20 	tst.w	fp, #32
  40251c:	d15d      	bne.n	4025da <_svfprintf_r+0x742>
  40251e:	f01b 0f10 	tst.w	fp, #16
  402522:	f040 8308 	bne.w	402b36 <_svfprintf_r+0xc9e>
  402526:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40252a:	f000 8304 	beq.w	402b36 <_svfprintf_r+0xc9e>
  40252e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402530:	f9b1 4000 	ldrsh.w	r4, [r1]
  402534:	3104      	adds	r1, #4
  402536:	17e5      	asrs	r5, r4, #31
  402538:	4622      	mov	r2, r4
  40253a:	462b      	mov	r3, r5
  40253c:	910f      	str	r1, [sp, #60]	; 0x3c
  40253e:	2a00      	cmp	r2, #0
  402540:	f173 0300 	sbcs.w	r3, r3, #0
  402544:	db58      	blt.n	4025f8 <_svfprintf_r+0x760>
  402546:	990a      	ldr	r1, [sp, #40]	; 0x28
  402548:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40254c:	1c4a      	adds	r2, r1, #1
  40254e:	f04f 0301 	mov.w	r3, #1
  402552:	f47f ad9b 	bne.w	40208c <_svfprintf_r+0x1f4>
  402556:	ea54 0205 	orrs.w	r2, r4, r5
  40255a:	f000 81df 	beq.w	40291c <_svfprintf_r+0xa84>
  40255e:	f8cd b01c 	str.w	fp, [sp, #28]
  402562:	2b01      	cmp	r3, #1
  402564:	f000 827b 	beq.w	402a5e <_svfprintf_r+0xbc6>
  402568:	2b02      	cmp	r3, #2
  40256a:	f040 8206 	bne.w	40297a <_svfprintf_r+0xae2>
  40256e:	9818      	ldr	r0, [sp, #96]	; 0x60
  402570:	464e      	mov	r6, r9
  402572:	0923      	lsrs	r3, r4, #4
  402574:	f004 010f 	and.w	r1, r4, #15
  402578:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  40257c:	092a      	lsrs	r2, r5, #4
  40257e:	461c      	mov	r4, r3
  402580:	4615      	mov	r5, r2
  402582:	5c43      	ldrb	r3, [r0, r1]
  402584:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402588:	ea54 0305 	orrs.w	r3, r4, r5
  40258c:	d1f1      	bne.n	402572 <_svfprintf_r+0x6da>
  40258e:	eba9 0306 	sub.w	r3, r9, r6
  402592:	930e      	str	r3, [sp, #56]	; 0x38
  402594:	e590      	b.n	4020b8 <_svfprintf_r+0x220>
  402596:	9311      	str	r3, [sp, #68]	; 0x44
  402598:	2a00      	cmp	r2, #0
  40259a:	f040 86a3 	bne.w	4032e4 <_svfprintf_r+0x144c>
  40259e:	4b7e      	ldr	r3, [pc, #504]	; (402798 <_svfprintf_r+0x900>)
  4025a0:	9318      	str	r3, [sp, #96]	; 0x60
  4025a2:	f01b 0f20 	tst.w	fp, #32
  4025a6:	f43f aeef 	beq.w	402388 <_svfprintf_r+0x4f0>
  4025aa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4025ac:	3507      	adds	r5, #7
  4025ae:	f025 0307 	bic.w	r3, r5, #7
  4025b2:	f103 0208 	add.w	r2, r3, #8
  4025b6:	f01b 0f01 	tst.w	fp, #1
  4025ba:	920f      	str	r2, [sp, #60]	; 0x3c
  4025bc:	e9d3 4500 	ldrd	r4, r5, [r3]
  4025c0:	f47f aef4 	bne.w	4023ac <_svfprintf_r+0x514>
  4025c4:	2302      	movs	r3, #2
  4025c6:	e55a      	b.n	40207e <_svfprintf_r+0x1e6>
  4025c8:	9311      	str	r3, [sp, #68]	; 0x44
  4025ca:	2a00      	cmp	r2, #0
  4025cc:	f040 8686 	bne.w	4032dc <_svfprintf_r+0x1444>
  4025d0:	f04b 0b10 	orr.w	fp, fp, #16
  4025d4:	f01b 0f20 	tst.w	fp, #32
  4025d8:	d0a1      	beq.n	40251e <_svfprintf_r+0x686>
  4025da:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4025dc:	3507      	adds	r5, #7
  4025de:	f025 0507 	bic.w	r5, r5, #7
  4025e2:	e9d5 2300 	ldrd	r2, r3, [r5]
  4025e6:	2a00      	cmp	r2, #0
  4025e8:	f105 0108 	add.w	r1, r5, #8
  4025ec:	461d      	mov	r5, r3
  4025ee:	f173 0300 	sbcs.w	r3, r3, #0
  4025f2:	910f      	str	r1, [sp, #60]	; 0x3c
  4025f4:	4614      	mov	r4, r2
  4025f6:	daa6      	bge.n	402546 <_svfprintf_r+0x6ae>
  4025f8:	272d      	movs	r7, #45	; 0x2d
  4025fa:	4264      	negs	r4, r4
  4025fc:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402600:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402604:	2301      	movs	r3, #1
  402606:	e53d      	b.n	402084 <_svfprintf_r+0x1ec>
  402608:	9311      	str	r3, [sp, #68]	; 0x44
  40260a:	2a00      	cmp	r2, #0
  40260c:	f040 8662 	bne.w	4032d4 <_svfprintf_r+0x143c>
  402610:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402612:	3507      	adds	r5, #7
  402614:	f025 0307 	bic.w	r3, r5, #7
  402618:	f103 0208 	add.w	r2, r3, #8
  40261c:	920f      	str	r2, [sp, #60]	; 0x3c
  40261e:	681a      	ldr	r2, [r3, #0]
  402620:	9215      	str	r2, [sp, #84]	; 0x54
  402622:	685b      	ldr	r3, [r3, #4]
  402624:	9314      	str	r3, [sp, #80]	; 0x50
  402626:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402628:	9d15      	ldr	r5, [sp, #84]	; 0x54
  40262a:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  40262e:	4628      	mov	r0, r5
  402630:	4621      	mov	r1, r4
  402632:	f04f 32ff 	mov.w	r2, #4294967295
  402636:	4b59      	ldr	r3, [pc, #356]	; (40279c <_svfprintf_r+0x904>)
  402638:	f003 fe56 	bl	4062e8 <__aeabi_dcmpun>
  40263c:	2800      	cmp	r0, #0
  40263e:	f040 834a 	bne.w	402cd6 <_svfprintf_r+0xe3e>
  402642:	4628      	mov	r0, r5
  402644:	4621      	mov	r1, r4
  402646:	f04f 32ff 	mov.w	r2, #4294967295
  40264a:	4b54      	ldr	r3, [pc, #336]	; (40279c <_svfprintf_r+0x904>)
  40264c:	f003 fe2e 	bl	4062ac <__aeabi_dcmple>
  402650:	2800      	cmp	r0, #0
  402652:	f040 8340 	bne.w	402cd6 <_svfprintf_r+0xe3e>
  402656:	a815      	add	r0, sp, #84	; 0x54
  402658:	c80d      	ldmia	r0, {r0, r2, r3}
  40265a:	9914      	ldr	r1, [sp, #80]	; 0x50
  40265c:	f003 fe1c 	bl	406298 <__aeabi_dcmplt>
  402660:	2800      	cmp	r0, #0
  402662:	f040 8530 	bne.w	4030c6 <_svfprintf_r+0x122e>
  402666:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40266a:	4e4d      	ldr	r6, [pc, #308]	; (4027a0 <_svfprintf_r+0x908>)
  40266c:	4b4d      	ldr	r3, [pc, #308]	; (4027a4 <_svfprintf_r+0x90c>)
  40266e:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402672:	9007      	str	r0, [sp, #28]
  402674:	9811      	ldr	r0, [sp, #68]	; 0x44
  402676:	2203      	movs	r2, #3
  402678:	2100      	movs	r1, #0
  40267a:	9208      	str	r2, [sp, #32]
  40267c:	910a      	str	r1, [sp, #40]	; 0x28
  40267e:	2847      	cmp	r0, #71	; 0x47
  402680:	bfd8      	it	le
  402682:	461e      	movle	r6, r3
  402684:	920e      	str	r2, [sp, #56]	; 0x38
  402686:	9112      	str	r1, [sp, #72]	; 0x48
  402688:	e51e      	b.n	4020c8 <_svfprintf_r+0x230>
  40268a:	f04b 0b08 	orr.w	fp, fp, #8
  40268e:	f89a 3000 	ldrb.w	r3, [sl]
  402692:	e459      	b.n	401f48 <_svfprintf_r+0xb0>
  402694:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402698:	2300      	movs	r3, #0
  40269a:	461c      	mov	r4, r3
  40269c:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4026a0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4026a4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4026a8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4026ac:	2809      	cmp	r0, #9
  4026ae:	d9f5      	bls.n	40269c <_svfprintf_r+0x804>
  4026b0:	940d      	str	r4, [sp, #52]	; 0x34
  4026b2:	e44b      	b.n	401f4c <_svfprintf_r+0xb4>
  4026b4:	f04b 0b10 	orr.w	fp, fp, #16
  4026b8:	9311      	str	r3, [sp, #68]	; 0x44
  4026ba:	f01b 0320 	ands.w	r3, fp, #32
  4026be:	f43f ae1d 	beq.w	4022fc <_svfprintf_r+0x464>
  4026c2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4026c4:	3507      	adds	r5, #7
  4026c6:	f025 0307 	bic.w	r3, r5, #7
  4026ca:	f103 0208 	add.w	r2, r3, #8
  4026ce:	e9d3 4500 	ldrd	r4, r5, [r3]
  4026d2:	920f      	str	r2, [sp, #60]	; 0x3c
  4026d4:	2300      	movs	r3, #0
  4026d6:	e4d2      	b.n	40207e <_svfprintf_r+0x1e6>
  4026d8:	9311      	str	r3, [sp, #68]	; 0x44
  4026da:	2a00      	cmp	r2, #0
  4026dc:	f040 85e7 	bne.w	4032ae <_svfprintf_r+0x1416>
  4026e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4026e2:	2a00      	cmp	r2, #0
  4026e4:	f43f aca3 	beq.w	40202e <_svfprintf_r+0x196>
  4026e8:	2300      	movs	r3, #0
  4026ea:	2101      	movs	r1, #1
  4026ec:	461f      	mov	r7, r3
  4026ee:	9108      	str	r1, [sp, #32]
  4026f0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4026f4:	f8cd b01c 	str.w	fp, [sp, #28]
  4026f8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4026fc:	930a      	str	r3, [sp, #40]	; 0x28
  4026fe:	9312      	str	r3, [sp, #72]	; 0x48
  402700:	910e      	str	r1, [sp, #56]	; 0x38
  402702:	ae28      	add	r6, sp, #160	; 0xa0
  402704:	e4e4      	b.n	4020d0 <_svfprintf_r+0x238>
  402706:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402708:	e534      	b.n	402174 <_svfprintf_r+0x2dc>
  40270a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40270c:	2b65      	cmp	r3, #101	; 0x65
  40270e:	f340 80a7 	ble.w	402860 <_svfprintf_r+0x9c8>
  402712:	a815      	add	r0, sp, #84	; 0x54
  402714:	c80d      	ldmia	r0, {r0, r2, r3}
  402716:	9914      	ldr	r1, [sp, #80]	; 0x50
  402718:	f003 fdb4 	bl	406284 <__aeabi_dcmpeq>
  40271c:	2800      	cmp	r0, #0
  40271e:	f000 8150 	beq.w	4029c2 <_svfprintf_r+0xb2a>
  402722:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402724:	4a20      	ldr	r2, [pc, #128]	; (4027a8 <_svfprintf_r+0x910>)
  402726:	f8c8 2000 	str.w	r2, [r8]
  40272a:	3301      	adds	r3, #1
  40272c:	3401      	adds	r4, #1
  40272e:	2201      	movs	r2, #1
  402730:	2b07      	cmp	r3, #7
  402732:	9427      	str	r4, [sp, #156]	; 0x9c
  402734:	9326      	str	r3, [sp, #152]	; 0x98
  402736:	f8c8 2004 	str.w	r2, [r8, #4]
  40273a:	f300 836a 	bgt.w	402e12 <_svfprintf_r+0xf7a>
  40273e:	f108 0808 	add.w	r8, r8, #8
  402742:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402744:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402746:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402748:	4293      	cmp	r3, r2
  40274a:	db03      	blt.n	402754 <_svfprintf_r+0x8bc>
  40274c:	9b07      	ldr	r3, [sp, #28]
  40274e:	07dd      	lsls	r5, r3, #31
  402750:	f57f ad82 	bpl.w	402258 <_svfprintf_r+0x3c0>
  402754:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402756:	9919      	ldr	r1, [sp, #100]	; 0x64
  402758:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40275a:	f8c8 2000 	str.w	r2, [r8]
  40275e:	3301      	adds	r3, #1
  402760:	440c      	add	r4, r1
  402762:	2b07      	cmp	r3, #7
  402764:	f8c8 1004 	str.w	r1, [r8, #4]
  402768:	9427      	str	r4, [sp, #156]	; 0x9c
  40276a:	9326      	str	r3, [sp, #152]	; 0x98
  40276c:	f300 839e 	bgt.w	402eac <_svfprintf_r+0x1014>
  402770:	f108 0808 	add.w	r8, r8, #8
  402774:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402776:	1e5e      	subs	r6, r3, #1
  402778:	2e00      	cmp	r6, #0
  40277a:	f77f ad6d 	ble.w	402258 <_svfprintf_r+0x3c0>
  40277e:	2e10      	cmp	r6, #16
  402780:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402782:	4d0a      	ldr	r5, [pc, #40]	; (4027ac <_svfprintf_r+0x914>)
  402784:	f340 81f5 	ble.w	402b72 <_svfprintf_r+0xcda>
  402788:	4622      	mov	r2, r4
  40278a:	2710      	movs	r7, #16
  40278c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402790:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402792:	e013      	b.n	4027bc <_svfprintf_r+0x924>
  402794:	00407760 	.word	0x00407760
  402798:	0040774c 	.word	0x0040774c
  40279c:	7fefffff 	.word	0x7fefffff
  4027a0:	00407740 	.word	0x00407740
  4027a4:	0040773c 	.word	0x0040773c
  4027a8:	0040777c 	.word	0x0040777c
  4027ac:	00407790 	.word	0x00407790
  4027b0:	f108 0808 	add.w	r8, r8, #8
  4027b4:	3e10      	subs	r6, #16
  4027b6:	2e10      	cmp	r6, #16
  4027b8:	f340 81da 	ble.w	402b70 <_svfprintf_r+0xcd8>
  4027bc:	3301      	adds	r3, #1
  4027be:	3210      	adds	r2, #16
  4027c0:	2b07      	cmp	r3, #7
  4027c2:	9227      	str	r2, [sp, #156]	; 0x9c
  4027c4:	9326      	str	r3, [sp, #152]	; 0x98
  4027c6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4027ca:	ddf1      	ble.n	4027b0 <_svfprintf_r+0x918>
  4027cc:	aa25      	add	r2, sp, #148	; 0x94
  4027ce:	4621      	mov	r1, r4
  4027d0:	4658      	mov	r0, fp
  4027d2:	f002 fcc3 	bl	40515c <__ssprint_r>
  4027d6:	2800      	cmp	r0, #0
  4027d8:	f47f ac30 	bne.w	40203c <_svfprintf_r+0x1a4>
  4027dc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4027de:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027e0:	46c8      	mov	r8, r9
  4027e2:	e7e7      	b.n	4027b4 <_svfprintf_r+0x91c>
  4027e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4027e6:	9a08      	ldr	r2, [sp, #32]
  4027e8:	1a9f      	subs	r7, r3, r2
  4027ea:	2f00      	cmp	r7, #0
  4027ec:	f77f ace5 	ble.w	4021ba <_svfprintf_r+0x322>
  4027f0:	2f10      	cmp	r7, #16
  4027f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027f4:	4db6      	ldr	r5, [pc, #728]	; (402ad0 <_svfprintf_r+0xc38>)
  4027f6:	dd27      	ble.n	402848 <_svfprintf_r+0x9b0>
  4027f8:	4642      	mov	r2, r8
  4027fa:	4621      	mov	r1, r4
  4027fc:	46b0      	mov	r8, r6
  4027fe:	f04f 0b10 	mov.w	fp, #16
  402802:	462e      	mov	r6, r5
  402804:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402806:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402808:	e004      	b.n	402814 <_svfprintf_r+0x97c>
  40280a:	3f10      	subs	r7, #16
  40280c:	2f10      	cmp	r7, #16
  40280e:	f102 0208 	add.w	r2, r2, #8
  402812:	dd15      	ble.n	402840 <_svfprintf_r+0x9a8>
  402814:	3301      	adds	r3, #1
  402816:	3110      	adds	r1, #16
  402818:	2b07      	cmp	r3, #7
  40281a:	9127      	str	r1, [sp, #156]	; 0x9c
  40281c:	9326      	str	r3, [sp, #152]	; 0x98
  40281e:	e882 0840 	stmia.w	r2, {r6, fp}
  402822:	ddf2      	ble.n	40280a <_svfprintf_r+0x972>
  402824:	aa25      	add	r2, sp, #148	; 0x94
  402826:	4629      	mov	r1, r5
  402828:	4620      	mov	r0, r4
  40282a:	f002 fc97 	bl	40515c <__ssprint_r>
  40282e:	2800      	cmp	r0, #0
  402830:	f47f ac04 	bne.w	40203c <_svfprintf_r+0x1a4>
  402834:	3f10      	subs	r7, #16
  402836:	2f10      	cmp	r7, #16
  402838:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40283a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40283c:	464a      	mov	r2, r9
  40283e:	dce9      	bgt.n	402814 <_svfprintf_r+0x97c>
  402840:	4635      	mov	r5, r6
  402842:	460c      	mov	r4, r1
  402844:	4646      	mov	r6, r8
  402846:	4690      	mov	r8, r2
  402848:	3301      	adds	r3, #1
  40284a:	443c      	add	r4, r7
  40284c:	2b07      	cmp	r3, #7
  40284e:	9427      	str	r4, [sp, #156]	; 0x9c
  402850:	9326      	str	r3, [sp, #152]	; 0x98
  402852:	e888 00a0 	stmia.w	r8, {r5, r7}
  402856:	f300 8232 	bgt.w	402cbe <_svfprintf_r+0xe26>
  40285a:	f108 0808 	add.w	r8, r8, #8
  40285e:	e4ac      	b.n	4021ba <_svfprintf_r+0x322>
  402860:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402862:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402864:	2b01      	cmp	r3, #1
  402866:	f340 81fe 	ble.w	402c66 <_svfprintf_r+0xdce>
  40286a:	3701      	adds	r7, #1
  40286c:	3401      	adds	r4, #1
  40286e:	2301      	movs	r3, #1
  402870:	2f07      	cmp	r7, #7
  402872:	9427      	str	r4, [sp, #156]	; 0x9c
  402874:	9726      	str	r7, [sp, #152]	; 0x98
  402876:	f8c8 6000 	str.w	r6, [r8]
  40287a:	f8c8 3004 	str.w	r3, [r8, #4]
  40287e:	f300 8203 	bgt.w	402c88 <_svfprintf_r+0xdf0>
  402882:	f108 0808 	add.w	r8, r8, #8
  402886:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402888:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40288a:	f8c8 3000 	str.w	r3, [r8]
  40288e:	3701      	adds	r7, #1
  402890:	4414      	add	r4, r2
  402892:	2f07      	cmp	r7, #7
  402894:	9427      	str	r4, [sp, #156]	; 0x9c
  402896:	9726      	str	r7, [sp, #152]	; 0x98
  402898:	f8c8 2004 	str.w	r2, [r8, #4]
  40289c:	f300 8200 	bgt.w	402ca0 <_svfprintf_r+0xe08>
  4028a0:	f108 0808 	add.w	r8, r8, #8
  4028a4:	a815      	add	r0, sp, #84	; 0x54
  4028a6:	c80d      	ldmia	r0, {r0, r2, r3}
  4028a8:	9914      	ldr	r1, [sp, #80]	; 0x50
  4028aa:	f003 fceb 	bl	406284 <__aeabi_dcmpeq>
  4028ae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4028b0:	2800      	cmp	r0, #0
  4028b2:	f040 8101 	bne.w	402ab8 <_svfprintf_r+0xc20>
  4028b6:	3b01      	subs	r3, #1
  4028b8:	3701      	adds	r7, #1
  4028ba:	3601      	adds	r6, #1
  4028bc:	441c      	add	r4, r3
  4028be:	2f07      	cmp	r7, #7
  4028c0:	9726      	str	r7, [sp, #152]	; 0x98
  4028c2:	9427      	str	r4, [sp, #156]	; 0x9c
  4028c4:	f8c8 6000 	str.w	r6, [r8]
  4028c8:	f8c8 3004 	str.w	r3, [r8, #4]
  4028cc:	f300 8127 	bgt.w	402b1e <_svfprintf_r+0xc86>
  4028d0:	f108 0808 	add.w	r8, r8, #8
  4028d4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4028d6:	f8c8 2004 	str.w	r2, [r8, #4]
  4028da:	3701      	adds	r7, #1
  4028dc:	4414      	add	r4, r2
  4028de:	ab21      	add	r3, sp, #132	; 0x84
  4028e0:	2f07      	cmp	r7, #7
  4028e2:	9427      	str	r4, [sp, #156]	; 0x9c
  4028e4:	9726      	str	r7, [sp, #152]	; 0x98
  4028e6:	f8c8 3000 	str.w	r3, [r8]
  4028ea:	f77f acb3 	ble.w	402254 <_svfprintf_r+0x3bc>
  4028ee:	aa25      	add	r2, sp, #148	; 0x94
  4028f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4028f2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028f4:	f002 fc32 	bl	40515c <__ssprint_r>
  4028f8:	2800      	cmp	r0, #0
  4028fa:	f47f ab9f 	bne.w	40203c <_svfprintf_r+0x1a4>
  4028fe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402900:	46c8      	mov	r8, r9
  402902:	e4a9      	b.n	402258 <_svfprintf_r+0x3c0>
  402904:	aa25      	add	r2, sp, #148	; 0x94
  402906:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402908:	980c      	ldr	r0, [sp, #48]	; 0x30
  40290a:	f002 fc27 	bl	40515c <__ssprint_r>
  40290e:	2800      	cmp	r0, #0
  402910:	f43f aceb 	beq.w	4022ea <_svfprintf_r+0x452>
  402914:	f7ff bb92 	b.w	40203c <_svfprintf_r+0x1a4>
  402918:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40291c:	2b01      	cmp	r3, #1
  40291e:	f000 8134 	beq.w	402b8a <_svfprintf_r+0xcf2>
  402922:	2b02      	cmp	r3, #2
  402924:	d125      	bne.n	402972 <_svfprintf_r+0xada>
  402926:	f8cd b01c 	str.w	fp, [sp, #28]
  40292a:	2400      	movs	r4, #0
  40292c:	2500      	movs	r5, #0
  40292e:	e61e      	b.n	40256e <_svfprintf_r+0x6d6>
  402930:	aa25      	add	r2, sp, #148	; 0x94
  402932:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402934:	980c      	ldr	r0, [sp, #48]	; 0x30
  402936:	f002 fc11 	bl	40515c <__ssprint_r>
  40293a:	2800      	cmp	r0, #0
  40293c:	f47f ab7e 	bne.w	40203c <_svfprintf_r+0x1a4>
  402940:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402942:	46c8      	mov	r8, r9
  402944:	e475      	b.n	402232 <_svfprintf_r+0x39a>
  402946:	aa25      	add	r2, sp, #148	; 0x94
  402948:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40294a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40294c:	f002 fc06 	bl	40515c <__ssprint_r>
  402950:	2800      	cmp	r0, #0
  402952:	f47f ab73 	bne.w	40203c <_svfprintf_r+0x1a4>
  402956:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402958:	46c8      	mov	r8, r9
  40295a:	e41b      	b.n	402194 <_svfprintf_r+0x2fc>
  40295c:	aa25      	add	r2, sp, #148	; 0x94
  40295e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402960:	980c      	ldr	r0, [sp, #48]	; 0x30
  402962:	f002 fbfb 	bl	40515c <__ssprint_r>
  402966:	2800      	cmp	r0, #0
  402968:	f47f ab68 	bne.w	40203c <_svfprintf_r+0x1a4>
  40296c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40296e:	46c8      	mov	r8, r9
  402970:	e420      	b.n	4021b4 <_svfprintf_r+0x31c>
  402972:	f8cd b01c 	str.w	fp, [sp, #28]
  402976:	2400      	movs	r4, #0
  402978:	2500      	movs	r5, #0
  40297a:	4649      	mov	r1, r9
  40297c:	e000      	b.n	402980 <_svfprintf_r+0xae8>
  40297e:	4631      	mov	r1, r6
  402980:	08e2      	lsrs	r2, r4, #3
  402982:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402986:	08e8      	lsrs	r0, r5, #3
  402988:	f004 0307 	and.w	r3, r4, #7
  40298c:	4605      	mov	r5, r0
  40298e:	4614      	mov	r4, r2
  402990:	3330      	adds	r3, #48	; 0x30
  402992:	ea54 0205 	orrs.w	r2, r4, r5
  402996:	f801 3c01 	strb.w	r3, [r1, #-1]
  40299a:	f101 36ff 	add.w	r6, r1, #4294967295
  40299e:	d1ee      	bne.n	40297e <_svfprintf_r+0xae6>
  4029a0:	9a07      	ldr	r2, [sp, #28]
  4029a2:	07d2      	lsls	r2, r2, #31
  4029a4:	f57f adf3 	bpl.w	40258e <_svfprintf_r+0x6f6>
  4029a8:	2b30      	cmp	r3, #48	; 0x30
  4029aa:	f43f adf0 	beq.w	40258e <_svfprintf_r+0x6f6>
  4029ae:	3902      	subs	r1, #2
  4029b0:	2330      	movs	r3, #48	; 0x30
  4029b2:	f806 3c01 	strb.w	r3, [r6, #-1]
  4029b6:	eba9 0301 	sub.w	r3, r9, r1
  4029ba:	930e      	str	r3, [sp, #56]	; 0x38
  4029bc:	460e      	mov	r6, r1
  4029be:	f7ff bb7b 	b.w	4020b8 <_svfprintf_r+0x220>
  4029c2:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4029c4:	2900      	cmp	r1, #0
  4029c6:	f340 822e 	ble.w	402e26 <_svfprintf_r+0xf8e>
  4029ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4029cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4029ce:	4293      	cmp	r3, r2
  4029d0:	bfa8      	it	ge
  4029d2:	4613      	movge	r3, r2
  4029d4:	2b00      	cmp	r3, #0
  4029d6:	461f      	mov	r7, r3
  4029d8:	dd0d      	ble.n	4029f6 <_svfprintf_r+0xb5e>
  4029da:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029dc:	f8c8 6000 	str.w	r6, [r8]
  4029e0:	3301      	adds	r3, #1
  4029e2:	443c      	add	r4, r7
  4029e4:	2b07      	cmp	r3, #7
  4029e6:	9427      	str	r4, [sp, #156]	; 0x9c
  4029e8:	f8c8 7004 	str.w	r7, [r8, #4]
  4029ec:	9326      	str	r3, [sp, #152]	; 0x98
  4029ee:	f300 831f 	bgt.w	403030 <_svfprintf_r+0x1198>
  4029f2:	f108 0808 	add.w	r8, r8, #8
  4029f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4029f8:	2f00      	cmp	r7, #0
  4029fa:	bfa8      	it	ge
  4029fc:	1bdb      	subge	r3, r3, r7
  4029fe:	2b00      	cmp	r3, #0
  402a00:	461f      	mov	r7, r3
  402a02:	f340 80d6 	ble.w	402bb2 <_svfprintf_r+0xd1a>
  402a06:	2f10      	cmp	r7, #16
  402a08:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a0a:	4d31      	ldr	r5, [pc, #196]	; (402ad0 <_svfprintf_r+0xc38>)
  402a0c:	f340 81ed 	ble.w	402dea <_svfprintf_r+0xf52>
  402a10:	4642      	mov	r2, r8
  402a12:	4621      	mov	r1, r4
  402a14:	46b0      	mov	r8, r6
  402a16:	f04f 0b10 	mov.w	fp, #16
  402a1a:	462e      	mov	r6, r5
  402a1c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402a1e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402a20:	e004      	b.n	402a2c <_svfprintf_r+0xb94>
  402a22:	3208      	adds	r2, #8
  402a24:	3f10      	subs	r7, #16
  402a26:	2f10      	cmp	r7, #16
  402a28:	f340 81db 	ble.w	402de2 <_svfprintf_r+0xf4a>
  402a2c:	3301      	adds	r3, #1
  402a2e:	3110      	adds	r1, #16
  402a30:	2b07      	cmp	r3, #7
  402a32:	9127      	str	r1, [sp, #156]	; 0x9c
  402a34:	9326      	str	r3, [sp, #152]	; 0x98
  402a36:	e882 0840 	stmia.w	r2, {r6, fp}
  402a3a:	ddf2      	ble.n	402a22 <_svfprintf_r+0xb8a>
  402a3c:	aa25      	add	r2, sp, #148	; 0x94
  402a3e:	4629      	mov	r1, r5
  402a40:	4620      	mov	r0, r4
  402a42:	f002 fb8b 	bl	40515c <__ssprint_r>
  402a46:	2800      	cmp	r0, #0
  402a48:	f47f aaf8 	bne.w	40203c <_svfprintf_r+0x1a4>
  402a4c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402a4e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a50:	464a      	mov	r2, r9
  402a52:	e7e7      	b.n	402a24 <_svfprintf_r+0xb8c>
  402a54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402a56:	930e      	str	r3, [sp, #56]	; 0x38
  402a58:	464e      	mov	r6, r9
  402a5a:	f7ff bb2d 	b.w	4020b8 <_svfprintf_r+0x220>
  402a5e:	2d00      	cmp	r5, #0
  402a60:	bf08      	it	eq
  402a62:	2c0a      	cmpeq	r4, #10
  402a64:	f0c0 808f 	bcc.w	402b86 <_svfprintf_r+0xcee>
  402a68:	464e      	mov	r6, r9
  402a6a:	4620      	mov	r0, r4
  402a6c:	4629      	mov	r1, r5
  402a6e:	220a      	movs	r2, #10
  402a70:	2300      	movs	r3, #0
  402a72:	f003 fc77 	bl	406364 <__aeabi_uldivmod>
  402a76:	3230      	adds	r2, #48	; 0x30
  402a78:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402a7c:	4620      	mov	r0, r4
  402a7e:	4629      	mov	r1, r5
  402a80:	2300      	movs	r3, #0
  402a82:	220a      	movs	r2, #10
  402a84:	f003 fc6e 	bl	406364 <__aeabi_uldivmod>
  402a88:	4604      	mov	r4, r0
  402a8a:	460d      	mov	r5, r1
  402a8c:	ea54 0305 	orrs.w	r3, r4, r5
  402a90:	d1eb      	bne.n	402a6a <_svfprintf_r+0xbd2>
  402a92:	eba9 0306 	sub.w	r3, r9, r6
  402a96:	930e      	str	r3, [sp, #56]	; 0x38
  402a98:	f7ff bb0e 	b.w	4020b8 <_svfprintf_r+0x220>
  402a9c:	aa25      	add	r2, sp, #148	; 0x94
  402a9e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402aa0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402aa2:	f002 fb5b 	bl	40515c <__ssprint_r>
  402aa6:	2800      	cmp	r0, #0
  402aa8:	f47f aac8 	bne.w	40203c <_svfprintf_r+0x1a4>
  402aac:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402ab0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ab2:	46c8      	mov	r8, r9
  402ab4:	f7ff bb5e 	b.w	402174 <_svfprintf_r+0x2dc>
  402ab8:	1e5e      	subs	r6, r3, #1
  402aba:	2e00      	cmp	r6, #0
  402abc:	f77f af0a 	ble.w	4028d4 <_svfprintf_r+0xa3c>
  402ac0:	2e10      	cmp	r6, #16
  402ac2:	4d03      	ldr	r5, [pc, #12]	; (402ad0 <_svfprintf_r+0xc38>)
  402ac4:	dd22      	ble.n	402b0c <_svfprintf_r+0xc74>
  402ac6:	4622      	mov	r2, r4
  402ac8:	f04f 0b10 	mov.w	fp, #16
  402acc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402ace:	e006      	b.n	402ade <_svfprintf_r+0xc46>
  402ad0:	00407790 	.word	0x00407790
  402ad4:	3e10      	subs	r6, #16
  402ad6:	2e10      	cmp	r6, #16
  402ad8:	f108 0808 	add.w	r8, r8, #8
  402adc:	dd15      	ble.n	402b0a <_svfprintf_r+0xc72>
  402ade:	3701      	adds	r7, #1
  402ae0:	3210      	adds	r2, #16
  402ae2:	2f07      	cmp	r7, #7
  402ae4:	9227      	str	r2, [sp, #156]	; 0x9c
  402ae6:	9726      	str	r7, [sp, #152]	; 0x98
  402ae8:	e888 0820 	stmia.w	r8, {r5, fp}
  402aec:	ddf2      	ble.n	402ad4 <_svfprintf_r+0xc3c>
  402aee:	aa25      	add	r2, sp, #148	; 0x94
  402af0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402af2:	4620      	mov	r0, r4
  402af4:	f002 fb32 	bl	40515c <__ssprint_r>
  402af8:	2800      	cmp	r0, #0
  402afa:	f47f aa9f 	bne.w	40203c <_svfprintf_r+0x1a4>
  402afe:	3e10      	subs	r6, #16
  402b00:	2e10      	cmp	r6, #16
  402b02:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402b04:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402b06:	46c8      	mov	r8, r9
  402b08:	dce9      	bgt.n	402ade <_svfprintf_r+0xc46>
  402b0a:	4614      	mov	r4, r2
  402b0c:	3701      	adds	r7, #1
  402b0e:	4434      	add	r4, r6
  402b10:	2f07      	cmp	r7, #7
  402b12:	9427      	str	r4, [sp, #156]	; 0x9c
  402b14:	9726      	str	r7, [sp, #152]	; 0x98
  402b16:	e888 0060 	stmia.w	r8, {r5, r6}
  402b1a:	f77f aed9 	ble.w	4028d0 <_svfprintf_r+0xa38>
  402b1e:	aa25      	add	r2, sp, #148	; 0x94
  402b20:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b22:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b24:	f002 fb1a 	bl	40515c <__ssprint_r>
  402b28:	2800      	cmp	r0, #0
  402b2a:	f47f aa87 	bne.w	40203c <_svfprintf_r+0x1a4>
  402b2e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b30:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402b32:	46c8      	mov	r8, r9
  402b34:	e6ce      	b.n	4028d4 <_svfprintf_r+0xa3c>
  402b36:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402b38:	6814      	ldr	r4, [r2, #0]
  402b3a:	4613      	mov	r3, r2
  402b3c:	3304      	adds	r3, #4
  402b3e:	17e5      	asrs	r5, r4, #31
  402b40:	930f      	str	r3, [sp, #60]	; 0x3c
  402b42:	4622      	mov	r2, r4
  402b44:	462b      	mov	r3, r5
  402b46:	e4fa      	b.n	40253e <_svfprintf_r+0x6a6>
  402b48:	3204      	adds	r2, #4
  402b4a:	681c      	ldr	r4, [r3, #0]
  402b4c:	920f      	str	r2, [sp, #60]	; 0x3c
  402b4e:	2301      	movs	r3, #1
  402b50:	2500      	movs	r5, #0
  402b52:	f7ff ba94 	b.w	40207e <_svfprintf_r+0x1e6>
  402b56:	681c      	ldr	r4, [r3, #0]
  402b58:	3304      	adds	r3, #4
  402b5a:	930f      	str	r3, [sp, #60]	; 0x3c
  402b5c:	2500      	movs	r5, #0
  402b5e:	e421      	b.n	4023a4 <_svfprintf_r+0x50c>
  402b60:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402b62:	460a      	mov	r2, r1
  402b64:	3204      	adds	r2, #4
  402b66:	680c      	ldr	r4, [r1, #0]
  402b68:	920f      	str	r2, [sp, #60]	; 0x3c
  402b6a:	2500      	movs	r5, #0
  402b6c:	f7ff ba87 	b.w	40207e <_svfprintf_r+0x1e6>
  402b70:	4614      	mov	r4, r2
  402b72:	3301      	adds	r3, #1
  402b74:	4434      	add	r4, r6
  402b76:	2b07      	cmp	r3, #7
  402b78:	9427      	str	r4, [sp, #156]	; 0x9c
  402b7a:	9326      	str	r3, [sp, #152]	; 0x98
  402b7c:	e888 0060 	stmia.w	r8, {r5, r6}
  402b80:	f77f ab68 	ble.w	402254 <_svfprintf_r+0x3bc>
  402b84:	e6b3      	b.n	4028ee <_svfprintf_r+0xa56>
  402b86:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402b8a:	f8cd b01c 	str.w	fp, [sp, #28]
  402b8e:	ae42      	add	r6, sp, #264	; 0x108
  402b90:	3430      	adds	r4, #48	; 0x30
  402b92:	2301      	movs	r3, #1
  402b94:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402b98:	930e      	str	r3, [sp, #56]	; 0x38
  402b9a:	f7ff ba8d 	b.w	4020b8 <_svfprintf_r+0x220>
  402b9e:	aa25      	add	r2, sp, #148	; 0x94
  402ba0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ba2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ba4:	f002 fada 	bl	40515c <__ssprint_r>
  402ba8:	2800      	cmp	r0, #0
  402baa:	f47f aa47 	bne.w	40203c <_svfprintf_r+0x1a4>
  402bae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bb0:	46c8      	mov	r8, r9
  402bb2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402bb4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402bb6:	429a      	cmp	r2, r3
  402bb8:	db44      	blt.n	402c44 <_svfprintf_r+0xdac>
  402bba:	9b07      	ldr	r3, [sp, #28]
  402bbc:	07d9      	lsls	r1, r3, #31
  402bbe:	d441      	bmi.n	402c44 <_svfprintf_r+0xdac>
  402bc0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402bc2:	9812      	ldr	r0, [sp, #72]	; 0x48
  402bc4:	1a9a      	subs	r2, r3, r2
  402bc6:	1a1d      	subs	r5, r3, r0
  402bc8:	4295      	cmp	r5, r2
  402bca:	bfa8      	it	ge
  402bcc:	4615      	movge	r5, r2
  402bce:	2d00      	cmp	r5, #0
  402bd0:	dd0e      	ble.n	402bf0 <_svfprintf_r+0xd58>
  402bd2:	9926      	ldr	r1, [sp, #152]	; 0x98
  402bd4:	f8c8 5004 	str.w	r5, [r8, #4]
  402bd8:	3101      	adds	r1, #1
  402bda:	4406      	add	r6, r0
  402bdc:	442c      	add	r4, r5
  402bde:	2907      	cmp	r1, #7
  402be0:	f8c8 6000 	str.w	r6, [r8]
  402be4:	9427      	str	r4, [sp, #156]	; 0x9c
  402be6:	9126      	str	r1, [sp, #152]	; 0x98
  402be8:	f300 823b 	bgt.w	403062 <_svfprintf_r+0x11ca>
  402bec:	f108 0808 	add.w	r8, r8, #8
  402bf0:	2d00      	cmp	r5, #0
  402bf2:	bfac      	ite	ge
  402bf4:	1b56      	subge	r6, r2, r5
  402bf6:	4616      	movlt	r6, r2
  402bf8:	2e00      	cmp	r6, #0
  402bfa:	f77f ab2d 	ble.w	402258 <_svfprintf_r+0x3c0>
  402bfe:	2e10      	cmp	r6, #16
  402c00:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c02:	4db0      	ldr	r5, [pc, #704]	; (402ec4 <_svfprintf_r+0x102c>)
  402c04:	ddb5      	ble.n	402b72 <_svfprintf_r+0xcda>
  402c06:	4622      	mov	r2, r4
  402c08:	2710      	movs	r7, #16
  402c0a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402c0e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402c10:	e004      	b.n	402c1c <_svfprintf_r+0xd84>
  402c12:	f108 0808 	add.w	r8, r8, #8
  402c16:	3e10      	subs	r6, #16
  402c18:	2e10      	cmp	r6, #16
  402c1a:	dda9      	ble.n	402b70 <_svfprintf_r+0xcd8>
  402c1c:	3301      	adds	r3, #1
  402c1e:	3210      	adds	r2, #16
  402c20:	2b07      	cmp	r3, #7
  402c22:	9227      	str	r2, [sp, #156]	; 0x9c
  402c24:	9326      	str	r3, [sp, #152]	; 0x98
  402c26:	e888 00a0 	stmia.w	r8, {r5, r7}
  402c2a:	ddf2      	ble.n	402c12 <_svfprintf_r+0xd7a>
  402c2c:	aa25      	add	r2, sp, #148	; 0x94
  402c2e:	4621      	mov	r1, r4
  402c30:	4658      	mov	r0, fp
  402c32:	f002 fa93 	bl	40515c <__ssprint_r>
  402c36:	2800      	cmp	r0, #0
  402c38:	f47f aa00 	bne.w	40203c <_svfprintf_r+0x1a4>
  402c3c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402c3e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c40:	46c8      	mov	r8, r9
  402c42:	e7e8      	b.n	402c16 <_svfprintf_r+0xd7e>
  402c44:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c46:	9819      	ldr	r0, [sp, #100]	; 0x64
  402c48:	991a      	ldr	r1, [sp, #104]	; 0x68
  402c4a:	f8c8 1000 	str.w	r1, [r8]
  402c4e:	3301      	adds	r3, #1
  402c50:	4404      	add	r4, r0
  402c52:	2b07      	cmp	r3, #7
  402c54:	9427      	str	r4, [sp, #156]	; 0x9c
  402c56:	f8c8 0004 	str.w	r0, [r8, #4]
  402c5a:	9326      	str	r3, [sp, #152]	; 0x98
  402c5c:	f300 81f5 	bgt.w	40304a <_svfprintf_r+0x11b2>
  402c60:	f108 0808 	add.w	r8, r8, #8
  402c64:	e7ac      	b.n	402bc0 <_svfprintf_r+0xd28>
  402c66:	9b07      	ldr	r3, [sp, #28]
  402c68:	07da      	lsls	r2, r3, #31
  402c6a:	f53f adfe 	bmi.w	40286a <_svfprintf_r+0x9d2>
  402c6e:	3701      	adds	r7, #1
  402c70:	3401      	adds	r4, #1
  402c72:	2301      	movs	r3, #1
  402c74:	2f07      	cmp	r7, #7
  402c76:	9427      	str	r4, [sp, #156]	; 0x9c
  402c78:	9726      	str	r7, [sp, #152]	; 0x98
  402c7a:	f8c8 6000 	str.w	r6, [r8]
  402c7e:	f8c8 3004 	str.w	r3, [r8, #4]
  402c82:	f77f ae25 	ble.w	4028d0 <_svfprintf_r+0xa38>
  402c86:	e74a      	b.n	402b1e <_svfprintf_r+0xc86>
  402c88:	aa25      	add	r2, sp, #148	; 0x94
  402c8a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c8c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c8e:	f002 fa65 	bl	40515c <__ssprint_r>
  402c92:	2800      	cmp	r0, #0
  402c94:	f47f a9d2 	bne.w	40203c <_svfprintf_r+0x1a4>
  402c98:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c9a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c9c:	46c8      	mov	r8, r9
  402c9e:	e5f2      	b.n	402886 <_svfprintf_r+0x9ee>
  402ca0:	aa25      	add	r2, sp, #148	; 0x94
  402ca2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ca4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ca6:	f002 fa59 	bl	40515c <__ssprint_r>
  402caa:	2800      	cmp	r0, #0
  402cac:	f47f a9c6 	bne.w	40203c <_svfprintf_r+0x1a4>
  402cb0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cb2:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402cb4:	46c8      	mov	r8, r9
  402cb6:	e5f5      	b.n	4028a4 <_svfprintf_r+0xa0c>
  402cb8:	464e      	mov	r6, r9
  402cba:	f7ff b9fd 	b.w	4020b8 <_svfprintf_r+0x220>
  402cbe:	aa25      	add	r2, sp, #148	; 0x94
  402cc0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cc2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cc4:	f002 fa4a 	bl	40515c <__ssprint_r>
  402cc8:	2800      	cmp	r0, #0
  402cca:	f47f a9b7 	bne.w	40203c <_svfprintf_r+0x1a4>
  402cce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cd0:	46c8      	mov	r8, r9
  402cd2:	f7ff ba72 	b.w	4021ba <_svfprintf_r+0x322>
  402cd6:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402cd8:	4622      	mov	r2, r4
  402cda:	4620      	mov	r0, r4
  402cdc:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402cde:	4623      	mov	r3, r4
  402ce0:	4621      	mov	r1, r4
  402ce2:	f003 fb01 	bl	4062e8 <__aeabi_dcmpun>
  402ce6:	2800      	cmp	r0, #0
  402ce8:	f040 8286 	bne.w	4031f8 <_svfprintf_r+0x1360>
  402cec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402cee:	3301      	adds	r3, #1
  402cf0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402cf2:	f023 0320 	bic.w	r3, r3, #32
  402cf6:	930e      	str	r3, [sp, #56]	; 0x38
  402cf8:	f000 81e2 	beq.w	4030c0 <_svfprintf_r+0x1228>
  402cfc:	2b47      	cmp	r3, #71	; 0x47
  402cfe:	f000 811e 	beq.w	402f3e <_svfprintf_r+0x10a6>
  402d02:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402d06:	9307      	str	r3, [sp, #28]
  402d08:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402d0a:	1e1f      	subs	r7, r3, #0
  402d0c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402d0e:	9308      	str	r3, [sp, #32]
  402d10:	bfbb      	ittet	lt
  402d12:	463b      	movlt	r3, r7
  402d14:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402d18:	2300      	movge	r3, #0
  402d1a:	232d      	movlt	r3, #45	; 0x2d
  402d1c:	9310      	str	r3, [sp, #64]	; 0x40
  402d1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d20:	2b66      	cmp	r3, #102	; 0x66
  402d22:	f000 81bb 	beq.w	40309c <_svfprintf_r+0x1204>
  402d26:	2b46      	cmp	r3, #70	; 0x46
  402d28:	f000 80df 	beq.w	402eea <_svfprintf_r+0x1052>
  402d2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402d2e:	9a08      	ldr	r2, [sp, #32]
  402d30:	2b45      	cmp	r3, #69	; 0x45
  402d32:	bf0c      	ite	eq
  402d34:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402d36:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402d38:	a823      	add	r0, sp, #140	; 0x8c
  402d3a:	a920      	add	r1, sp, #128	; 0x80
  402d3c:	bf08      	it	eq
  402d3e:	1c5d      	addeq	r5, r3, #1
  402d40:	9004      	str	r0, [sp, #16]
  402d42:	9103      	str	r1, [sp, #12]
  402d44:	a81f      	add	r0, sp, #124	; 0x7c
  402d46:	2102      	movs	r1, #2
  402d48:	463b      	mov	r3, r7
  402d4a:	9002      	str	r0, [sp, #8]
  402d4c:	9501      	str	r5, [sp, #4]
  402d4e:	9100      	str	r1, [sp, #0]
  402d50:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d52:	f000 fb75 	bl	403440 <_dtoa_r>
  402d56:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d58:	2b67      	cmp	r3, #103	; 0x67
  402d5a:	4606      	mov	r6, r0
  402d5c:	f040 81e0 	bne.w	403120 <_svfprintf_r+0x1288>
  402d60:	f01b 0f01 	tst.w	fp, #1
  402d64:	f000 8246 	beq.w	4031f4 <_svfprintf_r+0x135c>
  402d68:	1974      	adds	r4, r6, r5
  402d6a:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402d6c:	9808      	ldr	r0, [sp, #32]
  402d6e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402d70:	4639      	mov	r1, r7
  402d72:	f003 fa87 	bl	406284 <__aeabi_dcmpeq>
  402d76:	2800      	cmp	r0, #0
  402d78:	f040 8165 	bne.w	403046 <_svfprintf_r+0x11ae>
  402d7c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402d7e:	42a3      	cmp	r3, r4
  402d80:	d206      	bcs.n	402d90 <_svfprintf_r+0xef8>
  402d82:	2130      	movs	r1, #48	; 0x30
  402d84:	1c5a      	adds	r2, r3, #1
  402d86:	9223      	str	r2, [sp, #140]	; 0x8c
  402d88:	7019      	strb	r1, [r3, #0]
  402d8a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402d8c:	429c      	cmp	r4, r3
  402d8e:	d8f9      	bhi.n	402d84 <_svfprintf_r+0xeec>
  402d90:	1b9b      	subs	r3, r3, r6
  402d92:	9313      	str	r3, [sp, #76]	; 0x4c
  402d94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402d96:	2b47      	cmp	r3, #71	; 0x47
  402d98:	f000 80e9 	beq.w	402f6e <_svfprintf_r+0x10d6>
  402d9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d9e:	2b65      	cmp	r3, #101	; 0x65
  402da0:	f340 81cd 	ble.w	40313e <_svfprintf_r+0x12a6>
  402da4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402da6:	2b66      	cmp	r3, #102	; 0x66
  402da8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402daa:	9312      	str	r3, [sp, #72]	; 0x48
  402dac:	f000 819e 	beq.w	4030ec <_svfprintf_r+0x1254>
  402db0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402db2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402db4:	4619      	mov	r1, r3
  402db6:	4291      	cmp	r1, r2
  402db8:	f300 818a 	bgt.w	4030d0 <_svfprintf_r+0x1238>
  402dbc:	f01b 0f01 	tst.w	fp, #1
  402dc0:	f040 8213 	bne.w	4031ea <_svfprintf_r+0x1352>
  402dc4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402dc8:	9308      	str	r3, [sp, #32]
  402dca:	2367      	movs	r3, #103	; 0x67
  402dcc:	920e      	str	r2, [sp, #56]	; 0x38
  402dce:	9311      	str	r3, [sp, #68]	; 0x44
  402dd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402dd2:	2b00      	cmp	r3, #0
  402dd4:	f040 80c4 	bne.w	402f60 <_svfprintf_r+0x10c8>
  402dd8:	930a      	str	r3, [sp, #40]	; 0x28
  402dda:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402dde:	f7ff b973 	b.w	4020c8 <_svfprintf_r+0x230>
  402de2:	4635      	mov	r5, r6
  402de4:	460c      	mov	r4, r1
  402de6:	4646      	mov	r6, r8
  402de8:	4690      	mov	r8, r2
  402dea:	3301      	adds	r3, #1
  402dec:	443c      	add	r4, r7
  402dee:	2b07      	cmp	r3, #7
  402df0:	9427      	str	r4, [sp, #156]	; 0x9c
  402df2:	9326      	str	r3, [sp, #152]	; 0x98
  402df4:	e888 00a0 	stmia.w	r8, {r5, r7}
  402df8:	f73f aed1 	bgt.w	402b9e <_svfprintf_r+0xd06>
  402dfc:	f108 0808 	add.w	r8, r8, #8
  402e00:	e6d7      	b.n	402bb2 <_svfprintf_r+0xd1a>
  402e02:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402e04:	6813      	ldr	r3, [r2, #0]
  402e06:	3204      	adds	r2, #4
  402e08:	920f      	str	r2, [sp, #60]	; 0x3c
  402e0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402e0c:	601a      	str	r2, [r3, #0]
  402e0e:	f7ff b86a 	b.w	401ee6 <_svfprintf_r+0x4e>
  402e12:	aa25      	add	r2, sp, #148	; 0x94
  402e14:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e16:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e18:	f002 f9a0 	bl	40515c <__ssprint_r>
  402e1c:	2800      	cmp	r0, #0
  402e1e:	f47f a90d 	bne.w	40203c <_svfprintf_r+0x1a4>
  402e22:	46c8      	mov	r8, r9
  402e24:	e48d      	b.n	402742 <_svfprintf_r+0x8aa>
  402e26:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e28:	4a27      	ldr	r2, [pc, #156]	; (402ec8 <_svfprintf_r+0x1030>)
  402e2a:	f8c8 2000 	str.w	r2, [r8]
  402e2e:	3301      	adds	r3, #1
  402e30:	3401      	adds	r4, #1
  402e32:	2201      	movs	r2, #1
  402e34:	2b07      	cmp	r3, #7
  402e36:	9427      	str	r4, [sp, #156]	; 0x9c
  402e38:	9326      	str	r3, [sp, #152]	; 0x98
  402e3a:	f8c8 2004 	str.w	r2, [r8, #4]
  402e3e:	dc72      	bgt.n	402f26 <_svfprintf_r+0x108e>
  402e40:	f108 0808 	add.w	r8, r8, #8
  402e44:	b929      	cbnz	r1, 402e52 <_svfprintf_r+0xfba>
  402e46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e48:	b91b      	cbnz	r3, 402e52 <_svfprintf_r+0xfba>
  402e4a:	9b07      	ldr	r3, [sp, #28]
  402e4c:	07d8      	lsls	r0, r3, #31
  402e4e:	f57f aa03 	bpl.w	402258 <_svfprintf_r+0x3c0>
  402e52:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e54:	9819      	ldr	r0, [sp, #100]	; 0x64
  402e56:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402e58:	f8c8 2000 	str.w	r2, [r8]
  402e5c:	3301      	adds	r3, #1
  402e5e:	4602      	mov	r2, r0
  402e60:	4422      	add	r2, r4
  402e62:	2b07      	cmp	r3, #7
  402e64:	9227      	str	r2, [sp, #156]	; 0x9c
  402e66:	f8c8 0004 	str.w	r0, [r8, #4]
  402e6a:	9326      	str	r3, [sp, #152]	; 0x98
  402e6c:	f300 818d 	bgt.w	40318a <_svfprintf_r+0x12f2>
  402e70:	f108 0808 	add.w	r8, r8, #8
  402e74:	2900      	cmp	r1, #0
  402e76:	f2c0 8165 	blt.w	403144 <_svfprintf_r+0x12ac>
  402e7a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402e7c:	f8c8 6000 	str.w	r6, [r8]
  402e80:	3301      	adds	r3, #1
  402e82:	188c      	adds	r4, r1, r2
  402e84:	2b07      	cmp	r3, #7
  402e86:	9427      	str	r4, [sp, #156]	; 0x9c
  402e88:	9326      	str	r3, [sp, #152]	; 0x98
  402e8a:	f8c8 1004 	str.w	r1, [r8, #4]
  402e8e:	f77f a9e1 	ble.w	402254 <_svfprintf_r+0x3bc>
  402e92:	e52c      	b.n	4028ee <_svfprintf_r+0xa56>
  402e94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402e96:	9909      	ldr	r1, [sp, #36]	; 0x24
  402e98:	6813      	ldr	r3, [r2, #0]
  402e9a:	17cd      	asrs	r5, r1, #31
  402e9c:	4608      	mov	r0, r1
  402e9e:	3204      	adds	r2, #4
  402ea0:	4629      	mov	r1, r5
  402ea2:	920f      	str	r2, [sp, #60]	; 0x3c
  402ea4:	e9c3 0100 	strd	r0, r1, [r3]
  402ea8:	f7ff b81d 	b.w	401ee6 <_svfprintf_r+0x4e>
  402eac:	aa25      	add	r2, sp, #148	; 0x94
  402eae:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402eb0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402eb2:	f002 f953 	bl	40515c <__ssprint_r>
  402eb6:	2800      	cmp	r0, #0
  402eb8:	f47f a8c0 	bne.w	40203c <_svfprintf_r+0x1a4>
  402ebc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ebe:	46c8      	mov	r8, r9
  402ec0:	e458      	b.n	402774 <_svfprintf_r+0x8dc>
  402ec2:	bf00      	nop
  402ec4:	00407790 	.word	0x00407790
  402ec8:	0040777c 	.word	0x0040777c
  402ecc:	2140      	movs	r1, #64	; 0x40
  402ece:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ed0:	f001 fa0c 	bl	4042ec <_malloc_r>
  402ed4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402ed6:	6010      	str	r0, [r2, #0]
  402ed8:	6110      	str	r0, [r2, #16]
  402eda:	2800      	cmp	r0, #0
  402edc:	f000 81f2 	beq.w	4032c4 <_svfprintf_r+0x142c>
  402ee0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402ee2:	2340      	movs	r3, #64	; 0x40
  402ee4:	6153      	str	r3, [r2, #20]
  402ee6:	f7fe bfee 	b.w	401ec6 <_svfprintf_r+0x2e>
  402eea:	a823      	add	r0, sp, #140	; 0x8c
  402eec:	a920      	add	r1, sp, #128	; 0x80
  402eee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402ef0:	9004      	str	r0, [sp, #16]
  402ef2:	9103      	str	r1, [sp, #12]
  402ef4:	a81f      	add	r0, sp, #124	; 0x7c
  402ef6:	2103      	movs	r1, #3
  402ef8:	9002      	str	r0, [sp, #8]
  402efa:	9a08      	ldr	r2, [sp, #32]
  402efc:	9401      	str	r4, [sp, #4]
  402efe:	463b      	mov	r3, r7
  402f00:	9100      	str	r1, [sp, #0]
  402f02:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f04:	f000 fa9c 	bl	403440 <_dtoa_r>
  402f08:	4625      	mov	r5, r4
  402f0a:	4606      	mov	r6, r0
  402f0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402f0e:	2b46      	cmp	r3, #70	; 0x46
  402f10:	eb06 0405 	add.w	r4, r6, r5
  402f14:	f47f af29 	bne.w	402d6a <_svfprintf_r+0xed2>
  402f18:	7833      	ldrb	r3, [r6, #0]
  402f1a:	2b30      	cmp	r3, #48	; 0x30
  402f1c:	f000 8178 	beq.w	403210 <_svfprintf_r+0x1378>
  402f20:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402f22:	442c      	add	r4, r5
  402f24:	e721      	b.n	402d6a <_svfprintf_r+0xed2>
  402f26:	aa25      	add	r2, sp, #148	; 0x94
  402f28:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f2a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f2c:	f002 f916 	bl	40515c <__ssprint_r>
  402f30:	2800      	cmp	r0, #0
  402f32:	f47f a883 	bne.w	40203c <_svfprintf_r+0x1a4>
  402f36:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402f38:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f3a:	46c8      	mov	r8, r9
  402f3c:	e782      	b.n	402e44 <_svfprintf_r+0xfac>
  402f3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f40:	2b00      	cmp	r3, #0
  402f42:	bf08      	it	eq
  402f44:	2301      	moveq	r3, #1
  402f46:	930a      	str	r3, [sp, #40]	; 0x28
  402f48:	e6db      	b.n	402d02 <_svfprintf_r+0xe6a>
  402f4a:	4630      	mov	r0, r6
  402f4c:	940a      	str	r4, [sp, #40]	; 0x28
  402f4e:	f002 f897 	bl	405080 <strlen>
  402f52:	950f      	str	r5, [sp, #60]	; 0x3c
  402f54:	900e      	str	r0, [sp, #56]	; 0x38
  402f56:	f8cd b01c 	str.w	fp, [sp, #28]
  402f5a:	4603      	mov	r3, r0
  402f5c:	f7ff b9f9 	b.w	402352 <_svfprintf_r+0x4ba>
  402f60:	272d      	movs	r7, #45	; 0x2d
  402f62:	2300      	movs	r3, #0
  402f64:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402f68:	930a      	str	r3, [sp, #40]	; 0x28
  402f6a:	f7ff b8ae 	b.w	4020ca <_svfprintf_r+0x232>
  402f6e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402f70:	9312      	str	r3, [sp, #72]	; 0x48
  402f72:	461a      	mov	r2, r3
  402f74:	3303      	adds	r3, #3
  402f76:	db04      	blt.n	402f82 <_svfprintf_r+0x10ea>
  402f78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f7a:	4619      	mov	r1, r3
  402f7c:	4291      	cmp	r1, r2
  402f7e:	f6bf af17 	bge.w	402db0 <_svfprintf_r+0xf18>
  402f82:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402f84:	3b02      	subs	r3, #2
  402f86:	9311      	str	r3, [sp, #68]	; 0x44
  402f88:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402f8c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402f90:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f92:	3b01      	subs	r3, #1
  402f94:	2b00      	cmp	r3, #0
  402f96:	931f      	str	r3, [sp, #124]	; 0x7c
  402f98:	bfbd      	ittte	lt
  402f9a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402f9c:	f1c3 0301 	rsblt	r3, r3, #1
  402fa0:	222d      	movlt	r2, #45	; 0x2d
  402fa2:	222b      	movge	r2, #43	; 0x2b
  402fa4:	2b09      	cmp	r3, #9
  402fa6:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402faa:	f340 8116 	ble.w	4031da <_svfprintf_r+0x1342>
  402fae:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402fb2:	4620      	mov	r0, r4
  402fb4:	4dab      	ldr	r5, [pc, #684]	; (403264 <_svfprintf_r+0x13cc>)
  402fb6:	e000      	b.n	402fba <_svfprintf_r+0x1122>
  402fb8:	4610      	mov	r0, r2
  402fba:	fb85 1203 	smull	r1, r2, r5, r3
  402fbe:	17d9      	asrs	r1, r3, #31
  402fc0:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402fc4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402fc8:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402fcc:	3230      	adds	r2, #48	; 0x30
  402fce:	2909      	cmp	r1, #9
  402fd0:	f800 2c01 	strb.w	r2, [r0, #-1]
  402fd4:	460b      	mov	r3, r1
  402fd6:	f100 32ff 	add.w	r2, r0, #4294967295
  402fda:	dced      	bgt.n	402fb8 <_svfprintf_r+0x1120>
  402fdc:	3330      	adds	r3, #48	; 0x30
  402fde:	3802      	subs	r0, #2
  402fe0:	b2d9      	uxtb	r1, r3
  402fe2:	4284      	cmp	r4, r0
  402fe4:	f802 1c01 	strb.w	r1, [r2, #-1]
  402fe8:	f240 8165 	bls.w	4032b6 <_svfprintf_r+0x141e>
  402fec:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402ff0:	4613      	mov	r3, r2
  402ff2:	e001      	b.n	402ff8 <_svfprintf_r+0x1160>
  402ff4:	f813 1b01 	ldrb.w	r1, [r3], #1
  402ff8:	f800 1b01 	strb.w	r1, [r0], #1
  402ffc:	42a3      	cmp	r3, r4
  402ffe:	d1f9      	bne.n	402ff4 <_svfprintf_r+0x115c>
  403000:	3301      	adds	r3, #1
  403002:	1a9b      	subs	r3, r3, r2
  403004:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403008:	4413      	add	r3, r2
  40300a:	aa21      	add	r2, sp, #132	; 0x84
  40300c:	1a9b      	subs	r3, r3, r2
  40300e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403010:	931b      	str	r3, [sp, #108]	; 0x6c
  403012:	2a01      	cmp	r2, #1
  403014:	4413      	add	r3, r2
  403016:	930e      	str	r3, [sp, #56]	; 0x38
  403018:	f340 8119 	ble.w	40324e <_svfprintf_r+0x13b6>
  40301c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40301e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403020:	4413      	add	r3, r2
  403022:	930e      	str	r3, [sp, #56]	; 0x38
  403024:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403028:	9308      	str	r3, [sp, #32]
  40302a:	2300      	movs	r3, #0
  40302c:	9312      	str	r3, [sp, #72]	; 0x48
  40302e:	e6cf      	b.n	402dd0 <_svfprintf_r+0xf38>
  403030:	aa25      	add	r2, sp, #148	; 0x94
  403032:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403034:	980c      	ldr	r0, [sp, #48]	; 0x30
  403036:	f002 f891 	bl	40515c <__ssprint_r>
  40303a:	2800      	cmp	r0, #0
  40303c:	f47e affe 	bne.w	40203c <_svfprintf_r+0x1a4>
  403040:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403042:	46c8      	mov	r8, r9
  403044:	e4d7      	b.n	4029f6 <_svfprintf_r+0xb5e>
  403046:	4623      	mov	r3, r4
  403048:	e6a2      	b.n	402d90 <_svfprintf_r+0xef8>
  40304a:	aa25      	add	r2, sp, #148	; 0x94
  40304c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40304e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403050:	f002 f884 	bl	40515c <__ssprint_r>
  403054:	2800      	cmp	r0, #0
  403056:	f47e aff1 	bne.w	40203c <_svfprintf_r+0x1a4>
  40305a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  40305c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40305e:	46c8      	mov	r8, r9
  403060:	e5ae      	b.n	402bc0 <_svfprintf_r+0xd28>
  403062:	aa25      	add	r2, sp, #148	; 0x94
  403064:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403066:	980c      	ldr	r0, [sp, #48]	; 0x30
  403068:	f002 f878 	bl	40515c <__ssprint_r>
  40306c:	2800      	cmp	r0, #0
  40306e:	f47e afe5 	bne.w	40203c <_svfprintf_r+0x1a4>
  403072:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403074:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403076:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403078:	1a9a      	subs	r2, r3, r2
  40307a:	46c8      	mov	r8, r9
  40307c:	e5b8      	b.n	402bf0 <_svfprintf_r+0xd58>
  40307e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403080:	9612      	str	r6, [sp, #72]	; 0x48
  403082:	2b06      	cmp	r3, #6
  403084:	bf28      	it	cs
  403086:	2306      	movcs	r3, #6
  403088:	960a      	str	r6, [sp, #40]	; 0x28
  40308a:	4637      	mov	r7, r6
  40308c:	9308      	str	r3, [sp, #32]
  40308e:	950f      	str	r5, [sp, #60]	; 0x3c
  403090:	f8cd b01c 	str.w	fp, [sp, #28]
  403094:	930e      	str	r3, [sp, #56]	; 0x38
  403096:	4e74      	ldr	r6, [pc, #464]	; (403268 <_svfprintf_r+0x13d0>)
  403098:	f7ff b816 	b.w	4020c8 <_svfprintf_r+0x230>
  40309c:	a823      	add	r0, sp, #140	; 0x8c
  40309e:	a920      	add	r1, sp, #128	; 0x80
  4030a0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4030a2:	9004      	str	r0, [sp, #16]
  4030a4:	9103      	str	r1, [sp, #12]
  4030a6:	a81f      	add	r0, sp, #124	; 0x7c
  4030a8:	2103      	movs	r1, #3
  4030aa:	9002      	str	r0, [sp, #8]
  4030ac:	9a08      	ldr	r2, [sp, #32]
  4030ae:	9501      	str	r5, [sp, #4]
  4030b0:	463b      	mov	r3, r7
  4030b2:	9100      	str	r1, [sp, #0]
  4030b4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030b6:	f000 f9c3 	bl	403440 <_dtoa_r>
  4030ba:	4606      	mov	r6, r0
  4030bc:	1944      	adds	r4, r0, r5
  4030be:	e72b      	b.n	402f18 <_svfprintf_r+0x1080>
  4030c0:	2306      	movs	r3, #6
  4030c2:	930a      	str	r3, [sp, #40]	; 0x28
  4030c4:	e61d      	b.n	402d02 <_svfprintf_r+0xe6a>
  4030c6:	272d      	movs	r7, #45	; 0x2d
  4030c8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4030cc:	f7ff bacd 	b.w	40266a <_svfprintf_r+0x7d2>
  4030d0:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4030d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4030d4:	4413      	add	r3, r2
  4030d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4030d8:	930e      	str	r3, [sp, #56]	; 0x38
  4030da:	2a00      	cmp	r2, #0
  4030dc:	f340 80b0 	ble.w	403240 <_svfprintf_r+0x13a8>
  4030e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4030e4:	9308      	str	r3, [sp, #32]
  4030e6:	2367      	movs	r3, #103	; 0x67
  4030e8:	9311      	str	r3, [sp, #68]	; 0x44
  4030ea:	e671      	b.n	402dd0 <_svfprintf_r+0xf38>
  4030ec:	2b00      	cmp	r3, #0
  4030ee:	f340 80c3 	ble.w	403278 <_svfprintf_r+0x13e0>
  4030f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4030f4:	2a00      	cmp	r2, #0
  4030f6:	f040 8099 	bne.w	40322c <_svfprintf_r+0x1394>
  4030fa:	f01b 0f01 	tst.w	fp, #1
  4030fe:	f040 8095 	bne.w	40322c <_svfprintf_r+0x1394>
  403102:	9308      	str	r3, [sp, #32]
  403104:	930e      	str	r3, [sp, #56]	; 0x38
  403106:	e663      	b.n	402dd0 <_svfprintf_r+0xf38>
  403108:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40310a:	9308      	str	r3, [sp, #32]
  40310c:	930e      	str	r3, [sp, #56]	; 0x38
  40310e:	900a      	str	r0, [sp, #40]	; 0x28
  403110:	950f      	str	r5, [sp, #60]	; 0x3c
  403112:	f8cd b01c 	str.w	fp, [sp, #28]
  403116:	9012      	str	r0, [sp, #72]	; 0x48
  403118:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40311c:	f7fe bfd4 	b.w	4020c8 <_svfprintf_r+0x230>
  403120:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403122:	2b47      	cmp	r3, #71	; 0x47
  403124:	f47f ae20 	bne.w	402d68 <_svfprintf_r+0xed0>
  403128:	f01b 0f01 	tst.w	fp, #1
  40312c:	f47f aeee 	bne.w	402f0c <_svfprintf_r+0x1074>
  403130:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403132:	1b9b      	subs	r3, r3, r6
  403134:	9313      	str	r3, [sp, #76]	; 0x4c
  403136:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403138:	2b47      	cmp	r3, #71	; 0x47
  40313a:	f43f af18 	beq.w	402f6e <_svfprintf_r+0x10d6>
  40313e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403140:	9312      	str	r3, [sp, #72]	; 0x48
  403142:	e721      	b.n	402f88 <_svfprintf_r+0x10f0>
  403144:	424f      	negs	r7, r1
  403146:	3110      	adds	r1, #16
  403148:	4d48      	ldr	r5, [pc, #288]	; (40326c <_svfprintf_r+0x13d4>)
  40314a:	da2f      	bge.n	4031ac <_svfprintf_r+0x1314>
  40314c:	2410      	movs	r4, #16
  40314e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403152:	e004      	b.n	40315e <_svfprintf_r+0x12c6>
  403154:	f108 0808 	add.w	r8, r8, #8
  403158:	3f10      	subs	r7, #16
  40315a:	2f10      	cmp	r7, #16
  40315c:	dd26      	ble.n	4031ac <_svfprintf_r+0x1314>
  40315e:	3301      	adds	r3, #1
  403160:	3210      	adds	r2, #16
  403162:	2b07      	cmp	r3, #7
  403164:	9227      	str	r2, [sp, #156]	; 0x9c
  403166:	9326      	str	r3, [sp, #152]	; 0x98
  403168:	f8c8 5000 	str.w	r5, [r8]
  40316c:	f8c8 4004 	str.w	r4, [r8, #4]
  403170:	ddf0      	ble.n	403154 <_svfprintf_r+0x12bc>
  403172:	aa25      	add	r2, sp, #148	; 0x94
  403174:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403176:	4658      	mov	r0, fp
  403178:	f001 fff0 	bl	40515c <__ssprint_r>
  40317c:	2800      	cmp	r0, #0
  40317e:	f47e af5d 	bne.w	40203c <_svfprintf_r+0x1a4>
  403182:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403184:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403186:	46c8      	mov	r8, r9
  403188:	e7e6      	b.n	403158 <_svfprintf_r+0x12c0>
  40318a:	aa25      	add	r2, sp, #148	; 0x94
  40318c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40318e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403190:	f001 ffe4 	bl	40515c <__ssprint_r>
  403194:	2800      	cmp	r0, #0
  403196:	f47e af51 	bne.w	40203c <_svfprintf_r+0x1a4>
  40319a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40319c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40319e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4031a0:	46c8      	mov	r8, r9
  4031a2:	e667      	b.n	402e74 <_svfprintf_r+0xfdc>
  4031a4:	2000      	movs	r0, #0
  4031a6:	900a      	str	r0, [sp, #40]	; 0x28
  4031a8:	f7fe bed0 	b.w	401f4c <_svfprintf_r+0xb4>
  4031ac:	3301      	adds	r3, #1
  4031ae:	443a      	add	r2, r7
  4031b0:	2b07      	cmp	r3, #7
  4031b2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4031b6:	9227      	str	r2, [sp, #156]	; 0x9c
  4031b8:	9326      	str	r3, [sp, #152]	; 0x98
  4031ba:	f108 0808 	add.w	r8, r8, #8
  4031be:	f77f ae5c 	ble.w	402e7a <_svfprintf_r+0xfe2>
  4031c2:	aa25      	add	r2, sp, #148	; 0x94
  4031c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031c6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031c8:	f001 ffc8 	bl	40515c <__ssprint_r>
  4031cc:	2800      	cmp	r0, #0
  4031ce:	f47e af35 	bne.w	40203c <_svfprintf_r+0x1a4>
  4031d2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4031d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4031d6:	46c8      	mov	r8, r9
  4031d8:	e64f      	b.n	402e7a <_svfprintf_r+0xfe2>
  4031da:	3330      	adds	r3, #48	; 0x30
  4031dc:	2230      	movs	r2, #48	; 0x30
  4031de:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4031e2:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4031e6:	ab22      	add	r3, sp, #136	; 0x88
  4031e8:	e70f      	b.n	40300a <_svfprintf_r+0x1172>
  4031ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4031ec:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4031ee:	4413      	add	r3, r2
  4031f0:	930e      	str	r3, [sp, #56]	; 0x38
  4031f2:	e775      	b.n	4030e0 <_svfprintf_r+0x1248>
  4031f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4031f6:	e5cb      	b.n	402d90 <_svfprintf_r+0xef8>
  4031f8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4031fa:	4e1d      	ldr	r6, [pc, #116]	; (403270 <_svfprintf_r+0x13d8>)
  4031fc:	2b00      	cmp	r3, #0
  4031fe:	bfb6      	itet	lt
  403200:	272d      	movlt	r7, #45	; 0x2d
  403202:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  403206:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40320a:	4b1a      	ldr	r3, [pc, #104]	; (403274 <_svfprintf_r+0x13dc>)
  40320c:	f7ff ba2f 	b.w	40266e <_svfprintf_r+0x7d6>
  403210:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403212:	9808      	ldr	r0, [sp, #32]
  403214:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403216:	4639      	mov	r1, r7
  403218:	f003 f834 	bl	406284 <__aeabi_dcmpeq>
  40321c:	2800      	cmp	r0, #0
  40321e:	f47f ae7f 	bne.w	402f20 <_svfprintf_r+0x1088>
  403222:	f1c5 0501 	rsb	r5, r5, #1
  403226:	951f      	str	r5, [sp, #124]	; 0x7c
  403228:	442c      	add	r4, r5
  40322a:	e59e      	b.n	402d6a <_svfprintf_r+0xed2>
  40322c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40322e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403230:	4413      	add	r3, r2
  403232:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403234:	441a      	add	r2, r3
  403236:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40323a:	920e      	str	r2, [sp, #56]	; 0x38
  40323c:	9308      	str	r3, [sp, #32]
  40323e:	e5c7      	b.n	402dd0 <_svfprintf_r+0xf38>
  403240:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403242:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403244:	f1c3 0301 	rsb	r3, r3, #1
  403248:	441a      	add	r2, r3
  40324a:	4613      	mov	r3, r2
  40324c:	e7d0      	b.n	4031f0 <_svfprintf_r+0x1358>
  40324e:	f01b 0301 	ands.w	r3, fp, #1
  403252:	9312      	str	r3, [sp, #72]	; 0x48
  403254:	f47f aee2 	bne.w	40301c <_svfprintf_r+0x1184>
  403258:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40325a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40325e:	9308      	str	r3, [sp, #32]
  403260:	e5b6      	b.n	402dd0 <_svfprintf_r+0xf38>
  403262:	bf00      	nop
  403264:	66666667 	.word	0x66666667
  403268:	00407774 	.word	0x00407774
  40326c:	00407790 	.word	0x00407790
  403270:	00407748 	.word	0x00407748
  403274:	00407744 	.word	0x00407744
  403278:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40327a:	b913      	cbnz	r3, 403282 <_svfprintf_r+0x13ea>
  40327c:	f01b 0f01 	tst.w	fp, #1
  403280:	d002      	beq.n	403288 <_svfprintf_r+0x13f0>
  403282:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403284:	3301      	adds	r3, #1
  403286:	e7d4      	b.n	403232 <_svfprintf_r+0x139a>
  403288:	2301      	movs	r3, #1
  40328a:	e73a      	b.n	403102 <_svfprintf_r+0x126a>
  40328c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40328e:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403292:	6828      	ldr	r0, [r5, #0]
  403294:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403298:	900a      	str	r0, [sp, #40]	; 0x28
  40329a:	4628      	mov	r0, r5
  40329c:	3004      	adds	r0, #4
  40329e:	46a2      	mov	sl, r4
  4032a0:	900f      	str	r0, [sp, #60]	; 0x3c
  4032a2:	f7fe be51 	b.w	401f48 <_svfprintf_r+0xb0>
  4032a6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4032aa:	f7ff b867 	b.w	40237c <_svfprintf_r+0x4e4>
  4032ae:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4032b2:	f7ff ba15 	b.w	4026e0 <_svfprintf_r+0x848>
  4032b6:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4032ba:	e6a6      	b.n	40300a <_svfprintf_r+0x1172>
  4032bc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4032c0:	f7ff b8eb 	b.w	40249a <_svfprintf_r+0x602>
  4032c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4032c6:	230c      	movs	r3, #12
  4032c8:	6013      	str	r3, [r2, #0]
  4032ca:	f04f 33ff 	mov.w	r3, #4294967295
  4032ce:	9309      	str	r3, [sp, #36]	; 0x24
  4032d0:	f7fe bebd 	b.w	40204e <_svfprintf_r+0x1b6>
  4032d4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4032d8:	f7ff b99a 	b.w	402610 <_svfprintf_r+0x778>
  4032dc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4032e0:	f7ff b976 	b.w	4025d0 <_svfprintf_r+0x738>
  4032e4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4032e8:	f7ff b959 	b.w	40259e <_svfprintf_r+0x706>
  4032ec:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4032f0:	f7ff b912 	b.w	402518 <_svfprintf_r+0x680>

004032f4 <register_fini>:
  4032f4:	4b02      	ldr	r3, [pc, #8]	; (403300 <register_fini+0xc>)
  4032f6:	b113      	cbz	r3, 4032fe <register_fini+0xa>
  4032f8:	4802      	ldr	r0, [pc, #8]	; (403304 <register_fini+0x10>)
  4032fa:	f000 b805 	b.w	403308 <atexit>
  4032fe:	4770      	bx	lr
  403300:	00000000 	.word	0x00000000
  403304:	00404295 	.word	0x00404295

00403308 <atexit>:
  403308:	2300      	movs	r3, #0
  40330a:	4601      	mov	r1, r0
  40330c:	461a      	mov	r2, r3
  40330e:	4618      	mov	r0, r3
  403310:	f001 bfa2 	b.w	405258 <__register_exitproc>

00403314 <quorem>:
  403314:	6902      	ldr	r2, [r0, #16]
  403316:	690b      	ldr	r3, [r1, #16]
  403318:	4293      	cmp	r3, r2
  40331a:	f300 808d 	bgt.w	403438 <quorem+0x124>
  40331e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403322:	f103 38ff 	add.w	r8, r3, #4294967295
  403326:	f101 0714 	add.w	r7, r1, #20
  40332a:	f100 0b14 	add.w	fp, r0, #20
  40332e:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403332:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403336:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40333a:	b083      	sub	sp, #12
  40333c:	3201      	adds	r2, #1
  40333e:	fbb3 f9f2 	udiv	r9, r3, r2
  403342:	eb0b 0304 	add.w	r3, fp, r4
  403346:	9400      	str	r4, [sp, #0]
  403348:	eb07 0a04 	add.w	sl, r7, r4
  40334c:	9301      	str	r3, [sp, #4]
  40334e:	f1b9 0f00 	cmp.w	r9, #0
  403352:	d039      	beq.n	4033c8 <quorem+0xb4>
  403354:	2500      	movs	r5, #0
  403356:	462e      	mov	r6, r5
  403358:	46bc      	mov	ip, r7
  40335a:	46de      	mov	lr, fp
  40335c:	f85c 4b04 	ldr.w	r4, [ip], #4
  403360:	f8de 3000 	ldr.w	r3, [lr]
  403364:	b2a2      	uxth	r2, r4
  403366:	fb09 5502 	mla	r5, r9, r2, r5
  40336a:	0c22      	lsrs	r2, r4, #16
  40336c:	0c2c      	lsrs	r4, r5, #16
  40336e:	fb09 4202 	mla	r2, r9, r2, r4
  403372:	b2ad      	uxth	r5, r5
  403374:	1b75      	subs	r5, r6, r5
  403376:	b296      	uxth	r6, r2
  403378:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  40337c:	fa15 f383 	uxtah	r3, r5, r3
  403380:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403384:	b29b      	uxth	r3, r3
  403386:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40338a:	45e2      	cmp	sl, ip
  40338c:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403390:	f84e 3b04 	str.w	r3, [lr], #4
  403394:	ea4f 4626 	mov.w	r6, r6, asr #16
  403398:	d2e0      	bcs.n	40335c <quorem+0x48>
  40339a:	9b00      	ldr	r3, [sp, #0]
  40339c:	f85b 3003 	ldr.w	r3, [fp, r3]
  4033a0:	b993      	cbnz	r3, 4033c8 <quorem+0xb4>
  4033a2:	9c01      	ldr	r4, [sp, #4]
  4033a4:	1f23      	subs	r3, r4, #4
  4033a6:	459b      	cmp	fp, r3
  4033a8:	d20c      	bcs.n	4033c4 <quorem+0xb0>
  4033aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4033ae:	b94b      	cbnz	r3, 4033c4 <quorem+0xb0>
  4033b0:	f1a4 0308 	sub.w	r3, r4, #8
  4033b4:	e002      	b.n	4033bc <quorem+0xa8>
  4033b6:	681a      	ldr	r2, [r3, #0]
  4033b8:	3b04      	subs	r3, #4
  4033ba:	b91a      	cbnz	r2, 4033c4 <quorem+0xb0>
  4033bc:	459b      	cmp	fp, r3
  4033be:	f108 38ff 	add.w	r8, r8, #4294967295
  4033c2:	d3f8      	bcc.n	4033b6 <quorem+0xa2>
  4033c4:	f8c0 8010 	str.w	r8, [r0, #16]
  4033c8:	4604      	mov	r4, r0
  4033ca:	f001 fd35 	bl	404e38 <__mcmp>
  4033ce:	2800      	cmp	r0, #0
  4033d0:	db2e      	blt.n	403430 <quorem+0x11c>
  4033d2:	f109 0901 	add.w	r9, r9, #1
  4033d6:	465d      	mov	r5, fp
  4033d8:	2300      	movs	r3, #0
  4033da:	f857 1b04 	ldr.w	r1, [r7], #4
  4033de:	6828      	ldr	r0, [r5, #0]
  4033e0:	b28a      	uxth	r2, r1
  4033e2:	1a9a      	subs	r2, r3, r2
  4033e4:	0c0b      	lsrs	r3, r1, #16
  4033e6:	fa12 f280 	uxtah	r2, r2, r0
  4033ea:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4033ee:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4033f2:	b292      	uxth	r2, r2
  4033f4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4033f8:	45ba      	cmp	sl, r7
  4033fa:	f845 2b04 	str.w	r2, [r5], #4
  4033fe:	ea4f 4323 	mov.w	r3, r3, asr #16
  403402:	d2ea      	bcs.n	4033da <quorem+0xc6>
  403404:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403408:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  40340c:	b982      	cbnz	r2, 403430 <quorem+0x11c>
  40340e:	1f1a      	subs	r2, r3, #4
  403410:	4593      	cmp	fp, r2
  403412:	d20b      	bcs.n	40342c <quorem+0x118>
  403414:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403418:	b942      	cbnz	r2, 40342c <quorem+0x118>
  40341a:	3b08      	subs	r3, #8
  40341c:	e002      	b.n	403424 <quorem+0x110>
  40341e:	681a      	ldr	r2, [r3, #0]
  403420:	3b04      	subs	r3, #4
  403422:	b91a      	cbnz	r2, 40342c <quorem+0x118>
  403424:	459b      	cmp	fp, r3
  403426:	f108 38ff 	add.w	r8, r8, #4294967295
  40342a:	d3f8      	bcc.n	40341e <quorem+0x10a>
  40342c:	f8c4 8010 	str.w	r8, [r4, #16]
  403430:	4648      	mov	r0, r9
  403432:	b003      	add	sp, #12
  403434:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403438:	2000      	movs	r0, #0
  40343a:	4770      	bx	lr
  40343c:	0000      	movs	r0, r0
	...

00403440 <_dtoa_r>:
  403440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403444:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403446:	b09b      	sub	sp, #108	; 0x6c
  403448:	4604      	mov	r4, r0
  40344a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40344c:	4692      	mov	sl, r2
  40344e:	469b      	mov	fp, r3
  403450:	b141      	cbz	r1, 403464 <_dtoa_r+0x24>
  403452:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403454:	604a      	str	r2, [r1, #4]
  403456:	2301      	movs	r3, #1
  403458:	4093      	lsls	r3, r2
  40345a:	608b      	str	r3, [r1, #8]
  40345c:	f001 fb14 	bl	404a88 <_Bfree>
  403460:	2300      	movs	r3, #0
  403462:	6423      	str	r3, [r4, #64]	; 0x40
  403464:	f1bb 0f00 	cmp.w	fp, #0
  403468:	465d      	mov	r5, fp
  40346a:	db35      	blt.n	4034d8 <_dtoa_r+0x98>
  40346c:	2300      	movs	r3, #0
  40346e:	6033      	str	r3, [r6, #0]
  403470:	4b9d      	ldr	r3, [pc, #628]	; (4036e8 <_dtoa_r+0x2a8>)
  403472:	43ab      	bics	r3, r5
  403474:	d015      	beq.n	4034a2 <_dtoa_r+0x62>
  403476:	4650      	mov	r0, sl
  403478:	4659      	mov	r1, fp
  40347a:	2200      	movs	r2, #0
  40347c:	2300      	movs	r3, #0
  40347e:	f002 ff01 	bl	406284 <__aeabi_dcmpeq>
  403482:	4680      	mov	r8, r0
  403484:	2800      	cmp	r0, #0
  403486:	d02d      	beq.n	4034e4 <_dtoa_r+0xa4>
  403488:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40348a:	2301      	movs	r3, #1
  40348c:	6013      	str	r3, [r2, #0]
  40348e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403490:	2b00      	cmp	r3, #0
  403492:	f000 80bd 	beq.w	403610 <_dtoa_r+0x1d0>
  403496:	4895      	ldr	r0, [pc, #596]	; (4036ec <_dtoa_r+0x2ac>)
  403498:	6018      	str	r0, [r3, #0]
  40349a:	3801      	subs	r0, #1
  40349c:	b01b      	add	sp, #108	; 0x6c
  40349e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4034a2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4034a4:	f242 730f 	movw	r3, #9999	; 0x270f
  4034a8:	6013      	str	r3, [r2, #0]
  4034aa:	f1ba 0f00 	cmp.w	sl, #0
  4034ae:	d10d      	bne.n	4034cc <_dtoa_r+0x8c>
  4034b0:	f3c5 0513 	ubfx	r5, r5, #0, #20
  4034b4:	b955      	cbnz	r5, 4034cc <_dtoa_r+0x8c>
  4034b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4034b8:	488d      	ldr	r0, [pc, #564]	; (4036f0 <_dtoa_r+0x2b0>)
  4034ba:	2b00      	cmp	r3, #0
  4034bc:	d0ee      	beq.n	40349c <_dtoa_r+0x5c>
  4034be:	f100 0308 	add.w	r3, r0, #8
  4034c2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  4034c4:	6013      	str	r3, [r2, #0]
  4034c6:	b01b      	add	sp, #108	; 0x6c
  4034c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4034cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4034ce:	4889      	ldr	r0, [pc, #548]	; (4036f4 <_dtoa_r+0x2b4>)
  4034d0:	2b00      	cmp	r3, #0
  4034d2:	d0e3      	beq.n	40349c <_dtoa_r+0x5c>
  4034d4:	1cc3      	adds	r3, r0, #3
  4034d6:	e7f4      	b.n	4034c2 <_dtoa_r+0x82>
  4034d8:	2301      	movs	r3, #1
  4034da:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4034de:	6033      	str	r3, [r6, #0]
  4034e0:	46ab      	mov	fp, r5
  4034e2:	e7c5      	b.n	403470 <_dtoa_r+0x30>
  4034e4:	aa18      	add	r2, sp, #96	; 0x60
  4034e6:	ab19      	add	r3, sp, #100	; 0x64
  4034e8:	9201      	str	r2, [sp, #4]
  4034ea:	9300      	str	r3, [sp, #0]
  4034ec:	4652      	mov	r2, sl
  4034ee:	465b      	mov	r3, fp
  4034f0:	4620      	mov	r0, r4
  4034f2:	f001 fd41 	bl	404f78 <__d2b>
  4034f6:	0d2b      	lsrs	r3, r5, #20
  4034f8:	4681      	mov	r9, r0
  4034fa:	d071      	beq.n	4035e0 <_dtoa_r+0x1a0>
  4034fc:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403500:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403504:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403506:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40350a:	4650      	mov	r0, sl
  40350c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403510:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403514:	2200      	movs	r2, #0
  403516:	4b78      	ldr	r3, [pc, #480]	; (4036f8 <_dtoa_r+0x2b8>)
  403518:	f002 fa98 	bl	405a4c <__aeabi_dsub>
  40351c:	a36c      	add	r3, pc, #432	; (adr r3, 4036d0 <_dtoa_r+0x290>)
  40351e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403522:	f002 fc47 	bl	405db4 <__aeabi_dmul>
  403526:	a36c      	add	r3, pc, #432	; (adr r3, 4036d8 <_dtoa_r+0x298>)
  403528:	e9d3 2300 	ldrd	r2, r3, [r3]
  40352c:	f002 fa90 	bl	405a50 <__adddf3>
  403530:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403534:	4630      	mov	r0, r6
  403536:	f002 fbd7 	bl	405ce8 <__aeabi_i2d>
  40353a:	a369      	add	r3, pc, #420	; (adr r3, 4036e0 <_dtoa_r+0x2a0>)
  40353c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403540:	f002 fc38 	bl	405db4 <__aeabi_dmul>
  403544:	4602      	mov	r2, r0
  403546:	460b      	mov	r3, r1
  403548:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40354c:	f002 fa80 	bl	405a50 <__adddf3>
  403550:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403554:	f002 fede 	bl	406314 <__aeabi_d2iz>
  403558:	2200      	movs	r2, #0
  40355a:	9002      	str	r0, [sp, #8]
  40355c:	2300      	movs	r3, #0
  40355e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403562:	f002 fe99 	bl	406298 <__aeabi_dcmplt>
  403566:	2800      	cmp	r0, #0
  403568:	f040 8173 	bne.w	403852 <_dtoa_r+0x412>
  40356c:	9d02      	ldr	r5, [sp, #8]
  40356e:	2d16      	cmp	r5, #22
  403570:	f200 815d 	bhi.w	40382e <_dtoa_r+0x3ee>
  403574:	4b61      	ldr	r3, [pc, #388]	; (4036fc <_dtoa_r+0x2bc>)
  403576:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40357a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40357e:	4652      	mov	r2, sl
  403580:	465b      	mov	r3, fp
  403582:	f002 fea7 	bl	4062d4 <__aeabi_dcmpgt>
  403586:	2800      	cmp	r0, #0
  403588:	f000 81c5 	beq.w	403916 <_dtoa_r+0x4d6>
  40358c:	1e6b      	subs	r3, r5, #1
  40358e:	9302      	str	r3, [sp, #8]
  403590:	2300      	movs	r3, #0
  403592:	930e      	str	r3, [sp, #56]	; 0x38
  403594:	1bbf      	subs	r7, r7, r6
  403596:	1e7b      	subs	r3, r7, #1
  403598:	9306      	str	r3, [sp, #24]
  40359a:	f100 8154 	bmi.w	403846 <_dtoa_r+0x406>
  40359e:	2300      	movs	r3, #0
  4035a0:	9308      	str	r3, [sp, #32]
  4035a2:	9b02      	ldr	r3, [sp, #8]
  4035a4:	2b00      	cmp	r3, #0
  4035a6:	f2c0 8145 	blt.w	403834 <_dtoa_r+0x3f4>
  4035aa:	9a06      	ldr	r2, [sp, #24]
  4035ac:	930d      	str	r3, [sp, #52]	; 0x34
  4035ae:	4611      	mov	r1, r2
  4035b0:	4419      	add	r1, r3
  4035b2:	2300      	movs	r3, #0
  4035b4:	9106      	str	r1, [sp, #24]
  4035b6:	930c      	str	r3, [sp, #48]	; 0x30
  4035b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4035ba:	2b09      	cmp	r3, #9
  4035bc:	d82a      	bhi.n	403614 <_dtoa_r+0x1d4>
  4035be:	2b05      	cmp	r3, #5
  4035c0:	f340 865b 	ble.w	40427a <_dtoa_r+0xe3a>
  4035c4:	3b04      	subs	r3, #4
  4035c6:	9324      	str	r3, [sp, #144]	; 0x90
  4035c8:	2500      	movs	r5, #0
  4035ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4035cc:	3b02      	subs	r3, #2
  4035ce:	2b03      	cmp	r3, #3
  4035d0:	f200 8642 	bhi.w	404258 <_dtoa_r+0xe18>
  4035d4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4035d8:	02c903d4 	.word	0x02c903d4
  4035dc:	046103df 	.word	0x046103df
  4035e0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4035e2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4035e4:	443e      	add	r6, r7
  4035e6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4035ea:	2b20      	cmp	r3, #32
  4035ec:	f340 818e 	ble.w	40390c <_dtoa_r+0x4cc>
  4035f0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4035f4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4035f8:	409d      	lsls	r5, r3
  4035fa:	fa2a f000 	lsr.w	r0, sl, r0
  4035fe:	4328      	orrs	r0, r5
  403600:	f002 fb62 	bl	405cc8 <__aeabi_ui2d>
  403604:	2301      	movs	r3, #1
  403606:	3e01      	subs	r6, #1
  403608:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40360c:	9314      	str	r3, [sp, #80]	; 0x50
  40360e:	e781      	b.n	403514 <_dtoa_r+0xd4>
  403610:	483b      	ldr	r0, [pc, #236]	; (403700 <_dtoa_r+0x2c0>)
  403612:	e743      	b.n	40349c <_dtoa_r+0x5c>
  403614:	2100      	movs	r1, #0
  403616:	6461      	str	r1, [r4, #68]	; 0x44
  403618:	4620      	mov	r0, r4
  40361a:	9125      	str	r1, [sp, #148]	; 0x94
  40361c:	f001 fa0e 	bl	404a3c <_Balloc>
  403620:	f04f 33ff 	mov.w	r3, #4294967295
  403624:	930a      	str	r3, [sp, #40]	; 0x28
  403626:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403628:	930f      	str	r3, [sp, #60]	; 0x3c
  40362a:	2301      	movs	r3, #1
  40362c:	9004      	str	r0, [sp, #16]
  40362e:	6420      	str	r0, [r4, #64]	; 0x40
  403630:	9224      	str	r2, [sp, #144]	; 0x90
  403632:	930b      	str	r3, [sp, #44]	; 0x2c
  403634:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403636:	2b00      	cmp	r3, #0
  403638:	f2c0 80d9 	blt.w	4037ee <_dtoa_r+0x3ae>
  40363c:	9a02      	ldr	r2, [sp, #8]
  40363e:	2a0e      	cmp	r2, #14
  403640:	f300 80d5 	bgt.w	4037ee <_dtoa_r+0x3ae>
  403644:	4b2d      	ldr	r3, [pc, #180]	; (4036fc <_dtoa_r+0x2bc>)
  403646:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40364a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40364e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403652:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403654:	2b00      	cmp	r3, #0
  403656:	f2c0 83ba 	blt.w	403dce <_dtoa_r+0x98e>
  40365a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40365e:	4650      	mov	r0, sl
  403660:	462a      	mov	r2, r5
  403662:	4633      	mov	r3, r6
  403664:	4659      	mov	r1, fp
  403666:	f002 fccf 	bl	406008 <__aeabi_ddiv>
  40366a:	f002 fe53 	bl	406314 <__aeabi_d2iz>
  40366e:	4680      	mov	r8, r0
  403670:	f002 fb3a 	bl	405ce8 <__aeabi_i2d>
  403674:	462a      	mov	r2, r5
  403676:	4633      	mov	r3, r6
  403678:	f002 fb9c 	bl	405db4 <__aeabi_dmul>
  40367c:	460b      	mov	r3, r1
  40367e:	4602      	mov	r2, r0
  403680:	4659      	mov	r1, fp
  403682:	4650      	mov	r0, sl
  403684:	f002 f9e2 	bl	405a4c <__aeabi_dsub>
  403688:	9d04      	ldr	r5, [sp, #16]
  40368a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40368e:	702b      	strb	r3, [r5, #0]
  403690:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403692:	2b01      	cmp	r3, #1
  403694:	4606      	mov	r6, r0
  403696:	460f      	mov	r7, r1
  403698:	f105 0501 	add.w	r5, r5, #1
  40369c:	d068      	beq.n	403770 <_dtoa_r+0x330>
  40369e:	2200      	movs	r2, #0
  4036a0:	4b18      	ldr	r3, [pc, #96]	; (403704 <_dtoa_r+0x2c4>)
  4036a2:	f002 fb87 	bl	405db4 <__aeabi_dmul>
  4036a6:	2200      	movs	r2, #0
  4036a8:	2300      	movs	r3, #0
  4036aa:	4606      	mov	r6, r0
  4036ac:	460f      	mov	r7, r1
  4036ae:	f002 fde9 	bl	406284 <__aeabi_dcmpeq>
  4036b2:	2800      	cmp	r0, #0
  4036b4:	f040 8088 	bne.w	4037c8 <_dtoa_r+0x388>
  4036b8:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  4036bc:	f04f 0a00 	mov.w	sl, #0
  4036c0:	f8df b040 	ldr.w	fp, [pc, #64]	; 403704 <_dtoa_r+0x2c4>
  4036c4:	940c      	str	r4, [sp, #48]	; 0x30
  4036c6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4036ca:	e028      	b.n	40371e <_dtoa_r+0x2de>
  4036cc:	f3af 8000 	nop.w
  4036d0:	636f4361 	.word	0x636f4361
  4036d4:	3fd287a7 	.word	0x3fd287a7
  4036d8:	8b60c8b3 	.word	0x8b60c8b3
  4036dc:	3fc68a28 	.word	0x3fc68a28
  4036e0:	509f79fb 	.word	0x509f79fb
  4036e4:	3fd34413 	.word	0x3fd34413
  4036e8:	7ff00000 	.word	0x7ff00000
  4036ec:	0040777d 	.word	0x0040777d
  4036f0:	004077a0 	.word	0x004077a0
  4036f4:	004077ac 	.word	0x004077ac
  4036f8:	3ff80000 	.word	0x3ff80000
  4036fc:	004077d8 	.word	0x004077d8
  403700:	0040777c 	.word	0x0040777c
  403704:	40240000 	.word	0x40240000
  403708:	f002 fb54 	bl	405db4 <__aeabi_dmul>
  40370c:	2200      	movs	r2, #0
  40370e:	2300      	movs	r3, #0
  403710:	4606      	mov	r6, r0
  403712:	460f      	mov	r7, r1
  403714:	f002 fdb6 	bl	406284 <__aeabi_dcmpeq>
  403718:	2800      	cmp	r0, #0
  40371a:	f040 83c1 	bne.w	403ea0 <_dtoa_r+0xa60>
  40371e:	4642      	mov	r2, r8
  403720:	464b      	mov	r3, r9
  403722:	4630      	mov	r0, r6
  403724:	4639      	mov	r1, r7
  403726:	f002 fc6f 	bl	406008 <__aeabi_ddiv>
  40372a:	f002 fdf3 	bl	406314 <__aeabi_d2iz>
  40372e:	4604      	mov	r4, r0
  403730:	f002 fada 	bl	405ce8 <__aeabi_i2d>
  403734:	4642      	mov	r2, r8
  403736:	464b      	mov	r3, r9
  403738:	f002 fb3c 	bl	405db4 <__aeabi_dmul>
  40373c:	4602      	mov	r2, r0
  40373e:	460b      	mov	r3, r1
  403740:	4630      	mov	r0, r6
  403742:	4639      	mov	r1, r7
  403744:	f002 f982 	bl	405a4c <__aeabi_dsub>
  403748:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40374c:	9e04      	ldr	r6, [sp, #16]
  40374e:	f805 eb01 	strb.w	lr, [r5], #1
  403752:	eba5 0e06 	sub.w	lr, r5, r6
  403756:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403758:	45b6      	cmp	lr, r6
  40375a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40375e:	4652      	mov	r2, sl
  403760:	465b      	mov	r3, fp
  403762:	d1d1      	bne.n	403708 <_dtoa_r+0x2c8>
  403764:	46a0      	mov	r8, r4
  403766:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40376a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40376c:	4606      	mov	r6, r0
  40376e:	460f      	mov	r7, r1
  403770:	4632      	mov	r2, r6
  403772:	463b      	mov	r3, r7
  403774:	4630      	mov	r0, r6
  403776:	4639      	mov	r1, r7
  403778:	f002 f96a 	bl	405a50 <__adddf3>
  40377c:	4606      	mov	r6, r0
  40377e:	460f      	mov	r7, r1
  403780:	4602      	mov	r2, r0
  403782:	460b      	mov	r3, r1
  403784:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403788:	f002 fd86 	bl	406298 <__aeabi_dcmplt>
  40378c:	b948      	cbnz	r0, 4037a2 <_dtoa_r+0x362>
  40378e:	4632      	mov	r2, r6
  403790:	463b      	mov	r3, r7
  403792:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403796:	f002 fd75 	bl	406284 <__aeabi_dcmpeq>
  40379a:	b1a8      	cbz	r0, 4037c8 <_dtoa_r+0x388>
  40379c:	f018 0f01 	tst.w	r8, #1
  4037a0:	d012      	beq.n	4037c8 <_dtoa_r+0x388>
  4037a2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4037a6:	9a04      	ldr	r2, [sp, #16]
  4037a8:	1e6b      	subs	r3, r5, #1
  4037aa:	e004      	b.n	4037b6 <_dtoa_r+0x376>
  4037ac:	429a      	cmp	r2, r3
  4037ae:	f000 8401 	beq.w	403fb4 <_dtoa_r+0xb74>
  4037b2:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4037b6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4037ba:	f103 0501 	add.w	r5, r3, #1
  4037be:	d0f5      	beq.n	4037ac <_dtoa_r+0x36c>
  4037c0:	f108 0801 	add.w	r8, r8, #1
  4037c4:	f883 8000 	strb.w	r8, [r3]
  4037c8:	4649      	mov	r1, r9
  4037ca:	4620      	mov	r0, r4
  4037cc:	f001 f95c 	bl	404a88 <_Bfree>
  4037d0:	2200      	movs	r2, #0
  4037d2:	9b02      	ldr	r3, [sp, #8]
  4037d4:	702a      	strb	r2, [r5, #0]
  4037d6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4037d8:	3301      	adds	r3, #1
  4037da:	6013      	str	r3, [r2, #0]
  4037dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4037de:	2b00      	cmp	r3, #0
  4037e0:	f000 839e 	beq.w	403f20 <_dtoa_r+0xae0>
  4037e4:	9804      	ldr	r0, [sp, #16]
  4037e6:	601d      	str	r5, [r3, #0]
  4037e8:	b01b      	add	sp, #108	; 0x6c
  4037ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4037ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4037f0:	2a00      	cmp	r2, #0
  4037f2:	d03e      	beq.n	403872 <_dtoa_r+0x432>
  4037f4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4037f6:	2a01      	cmp	r2, #1
  4037f8:	f340 8311 	ble.w	403e1e <_dtoa_r+0x9de>
  4037fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4037fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403800:	1e5f      	subs	r7, r3, #1
  403802:	42ba      	cmp	r2, r7
  403804:	f2c0 838f 	blt.w	403f26 <_dtoa_r+0xae6>
  403808:	1bd7      	subs	r7, r2, r7
  40380a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40380c:	2b00      	cmp	r3, #0
  40380e:	f2c0 848b 	blt.w	404128 <_dtoa_r+0xce8>
  403812:	9d08      	ldr	r5, [sp, #32]
  403814:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403816:	9a08      	ldr	r2, [sp, #32]
  403818:	441a      	add	r2, r3
  40381a:	9208      	str	r2, [sp, #32]
  40381c:	9a06      	ldr	r2, [sp, #24]
  40381e:	2101      	movs	r1, #1
  403820:	441a      	add	r2, r3
  403822:	4620      	mov	r0, r4
  403824:	9206      	str	r2, [sp, #24]
  403826:	f001 f9c9 	bl	404bbc <__i2b>
  40382a:	4606      	mov	r6, r0
  40382c:	e024      	b.n	403878 <_dtoa_r+0x438>
  40382e:	2301      	movs	r3, #1
  403830:	930e      	str	r3, [sp, #56]	; 0x38
  403832:	e6af      	b.n	403594 <_dtoa_r+0x154>
  403834:	9a08      	ldr	r2, [sp, #32]
  403836:	9b02      	ldr	r3, [sp, #8]
  403838:	1ad2      	subs	r2, r2, r3
  40383a:	425b      	negs	r3, r3
  40383c:	930c      	str	r3, [sp, #48]	; 0x30
  40383e:	2300      	movs	r3, #0
  403840:	9208      	str	r2, [sp, #32]
  403842:	930d      	str	r3, [sp, #52]	; 0x34
  403844:	e6b8      	b.n	4035b8 <_dtoa_r+0x178>
  403846:	f1c7 0301 	rsb	r3, r7, #1
  40384a:	9308      	str	r3, [sp, #32]
  40384c:	2300      	movs	r3, #0
  40384e:	9306      	str	r3, [sp, #24]
  403850:	e6a7      	b.n	4035a2 <_dtoa_r+0x162>
  403852:	9d02      	ldr	r5, [sp, #8]
  403854:	4628      	mov	r0, r5
  403856:	f002 fa47 	bl	405ce8 <__aeabi_i2d>
  40385a:	4602      	mov	r2, r0
  40385c:	460b      	mov	r3, r1
  40385e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403862:	f002 fd0f 	bl	406284 <__aeabi_dcmpeq>
  403866:	2800      	cmp	r0, #0
  403868:	f47f ae80 	bne.w	40356c <_dtoa_r+0x12c>
  40386c:	1e6b      	subs	r3, r5, #1
  40386e:	9302      	str	r3, [sp, #8]
  403870:	e67c      	b.n	40356c <_dtoa_r+0x12c>
  403872:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403874:	9d08      	ldr	r5, [sp, #32]
  403876:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403878:	2d00      	cmp	r5, #0
  40387a:	dd0c      	ble.n	403896 <_dtoa_r+0x456>
  40387c:	9906      	ldr	r1, [sp, #24]
  40387e:	2900      	cmp	r1, #0
  403880:	460b      	mov	r3, r1
  403882:	dd08      	ble.n	403896 <_dtoa_r+0x456>
  403884:	42a9      	cmp	r1, r5
  403886:	9a08      	ldr	r2, [sp, #32]
  403888:	bfa8      	it	ge
  40388a:	462b      	movge	r3, r5
  40388c:	1ad2      	subs	r2, r2, r3
  40388e:	1aed      	subs	r5, r5, r3
  403890:	1acb      	subs	r3, r1, r3
  403892:	9208      	str	r2, [sp, #32]
  403894:	9306      	str	r3, [sp, #24]
  403896:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403898:	b1d3      	cbz	r3, 4038d0 <_dtoa_r+0x490>
  40389a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40389c:	2b00      	cmp	r3, #0
  40389e:	f000 82b7 	beq.w	403e10 <_dtoa_r+0x9d0>
  4038a2:	2f00      	cmp	r7, #0
  4038a4:	dd10      	ble.n	4038c8 <_dtoa_r+0x488>
  4038a6:	4631      	mov	r1, r6
  4038a8:	463a      	mov	r2, r7
  4038aa:	4620      	mov	r0, r4
  4038ac:	f001 fa22 	bl	404cf4 <__pow5mult>
  4038b0:	464a      	mov	r2, r9
  4038b2:	4601      	mov	r1, r0
  4038b4:	4606      	mov	r6, r0
  4038b6:	4620      	mov	r0, r4
  4038b8:	f001 f98a 	bl	404bd0 <__multiply>
  4038bc:	4649      	mov	r1, r9
  4038be:	4680      	mov	r8, r0
  4038c0:	4620      	mov	r0, r4
  4038c2:	f001 f8e1 	bl	404a88 <_Bfree>
  4038c6:	46c1      	mov	r9, r8
  4038c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4038ca:	1bda      	subs	r2, r3, r7
  4038cc:	f040 82a1 	bne.w	403e12 <_dtoa_r+0x9d2>
  4038d0:	2101      	movs	r1, #1
  4038d2:	4620      	mov	r0, r4
  4038d4:	f001 f972 	bl	404bbc <__i2b>
  4038d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4038da:	2b00      	cmp	r3, #0
  4038dc:	4680      	mov	r8, r0
  4038de:	dd1c      	ble.n	40391a <_dtoa_r+0x4da>
  4038e0:	4601      	mov	r1, r0
  4038e2:	461a      	mov	r2, r3
  4038e4:	4620      	mov	r0, r4
  4038e6:	f001 fa05 	bl	404cf4 <__pow5mult>
  4038ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4038ec:	2b01      	cmp	r3, #1
  4038ee:	4680      	mov	r8, r0
  4038f0:	f340 8254 	ble.w	403d9c <_dtoa_r+0x95c>
  4038f4:	2300      	movs	r3, #0
  4038f6:	930c      	str	r3, [sp, #48]	; 0x30
  4038f8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4038fc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403900:	6918      	ldr	r0, [r3, #16]
  403902:	f001 f90b 	bl	404b1c <__hi0bits>
  403906:	f1c0 0020 	rsb	r0, r0, #32
  40390a:	e010      	b.n	40392e <_dtoa_r+0x4ee>
  40390c:	f1c3 0520 	rsb	r5, r3, #32
  403910:	fa0a f005 	lsl.w	r0, sl, r5
  403914:	e674      	b.n	403600 <_dtoa_r+0x1c0>
  403916:	900e      	str	r0, [sp, #56]	; 0x38
  403918:	e63c      	b.n	403594 <_dtoa_r+0x154>
  40391a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40391c:	2b01      	cmp	r3, #1
  40391e:	f340 8287 	ble.w	403e30 <_dtoa_r+0x9f0>
  403922:	2300      	movs	r3, #0
  403924:	930c      	str	r3, [sp, #48]	; 0x30
  403926:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403928:	2001      	movs	r0, #1
  40392a:	2b00      	cmp	r3, #0
  40392c:	d1e4      	bne.n	4038f8 <_dtoa_r+0x4b8>
  40392e:	9a06      	ldr	r2, [sp, #24]
  403930:	4410      	add	r0, r2
  403932:	f010 001f 	ands.w	r0, r0, #31
  403936:	f000 80a1 	beq.w	403a7c <_dtoa_r+0x63c>
  40393a:	f1c0 0320 	rsb	r3, r0, #32
  40393e:	2b04      	cmp	r3, #4
  403940:	f340 849e 	ble.w	404280 <_dtoa_r+0xe40>
  403944:	9b08      	ldr	r3, [sp, #32]
  403946:	f1c0 001c 	rsb	r0, r0, #28
  40394a:	4403      	add	r3, r0
  40394c:	9308      	str	r3, [sp, #32]
  40394e:	4613      	mov	r3, r2
  403950:	4403      	add	r3, r0
  403952:	4405      	add	r5, r0
  403954:	9306      	str	r3, [sp, #24]
  403956:	9b08      	ldr	r3, [sp, #32]
  403958:	2b00      	cmp	r3, #0
  40395a:	dd05      	ble.n	403968 <_dtoa_r+0x528>
  40395c:	4649      	mov	r1, r9
  40395e:	461a      	mov	r2, r3
  403960:	4620      	mov	r0, r4
  403962:	f001 fa17 	bl	404d94 <__lshift>
  403966:	4681      	mov	r9, r0
  403968:	9b06      	ldr	r3, [sp, #24]
  40396a:	2b00      	cmp	r3, #0
  40396c:	dd05      	ble.n	40397a <_dtoa_r+0x53a>
  40396e:	4641      	mov	r1, r8
  403970:	461a      	mov	r2, r3
  403972:	4620      	mov	r0, r4
  403974:	f001 fa0e 	bl	404d94 <__lshift>
  403978:	4680      	mov	r8, r0
  40397a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40397c:	2b00      	cmp	r3, #0
  40397e:	f040 8086 	bne.w	403a8e <_dtoa_r+0x64e>
  403982:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403984:	2b00      	cmp	r3, #0
  403986:	f340 8266 	ble.w	403e56 <_dtoa_r+0xa16>
  40398a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40398c:	2b00      	cmp	r3, #0
  40398e:	f000 8098 	beq.w	403ac2 <_dtoa_r+0x682>
  403992:	2d00      	cmp	r5, #0
  403994:	dd05      	ble.n	4039a2 <_dtoa_r+0x562>
  403996:	4631      	mov	r1, r6
  403998:	462a      	mov	r2, r5
  40399a:	4620      	mov	r0, r4
  40399c:	f001 f9fa 	bl	404d94 <__lshift>
  4039a0:	4606      	mov	r6, r0
  4039a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4039a4:	2b00      	cmp	r3, #0
  4039a6:	f040 8337 	bne.w	404018 <_dtoa_r+0xbd8>
  4039aa:	9606      	str	r6, [sp, #24]
  4039ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4039ae:	9a04      	ldr	r2, [sp, #16]
  4039b0:	f8dd b018 	ldr.w	fp, [sp, #24]
  4039b4:	3b01      	subs	r3, #1
  4039b6:	18d3      	adds	r3, r2, r3
  4039b8:	930b      	str	r3, [sp, #44]	; 0x2c
  4039ba:	f00a 0301 	and.w	r3, sl, #1
  4039be:	930c      	str	r3, [sp, #48]	; 0x30
  4039c0:	4617      	mov	r7, r2
  4039c2:	46c2      	mov	sl, r8
  4039c4:	4651      	mov	r1, sl
  4039c6:	4648      	mov	r0, r9
  4039c8:	f7ff fca4 	bl	403314 <quorem>
  4039cc:	4631      	mov	r1, r6
  4039ce:	4605      	mov	r5, r0
  4039d0:	4648      	mov	r0, r9
  4039d2:	f001 fa31 	bl	404e38 <__mcmp>
  4039d6:	465a      	mov	r2, fp
  4039d8:	900a      	str	r0, [sp, #40]	; 0x28
  4039da:	4651      	mov	r1, sl
  4039dc:	4620      	mov	r0, r4
  4039de:	f001 fa47 	bl	404e70 <__mdiff>
  4039e2:	68c2      	ldr	r2, [r0, #12]
  4039e4:	4680      	mov	r8, r0
  4039e6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4039ea:	2a00      	cmp	r2, #0
  4039ec:	f040 822b 	bne.w	403e46 <_dtoa_r+0xa06>
  4039f0:	4601      	mov	r1, r0
  4039f2:	4648      	mov	r0, r9
  4039f4:	9308      	str	r3, [sp, #32]
  4039f6:	f001 fa1f 	bl	404e38 <__mcmp>
  4039fa:	4641      	mov	r1, r8
  4039fc:	9006      	str	r0, [sp, #24]
  4039fe:	4620      	mov	r0, r4
  403a00:	f001 f842 	bl	404a88 <_Bfree>
  403a04:	9a06      	ldr	r2, [sp, #24]
  403a06:	9b08      	ldr	r3, [sp, #32]
  403a08:	b932      	cbnz	r2, 403a18 <_dtoa_r+0x5d8>
  403a0a:	9924      	ldr	r1, [sp, #144]	; 0x90
  403a0c:	b921      	cbnz	r1, 403a18 <_dtoa_r+0x5d8>
  403a0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403a10:	2a00      	cmp	r2, #0
  403a12:	f000 83ef 	beq.w	4041f4 <_dtoa_r+0xdb4>
  403a16:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403a18:	990a      	ldr	r1, [sp, #40]	; 0x28
  403a1a:	2900      	cmp	r1, #0
  403a1c:	f2c0 829f 	blt.w	403f5e <_dtoa_r+0xb1e>
  403a20:	d105      	bne.n	403a2e <_dtoa_r+0x5ee>
  403a22:	9924      	ldr	r1, [sp, #144]	; 0x90
  403a24:	b919      	cbnz	r1, 403a2e <_dtoa_r+0x5ee>
  403a26:	990c      	ldr	r1, [sp, #48]	; 0x30
  403a28:	2900      	cmp	r1, #0
  403a2a:	f000 8298 	beq.w	403f5e <_dtoa_r+0xb1e>
  403a2e:	2a00      	cmp	r2, #0
  403a30:	f300 8306 	bgt.w	404040 <_dtoa_r+0xc00>
  403a34:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403a36:	703b      	strb	r3, [r7, #0]
  403a38:	f107 0801 	add.w	r8, r7, #1
  403a3c:	4297      	cmp	r7, r2
  403a3e:	4645      	mov	r5, r8
  403a40:	f000 830c 	beq.w	40405c <_dtoa_r+0xc1c>
  403a44:	4649      	mov	r1, r9
  403a46:	2300      	movs	r3, #0
  403a48:	220a      	movs	r2, #10
  403a4a:	4620      	mov	r0, r4
  403a4c:	f001 f826 	bl	404a9c <__multadd>
  403a50:	455e      	cmp	r6, fp
  403a52:	4681      	mov	r9, r0
  403a54:	4631      	mov	r1, r6
  403a56:	f04f 0300 	mov.w	r3, #0
  403a5a:	f04f 020a 	mov.w	r2, #10
  403a5e:	4620      	mov	r0, r4
  403a60:	f000 81eb 	beq.w	403e3a <_dtoa_r+0x9fa>
  403a64:	f001 f81a 	bl	404a9c <__multadd>
  403a68:	4659      	mov	r1, fp
  403a6a:	4606      	mov	r6, r0
  403a6c:	2300      	movs	r3, #0
  403a6e:	220a      	movs	r2, #10
  403a70:	4620      	mov	r0, r4
  403a72:	f001 f813 	bl	404a9c <__multadd>
  403a76:	4647      	mov	r7, r8
  403a78:	4683      	mov	fp, r0
  403a7a:	e7a3      	b.n	4039c4 <_dtoa_r+0x584>
  403a7c:	201c      	movs	r0, #28
  403a7e:	9b08      	ldr	r3, [sp, #32]
  403a80:	4403      	add	r3, r0
  403a82:	9308      	str	r3, [sp, #32]
  403a84:	9b06      	ldr	r3, [sp, #24]
  403a86:	4403      	add	r3, r0
  403a88:	4405      	add	r5, r0
  403a8a:	9306      	str	r3, [sp, #24]
  403a8c:	e763      	b.n	403956 <_dtoa_r+0x516>
  403a8e:	4641      	mov	r1, r8
  403a90:	4648      	mov	r0, r9
  403a92:	f001 f9d1 	bl	404e38 <__mcmp>
  403a96:	2800      	cmp	r0, #0
  403a98:	f6bf af73 	bge.w	403982 <_dtoa_r+0x542>
  403a9c:	9f02      	ldr	r7, [sp, #8]
  403a9e:	4649      	mov	r1, r9
  403aa0:	2300      	movs	r3, #0
  403aa2:	220a      	movs	r2, #10
  403aa4:	4620      	mov	r0, r4
  403aa6:	3f01      	subs	r7, #1
  403aa8:	9702      	str	r7, [sp, #8]
  403aaa:	f000 fff7 	bl	404a9c <__multadd>
  403aae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403ab0:	4681      	mov	r9, r0
  403ab2:	2b00      	cmp	r3, #0
  403ab4:	f040 83b6 	bne.w	404224 <_dtoa_r+0xde4>
  403ab8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403aba:	2b00      	cmp	r3, #0
  403abc:	f340 83bf 	ble.w	40423e <_dtoa_r+0xdfe>
  403ac0:	930a      	str	r3, [sp, #40]	; 0x28
  403ac2:	f8dd b010 	ldr.w	fp, [sp, #16]
  403ac6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403ac8:	465d      	mov	r5, fp
  403aca:	e002      	b.n	403ad2 <_dtoa_r+0x692>
  403acc:	f000 ffe6 	bl	404a9c <__multadd>
  403ad0:	4681      	mov	r9, r0
  403ad2:	4641      	mov	r1, r8
  403ad4:	4648      	mov	r0, r9
  403ad6:	f7ff fc1d 	bl	403314 <quorem>
  403ada:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403ade:	f805 ab01 	strb.w	sl, [r5], #1
  403ae2:	eba5 030b 	sub.w	r3, r5, fp
  403ae6:	42bb      	cmp	r3, r7
  403ae8:	f04f 020a 	mov.w	r2, #10
  403aec:	f04f 0300 	mov.w	r3, #0
  403af0:	4649      	mov	r1, r9
  403af2:	4620      	mov	r0, r4
  403af4:	dbea      	blt.n	403acc <_dtoa_r+0x68c>
  403af6:	9b04      	ldr	r3, [sp, #16]
  403af8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403afa:	2a01      	cmp	r2, #1
  403afc:	bfac      	ite	ge
  403afe:	189b      	addge	r3, r3, r2
  403b00:	3301      	addlt	r3, #1
  403b02:	461d      	mov	r5, r3
  403b04:	f04f 0b00 	mov.w	fp, #0
  403b08:	4649      	mov	r1, r9
  403b0a:	2201      	movs	r2, #1
  403b0c:	4620      	mov	r0, r4
  403b0e:	f001 f941 	bl	404d94 <__lshift>
  403b12:	4641      	mov	r1, r8
  403b14:	4681      	mov	r9, r0
  403b16:	f001 f98f 	bl	404e38 <__mcmp>
  403b1a:	2800      	cmp	r0, #0
  403b1c:	f340 823d 	ble.w	403f9a <_dtoa_r+0xb5a>
  403b20:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403b24:	9904      	ldr	r1, [sp, #16]
  403b26:	1e6b      	subs	r3, r5, #1
  403b28:	e004      	b.n	403b34 <_dtoa_r+0x6f4>
  403b2a:	428b      	cmp	r3, r1
  403b2c:	f000 81ae 	beq.w	403e8c <_dtoa_r+0xa4c>
  403b30:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403b34:	2a39      	cmp	r2, #57	; 0x39
  403b36:	f103 0501 	add.w	r5, r3, #1
  403b3a:	d0f6      	beq.n	403b2a <_dtoa_r+0x6ea>
  403b3c:	3201      	adds	r2, #1
  403b3e:	701a      	strb	r2, [r3, #0]
  403b40:	4641      	mov	r1, r8
  403b42:	4620      	mov	r0, r4
  403b44:	f000 ffa0 	bl	404a88 <_Bfree>
  403b48:	2e00      	cmp	r6, #0
  403b4a:	f43f ae3d 	beq.w	4037c8 <_dtoa_r+0x388>
  403b4e:	f1bb 0f00 	cmp.w	fp, #0
  403b52:	d005      	beq.n	403b60 <_dtoa_r+0x720>
  403b54:	45b3      	cmp	fp, r6
  403b56:	d003      	beq.n	403b60 <_dtoa_r+0x720>
  403b58:	4659      	mov	r1, fp
  403b5a:	4620      	mov	r0, r4
  403b5c:	f000 ff94 	bl	404a88 <_Bfree>
  403b60:	4631      	mov	r1, r6
  403b62:	4620      	mov	r0, r4
  403b64:	f000 ff90 	bl	404a88 <_Bfree>
  403b68:	e62e      	b.n	4037c8 <_dtoa_r+0x388>
  403b6a:	2300      	movs	r3, #0
  403b6c:	930b      	str	r3, [sp, #44]	; 0x2c
  403b6e:	9b02      	ldr	r3, [sp, #8]
  403b70:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403b72:	4413      	add	r3, r2
  403b74:	930f      	str	r3, [sp, #60]	; 0x3c
  403b76:	3301      	adds	r3, #1
  403b78:	2b01      	cmp	r3, #1
  403b7a:	461f      	mov	r7, r3
  403b7c:	461e      	mov	r6, r3
  403b7e:	930a      	str	r3, [sp, #40]	; 0x28
  403b80:	bfb8      	it	lt
  403b82:	2701      	movlt	r7, #1
  403b84:	2100      	movs	r1, #0
  403b86:	2f17      	cmp	r7, #23
  403b88:	6461      	str	r1, [r4, #68]	; 0x44
  403b8a:	d90a      	bls.n	403ba2 <_dtoa_r+0x762>
  403b8c:	2201      	movs	r2, #1
  403b8e:	2304      	movs	r3, #4
  403b90:	005b      	lsls	r3, r3, #1
  403b92:	f103 0014 	add.w	r0, r3, #20
  403b96:	4287      	cmp	r7, r0
  403b98:	4611      	mov	r1, r2
  403b9a:	f102 0201 	add.w	r2, r2, #1
  403b9e:	d2f7      	bcs.n	403b90 <_dtoa_r+0x750>
  403ba0:	6461      	str	r1, [r4, #68]	; 0x44
  403ba2:	4620      	mov	r0, r4
  403ba4:	f000 ff4a 	bl	404a3c <_Balloc>
  403ba8:	2e0e      	cmp	r6, #14
  403baa:	9004      	str	r0, [sp, #16]
  403bac:	6420      	str	r0, [r4, #64]	; 0x40
  403bae:	f63f ad41 	bhi.w	403634 <_dtoa_r+0x1f4>
  403bb2:	2d00      	cmp	r5, #0
  403bb4:	f43f ad3e 	beq.w	403634 <_dtoa_r+0x1f4>
  403bb8:	9902      	ldr	r1, [sp, #8]
  403bba:	2900      	cmp	r1, #0
  403bbc:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403bc0:	f340 8202 	ble.w	403fc8 <_dtoa_r+0xb88>
  403bc4:	4bb8      	ldr	r3, [pc, #736]	; (403ea8 <_dtoa_r+0xa68>)
  403bc6:	f001 020f 	and.w	r2, r1, #15
  403bca:	110d      	asrs	r5, r1, #4
  403bcc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403bd0:	06e9      	lsls	r1, r5, #27
  403bd2:	e9d3 6700 	ldrd	r6, r7, [r3]
  403bd6:	f140 81ae 	bpl.w	403f36 <_dtoa_r+0xaf6>
  403bda:	4bb4      	ldr	r3, [pc, #720]	; (403eac <_dtoa_r+0xa6c>)
  403bdc:	4650      	mov	r0, sl
  403bde:	4659      	mov	r1, fp
  403be0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403be4:	f002 fa10 	bl	406008 <__aeabi_ddiv>
  403be8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403bec:	f005 050f 	and.w	r5, r5, #15
  403bf0:	f04f 0a03 	mov.w	sl, #3
  403bf4:	b18d      	cbz	r5, 403c1a <_dtoa_r+0x7da>
  403bf6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403eac <_dtoa_r+0xa6c>
  403bfa:	07ea      	lsls	r2, r5, #31
  403bfc:	d509      	bpl.n	403c12 <_dtoa_r+0x7d2>
  403bfe:	4630      	mov	r0, r6
  403c00:	4639      	mov	r1, r7
  403c02:	e9d8 2300 	ldrd	r2, r3, [r8]
  403c06:	f002 f8d5 	bl	405db4 <__aeabi_dmul>
  403c0a:	f10a 0a01 	add.w	sl, sl, #1
  403c0e:	4606      	mov	r6, r0
  403c10:	460f      	mov	r7, r1
  403c12:	106d      	asrs	r5, r5, #1
  403c14:	f108 0808 	add.w	r8, r8, #8
  403c18:	d1ef      	bne.n	403bfa <_dtoa_r+0x7ba>
  403c1a:	463b      	mov	r3, r7
  403c1c:	4632      	mov	r2, r6
  403c1e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403c22:	f002 f9f1 	bl	406008 <__aeabi_ddiv>
  403c26:	4607      	mov	r7, r0
  403c28:	4688      	mov	r8, r1
  403c2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403c2c:	b143      	cbz	r3, 403c40 <_dtoa_r+0x800>
  403c2e:	2200      	movs	r2, #0
  403c30:	4b9f      	ldr	r3, [pc, #636]	; (403eb0 <_dtoa_r+0xa70>)
  403c32:	4638      	mov	r0, r7
  403c34:	4641      	mov	r1, r8
  403c36:	f002 fb2f 	bl	406298 <__aeabi_dcmplt>
  403c3a:	2800      	cmp	r0, #0
  403c3c:	f040 8286 	bne.w	40414c <_dtoa_r+0xd0c>
  403c40:	4650      	mov	r0, sl
  403c42:	f002 f851 	bl	405ce8 <__aeabi_i2d>
  403c46:	463a      	mov	r2, r7
  403c48:	4643      	mov	r3, r8
  403c4a:	f002 f8b3 	bl	405db4 <__aeabi_dmul>
  403c4e:	4b99      	ldr	r3, [pc, #612]	; (403eb4 <_dtoa_r+0xa74>)
  403c50:	2200      	movs	r2, #0
  403c52:	f001 fefd 	bl	405a50 <__adddf3>
  403c56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c58:	4605      	mov	r5, r0
  403c5a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403c5e:	2b00      	cmp	r3, #0
  403c60:	f000 813e 	beq.w	403ee0 <_dtoa_r+0xaa0>
  403c64:	9b02      	ldr	r3, [sp, #8]
  403c66:	9315      	str	r3, [sp, #84]	; 0x54
  403c68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c6a:	9312      	str	r3, [sp, #72]	; 0x48
  403c6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403c6e:	2b00      	cmp	r3, #0
  403c70:	f000 81fa 	beq.w	404068 <_dtoa_r+0xc28>
  403c74:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403c76:	4b8c      	ldr	r3, [pc, #560]	; (403ea8 <_dtoa_r+0xa68>)
  403c78:	498f      	ldr	r1, [pc, #572]	; (403eb8 <_dtoa_r+0xa78>)
  403c7a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403c7e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403c82:	2000      	movs	r0, #0
  403c84:	f002 f9c0 	bl	406008 <__aeabi_ddiv>
  403c88:	462a      	mov	r2, r5
  403c8a:	4633      	mov	r3, r6
  403c8c:	f001 fede 	bl	405a4c <__aeabi_dsub>
  403c90:	4682      	mov	sl, r0
  403c92:	468b      	mov	fp, r1
  403c94:	4638      	mov	r0, r7
  403c96:	4641      	mov	r1, r8
  403c98:	f002 fb3c 	bl	406314 <__aeabi_d2iz>
  403c9c:	4605      	mov	r5, r0
  403c9e:	f002 f823 	bl	405ce8 <__aeabi_i2d>
  403ca2:	4602      	mov	r2, r0
  403ca4:	460b      	mov	r3, r1
  403ca6:	4638      	mov	r0, r7
  403ca8:	4641      	mov	r1, r8
  403caa:	f001 fecf 	bl	405a4c <__aeabi_dsub>
  403cae:	3530      	adds	r5, #48	; 0x30
  403cb0:	fa5f f885 	uxtb.w	r8, r5
  403cb4:	9d04      	ldr	r5, [sp, #16]
  403cb6:	4606      	mov	r6, r0
  403cb8:	460f      	mov	r7, r1
  403cba:	f885 8000 	strb.w	r8, [r5]
  403cbe:	4602      	mov	r2, r0
  403cc0:	460b      	mov	r3, r1
  403cc2:	4650      	mov	r0, sl
  403cc4:	4659      	mov	r1, fp
  403cc6:	3501      	adds	r5, #1
  403cc8:	f002 fb04 	bl	4062d4 <__aeabi_dcmpgt>
  403ccc:	2800      	cmp	r0, #0
  403cce:	d154      	bne.n	403d7a <_dtoa_r+0x93a>
  403cd0:	4632      	mov	r2, r6
  403cd2:	463b      	mov	r3, r7
  403cd4:	2000      	movs	r0, #0
  403cd6:	4976      	ldr	r1, [pc, #472]	; (403eb0 <_dtoa_r+0xa70>)
  403cd8:	f001 feb8 	bl	405a4c <__aeabi_dsub>
  403cdc:	4602      	mov	r2, r0
  403cde:	460b      	mov	r3, r1
  403ce0:	4650      	mov	r0, sl
  403ce2:	4659      	mov	r1, fp
  403ce4:	f002 faf6 	bl	4062d4 <__aeabi_dcmpgt>
  403ce8:	2800      	cmp	r0, #0
  403cea:	f040 8270 	bne.w	4041ce <_dtoa_r+0xd8e>
  403cee:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403cf0:	2a01      	cmp	r2, #1
  403cf2:	f000 8111 	beq.w	403f18 <_dtoa_r+0xad8>
  403cf6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403cf8:	9a04      	ldr	r2, [sp, #16]
  403cfa:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403cfe:	4413      	add	r3, r2
  403d00:	4699      	mov	r9, r3
  403d02:	e00d      	b.n	403d20 <_dtoa_r+0x8e0>
  403d04:	2000      	movs	r0, #0
  403d06:	496a      	ldr	r1, [pc, #424]	; (403eb0 <_dtoa_r+0xa70>)
  403d08:	f001 fea0 	bl	405a4c <__aeabi_dsub>
  403d0c:	4652      	mov	r2, sl
  403d0e:	465b      	mov	r3, fp
  403d10:	f002 fac2 	bl	406298 <__aeabi_dcmplt>
  403d14:	2800      	cmp	r0, #0
  403d16:	f040 8258 	bne.w	4041ca <_dtoa_r+0xd8a>
  403d1a:	454d      	cmp	r5, r9
  403d1c:	f000 80fa 	beq.w	403f14 <_dtoa_r+0xad4>
  403d20:	4650      	mov	r0, sl
  403d22:	4659      	mov	r1, fp
  403d24:	2200      	movs	r2, #0
  403d26:	4b65      	ldr	r3, [pc, #404]	; (403ebc <_dtoa_r+0xa7c>)
  403d28:	f002 f844 	bl	405db4 <__aeabi_dmul>
  403d2c:	2200      	movs	r2, #0
  403d2e:	4b63      	ldr	r3, [pc, #396]	; (403ebc <_dtoa_r+0xa7c>)
  403d30:	4682      	mov	sl, r0
  403d32:	468b      	mov	fp, r1
  403d34:	4630      	mov	r0, r6
  403d36:	4639      	mov	r1, r7
  403d38:	f002 f83c 	bl	405db4 <__aeabi_dmul>
  403d3c:	460f      	mov	r7, r1
  403d3e:	4606      	mov	r6, r0
  403d40:	f002 fae8 	bl	406314 <__aeabi_d2iz>
  403d44:	4680      	mov	r8, r0
  403d46:	f001 ffcf 	bl	405ce8 <__aeabi_i2d>
  403d4a:	4602      	mov	r2, r0
  403d4c:	460b      	mov	r3, r1
  403d4e:	4630      	mov	r0, r6
  403d50:	4639      	mov	r1, r7
  403d52:	f001 fe7b 	bl	405a4c <__aeabi_dsub>
  403d56:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403d5a:	fa5f f888 	uxtb.w	r8, r8
  403d5e:	4652      	mov	r2, sl
  403d60:	465b      	mov	r3, fp
  403d62:	f805 8b01 	strb.w	r8, [r5], #1
  403d66:	4606      	mov	r6, r0
  403d68:	460f      	mov	r7, r1
  403d6a:	f002 fa95 	bl	406298 <__aeabi_dcmplt>
  403d6e:	4632      	mov	r2, r6
  403d70:	463b      	mov	r3, r7
  403d72:	2800      	cmp	r0, #0
  403d74:	d0c6      	beq.n	403d04 <_dtoa_r+0x8c4>
  403d76:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403d7a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403d7c:	9302      	str	r3, [sp, #8]
  403d7e:	e523      	b.n	4037c8 <_dtoa_r+0x388>
  403d80:	2300      	movs	r3, #0
  403d82:	930b      	str	r3, [sp, #44]	; 0x2c
  403d84:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403d86:	2b00      	cmp	r3, #0
  403d88:	f340 80dc 	ble.w	403f44 <_dtoa_r+0xb04>
  403d8c:	461f      	mov	r7, r3
  403d8e:	461e      	mov	r6, r3
  403d90:	930f      	str	r3, [sp, #60]	; 0x3c
  403d92:	930a      	str	r3, [sp, #40]	; 0x28
  403d94:	e6f6      	b.n	403b84 <_dtoa_r+0x744>
  403d96:	2301      	movs	r3, #1
  403d98:	930b      	str	r3, [sp, #44]	; 0x2c
  403d9a:	e7f3      	b.n	403d84 <_dtoa_r+0x944>
  403d9c:	f1ba 0f00 	cmp.w	sl, #0
  403da0:	f47f ada8 	bne.w	4038f4 <_dtoa_r+0x4b4>
  403da4:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403da8:	2b00      	cmp	r3, #0
  403daa:	f47f adba 	bne.w	403922 <_dtoa_r+0x4e2>
  403dae:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403db2:	0d3f      	lsrs	r7, r7, #20
  403db4:	053f      	lsls	r7, r7, #20
  403db6:	2f00      	cmp	r7, #0
  403db8:	f000 820d 	beq.w	4041d6 <_dtoa_r+0xd96>
  403dbc:	9b08      	ldr	r3, [sp, #32]
  403dbe:	3301      	adds	r3, #1
  403dc0:	9308      	str	r3, [sp, #32]
  403dc2:	9b06      	ldr	r3, [sp, #24]
  403dc4:	3301      	adds	r3, #1
  403dc6:	9306      	str	r3, [sp, #24]
  403dc8:	2301      	movs	r3, #1
  403dca:	930c      	str	r3, [sp, #48]	; 0x30
  403dcc:	e5ab      	b.n	403926 <_dtoa_r+0x4e6>
  403dce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403dd0:	2b00      	cmp	r3, #0
  403dd2:	f73f ac42 	bgt.w	40365a <_dtoa_r+0x21a>
  403dd6:	f040 8221 	bne.w	40421c <_dtoa_r+0xddc>
  403dda:	2200      	movs	r2, #0
  403ddc:	4b38      	ldr	r3, [pc, #224]	; (403ec0 <_dtoa_r+0xa80>)
  403dde:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403de2:	f001 ffe7 	bl	405db4 <__aeabi_dmul>
  403de6:	4652      	mov	r2, sl
  403de8:	465b      	mov	r3, fp
  403dea:	f002 fa69 	bl	4062c0 <__aeabi_dcmpge>
  403dee:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403df2:	4646      	mov	r6, r8
  403df4:	2800      	cmp	r0, #0
  403df6:	d041      	beq.n	403e7c <_dtoa_r+0xa3c>
  403df8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403dfa:	9d04      	ldr	r5, [sp, #16]
  403dfc:	43db      	mvns	r3, r3
  403dfe:	9302      	str	r3, [sp, #8]
  403e00:	4641      	mov	r1, r8
  403e02:	4620      	mov	r0, r4
  403e04:	f000 fe40 	bl	404a88 <_Bfree>
  403e08:	2e00      	cmp	r6, #0
  403e0a:	f43f acdd 	beq.w	4037c8 <_dtoa_r+0x388>
  403e0e:	e6a7      	b.n	403b60 <_dtoa_r+0x720>
  403e10:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403e12:	4649      	mov	r1, r9
  403e14:	4620      	mov	r0, r4
  403e16:	f000 ff6d 	bl	404cf4 <__pow5mult>
  403e1a:	4681      	mov	r9, r0
  403e1c:	e558      	b.n	4038d0 <_dtoa_r+0x490>
  403e1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403e20:	2a00      	cmp	r2, #0
  403e22:	f000 8187 	beq.w	404134 <_dtoa_r+0xcf4>
  403e26:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403e2a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403e2c:	9d08      	ldr	r5, [sp, #32]
  403e2e:	e4f2      	b.n	403816 <_dtoa_r+0x3d6>
  403e30:	f1ba 0f00 	cmp.w	sl, #0
  403e34:	f47f ad75 	bne.w	403922 <_dtoa_r+0x4e2>
  403e38:	e7b4      	b.n	403da4 <_dtoa_r+0x964>
  403e3a:	f000 fe2f 	bl	404a9c <__multadd>
  403e3e:	4647      	mov	r7, r8
  403e40:	4606      	mov	r6, r0
  403e42:	4683      	mov	fp, r0
  403e44:	e5be      	b.n	4039c4 <_dtoa_r+0x584>
  403e46:	4601      	mov	r1, r0
  403e48:	4620      	mov	r0, r4
  403e4a:	9306      	str	r3, [sp, #24]
  403e4c:	f000 fe1c 	bl	404a88 <_Bfree>
  403e50:	2201      	movs	r2, #1
  403e52:	9b06      	ldr	r3, [sp, #24]
  403e54:	e5e0      	b.n	403a18 <_dtoa_r+0x5d8>
  403e56:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403e58:	2b02      	cmp	r3, #2
  403e5a:	f77f ad96 	ble.w	40398a <_dtoa_r+0x54a>
  403e5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e60:	2b00      	cmp	r3, #0
  403e62:	d1c9      	bne.n	403df8 <_dtoa_r+0x9b8>
  403e64:	4641      	mov	r1, r8
  403e66:	2205      	movs	r2, #5
  403e68:	4620      	mov	r0, r4
  403e6a:	f000 fe17 	bl	404a9c <__multadd>
  403e6e:	4601      	mov	r1, r0
  403e70:	4680      	mov	r8, r0
  403e72:	4648      	mov	r0, r9
  403e74:	f000 ffe0 	bl	404e38 <__mcmp>
  403e78:	2800      	cmp	r0, #0
  403e7a:	ddbd      	ble.n	403df8 <_dtoa_r+0x9b8>
  403e7c:	9a02      	ldr	r2, [sp, #8]
  403e7e:	9904      	ldr	r1, [sp, #16]
  403e80:	2331      	movs	r3, #49	; 0x31
  403e82:	3201      	adds	r2, #1
  403e84:	9202      	str	r2, [sp, #8]
  403e86:	700b      	strb	r3, [r1, #0]
  403e88:	1c4d      	adds	r5, r1, #1
  403e8a:	e7b9      	b.n	403e00 <_dtoa_r+0x9c0>
  403e8c:	9a02      	ldr	r2, [sp, #8]
  403e8e:	3201      	adds	r2, #1
  403e90:	9202      	str	r2, [sp, #8]
  403e92:	9a04      	ldr	r2, [sp, #16]
  403e94:	2331      	movs	r3, #49	; 0x31
  403e96:	7013      	strb	r3, [r2, #0]
  403e98:	e652      	b.n	403b40 <_dtoa_r+0x700>
  403e9a:	2301      	movs	r3, #1
  403e9c:	930b      	str	r3, [sp, #44]	; 0x2c
  403e9e:	e666      	b.n	403b6e <_dtoa_r+0x72e>
  403ea0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403ea4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403ea6:	e48f      	b.n	4037c8 <_dtoa_r+0x388>
  403ea8:	004077d8 	.word	0x004077d8
  403eac:	004077b0 	.word	0x004077b0
  403eb0:	3ff00000 	.word	0x3ff00000
  403eb4:	401c0000 	.word	0x401c0000
  403eb8:	3fe00000 	.word	0x3fe00000
  403ebc:	40240000 	.word	0x40240000
  403ec0:	40140000 	.word	0x40140000
  403ec4:	4650      	mov	r0, sl
  403ec6:	f001 ff0f 	bl	405ce8 <__aeabi_i2d>
  403eca:	463a      	mov	r2, r7
  403ecc:	4643      	mov	r3, r8
  403ece:	f001 ff71 	bl	405db4 <__aeabi_dmul>
  403ed2:	2200      	movs	r2, #0
  403ed4:	4bc1      	ldr	r3, [pc, #772]	; (4041dc <_dtoa_r+0xd9c>)
  403ed6:	f001 fdbb 	bl	405a50 <__adddf3>
  403eda:	4605      	mov	r5, r0
  403edc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403ee0:	4641      	mov	r1, r8
  403ee2:	2200      	movs	r2, #0
  403ee4:	4bbe      	ldr	r3, [pc, #760]	; (4041e0 <_dtoa_r+0xda0>)
  403ee6:	4638      	mov	r0, r7
  403ee8:	f001 fdb0 	bl	405a4c <__aeabi_dsub>
  403eec:	462a      	mov	r2, r5
  403eee:	4633      	mov	r3, r6
  403ef0:	4682      	mov	sl, r0
  403ef2:	468b      	mov	fp, r1
  403ef4:	f002 f9ee 	bl	4062d4 <__aeabi_dcmpgt>
  403ef8:	4680      	mov	r8, r0
  403efa:	2800      	cmp	r0, #0
  403efc:	f040 8110 	bne.w	404120 <_dtoa_r+0xce0>
  403f00:	462a      	mov	r2, r5
  403f02:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403f06:	4650      	mov	r0, sl
  403f08:	4659      	mov	r1, fp
  403f0a:	f002 f9c5 	bl	406298 <__aeabi_dcmplt>
  403f0e:	b118      	cbz	r0, 403f18 <_dtoa_r+0xad8>
  403f10:	4646      	mov	r6, r8
  403f12:	e771      	b.n	403df8 <_dtoa_r+0x9b8>
  403f14:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403f18:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403f1c:	f7ff bb8a 	b.w	403634 <_dtoa_r+0x1f4>
  403f20:	9804      	ldr	r0, [sp, #16]
  403f22:	f7ff babb 	b.w	40349c <_dtoa_r+0x5c>
  403f26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403f28:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403f2a:	970c      	str	r7, [sp, #48]	; 0x30
  403f2c:	1afb      	subs	r3, r7, r3
  403f2e:	441a      	add	r2, r3
  403f30:	920d      	str	r2, [sp, #52]	; 0x34
  403f32:	2700      	movs	r7, #0
  403f34:	e469      	b.n	40380a <_dtoa_r+0x3ca>
  403f36:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403f3a:	f04f 0a02 	mov.w	sl, #2
  403f3e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403f42:	e657      	b.n	403bf4 <_dtoa_r+0x7b4>
  403f44:	2100      	movs	r1, #0
  403f46:	2301      	movs	r3, #1
  403f48:	6461      	str	r1, [r4, #68]	; 0x44
  403f4a:	4620      	mov	r0, r4
  403f4c:	9325      	str	r3, [sp, #148]	; 0x94
  403f4e:	f000 fd75 	bl	404a3c <_Balloc>
  403f52:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403f54:	9004      	str	r0, [sp, #16]
  403f56:	6420      	str	r0, [r4, #64]	; 0x40
  403f58:	930a      	str	r3, [sp, #40]	; 0x28
  403f5a:	930f      	str	r3, [sp, #60]	; 0x3c
  403f5c:	e629      	b.n	403bb2 <_dtoa_r+0x772>
  403f5e:	2a00      	cmp	r2, #0
  403f60:	46d0      	mov	r8, sl
  403f62:	f8cd b018 	str.w	fp, [sp, #24]
  403f66:	469a      	mov	sl, r3
  403f68:	dd11      	ble.n	403f8e <_dtoa_r+0xb4e>
  403f6a:	4649      	mov	r1, r9
  403f6c:	2201      	movs	r2, #1
  403f6e:	4620      	mov	r0, r4
  403f70:	f000 ff10 	bl	404d94 <__lshift>
  403f74:	4641      	mov	r1, r8
  403f76:	4681      	mov	r9, r0
  403f78:	f000 ff5e 	bl	404e38 <__mcmp>
  403f7c:	2800      	cmp	r0, #0
  403f7e:	f340 8146 	ble.w	40420e <_dtoa_r+0xdce>
  403f82:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403f86:	f000 8106 	beq.w	404196 <_dtoa_r+0xd56>
  403f8a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403f8e:	46b3      	mov	fp, r6
  403f90:	f887 a000 	strb.w	sl, [r7]
  403f94:	1c7d      	adds	r5, r7, #1
  403f96:	9e06      	ldr	r6, [sp, #24]
  403f98:	e5d2      	b.n	403b40 <_dtoa_r+0x700>
  403f9a:	d104      	bne.n	403fa6 <_dtoa_r+0xb66>
  403f9c:	f01a 0f01 	tst.w	sl, #1
  403fa0:	d001      	beq.n	403fa6 <_dtoa_r+0xb66>
  403fa2:	e5bd      	b.n	403b20 <_dtoa_r+0x6e0>
  403fa4:	4615      	mov	r5, r2
  403fa6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403faa:	2b30      	cmp	r3, #48	; 0x30
  403fac:	f105 32ff 	add.w	r2, r5, #4294967295
  403fb0:	d0f8      	beq.n	403fa4 <_dtoa_r+0xb64>
  403fb2:	e5c5      	b.n	403b40 <_dtoa_r+0x700>
  403fb4:	9904      	ldr	r1, [sp, #16]
  403fb6:	2230      	movs	r2, #48	; 0x30
  403fb8:	700a      	strb	r2, [r1, #0]
  403fba:	9a02      	ldr	r2, [sp, #8]
  403fbc:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403fc0:	3201      	adds	r2, #1
  403fc2:	9202      	str	r2, [sp, #8]
  403fc4:	f7ff bbfc 	b.w	4037c0 <_dtoa_r+0x380>
  403fc8:	f000 80bb 	beq.w	404142 <_dtoa_r+0xd02>
  403fcc:	9b02      	ldr	r3, [sp, #8]
  403fce:	425d      	negs	r5, r3
  403fd0:	4b84      	ldr	r3, [pc, #528]	; (4041e4 <_dtoa_r+0xda4>)
  403fd2:	f005 020f 	and.w	r2, r5, #15
  403fd6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403fda:	e9d3 2300 	ldrd	r2, r3, [r3]
  403fde:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403fe2:	f001 fee7 	bl	405db4 <__aeabi_dmul>
  403fe6:	112d      	asrs	r5, r5, #4
  403fe8:	4607      	mov	r7, r0
  403fea:	4688      	mov	r8, r1
  403fec:	f000 812c 	beq.w	404248 <_dtoa_r+0xe08>
  403ff0:	4e7d      	ldr	r6, [pc, #500]	; (4041e8 <_dtoa_r+0xda8>)
  403ff2:	f04f 0a02 	mov.w	sl, #2
  403ff6:	07eb      	lsls	r3, r5, #31
  403ff8:	d509      	bpl.n	40400e <_dtoa_r+0xbce>
  403ffa:	4638      	mov	r0, r7
  403ffc:	4641      	mov	r1, r8
  403ffe:	e9d6 2300 	ldrd	r2, r3, [r6]
  404002:	f001 fed7 	bl	405db4 <__aeabi_dmul>
  404006:	f10a 0a01 	add.w	sl, sl, #1
  40400a:	4607      	mov	r7, r0
  40400c:	4688      	mov	r8, r1
  40400e:	106d      	asrs	r5, r5, #1
  404010:	f106 0608 	add.w	r6, r6, #8
  404014:	d1ef      	bne.n	403ff6 <_dtoa_r+0xbb6>
  404016:	e608      	b.n	403c2a <_dtoa_r+0x7ea>
  404018:	6871      	ldr	r1, [r6, #4]
  40401a:	4620      	mov	r0, r4
  40401c:	f000 fd0e 	bl	404a3c <_Balloc>
  404020:	6933      	ldr	r3, [r6, #16]
  404022:	3302      	adds	r3, #2
  404024:	009a      	lsls	r2, r3, #2
  404026:	4605      	mov	r5, r0
  404028:	f106 010c 	add.w	r1, r6, #12
  40402c:	300c      	adds	r0, #12
  40402e:	f000 fc5f 	bl	4048f0 <memcpy>
  404032:	4629      	mov	r1, r5
  404034:	2201      	movs	r2, #1
  404036:	4620      	mov	r0, r4
  404038:	f000 feac 	bl	404d94 <__lshift>
  40403c:	9006      	str	r0, [sp, #24]
  40403e:	e4b5      	b.n	4039ac <_dtoa_r+0x56c>
  404040:	2b39      	cmp	r3, #57	; 0x39
  404042:	f8cd b018 	str.w	fp, [sp, #24]
  404046:	46d0      	mov	r8, sl
  404048:	f000 80a5 	beq.w	404196 <_dtoa_r+0xd56>
  40404c:	f103 0a01 	add.w	sl, r3, #1
  404050:	46b3      	mov	fp, r6
  404052:	f887 a000 	strb.w	sl, [r7]
  404056:	1c7d      	adds	r5, r7, #1
  404058:	9e06      	ldr	r6, [sp, #24]
  40405a:	e571      	b.n	403b40 <_dtoa_r+0x700>
  40405c:	465a      	mov	r2, fp
  40405e:	46d0      	mov	r8, sl
  404060:	46b3      	mov	fp, r6
  404062:	469a      	mov	sl, r3
  404064:	4616      	mov	r6, r2
  404066:	e54f      	b.n	403b08 <_dtoa_r+0x6c8>
  404068:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40406a:	495e      	ldr	r1, [pc, #376]	; (4041e4 <_dtoa_r+0xda4>)
  40406c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404070:	462a      	mov	r2, r5
  404072:	4633      	mov	r3, r6
  404074:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404078:	f001 fe9c 	bl	405db4 <__aeabi_dmul>
  40407c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404080:	4638      	mov	r0, r7
  404082:	4641      	mov	r1, r8
  404084:	f002 f946 	bl	406314 <__aeabi_d2iz>
  404088:	4605      	mov	r5, r0
  40408a:	f001 fe2d 	bl	405ce8 <__aeabi_i2d>
  40408e:	460b      	mov	r3, r1
  404090:	4602      	mov	r2, r0
  404092:	4641      	mov	r1, r8
  404094:	4638      	mov	r0, r7
  404096:	f001 fcd9 	bl	405a4c <__aeabi_dsub>
  40409a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40409c:	460f      	mov	r7, r1
  40409e:	9904      	ldr	r1, [sp, #16]
  4040a0:	3530      	adds	r5, #48	; 0x30
  4040a2:	2b01      	cmp	r3, #1
  4040a4:	700d      	strb	r5, [r1, #0]
  4040a6:	4606      	mov	r6, r0
  4040a8:	f101 0501 	add.w	r5, r1, #1
  4040ac:	d026      	beq.n	4040fc <_dtoa_r+0xcbc>
  4040ae:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4040b0:	9a04      	ldr	r2, [sp, #16]
  4040b2:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4041f0 <_dtoa_r+0xdb0>
  4040b6:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4040ba:	4413      	add	r3, r2
  4040bc:	f04f 0a00 	mov.w	sl, #0
  4040c0:	4699      	mov	r9, r3
  4040c2:	4652      	mov	r2, sl
  4040c4:	465b      	mov	r3, fp
  4040c6:	4630      	mov	r0, r6
  4040c8:	4639      	mov	r1, r7
  4040ca:	f001 fe73 	bl	405db4 <__aeabi_dmul>
  4040ce:	460f      	mov	r7, r1
  4040d0:	4606      	mov	r6, r0
  4040d2:	f002 f91f 	bl	406314 <__aeabi_d2iz>
  4040d6:	4680      	mov	r8, r0
  4040d8:	f001 fe06 	bl	405ce8 <__aeabi_i2d>
  4040dc:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4040e0:	4602      	mov	r2, r0
  4040e2:	460b      	mov	r3, r1
  4040e4:	4630      	mov	r0, r6
  4040e6:	4639      	mov	r1, r7
  4040e8:	f001 fcb0 	bl	405a4c <__aeabi_dsub>
  4040ec:	f805 8b01 	strb.w	r8, [r5], #1
  4040f0:	454d      	cmp	r5, r9
  4040f2:	4606      	mov	r6, r0
  4040f4:	460f      	mov	r7, r1
  4040f6:	d1e4      	bne.n	4040c2 <_dtoa_r+0xc82>
  4040f8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4040fc:	4b3b      	ldr	r3, [pc, #236]	; (4041ec <_dtoa_r+0xdac>)
  4040fe:	2200      	movs	r2, #0
  404100:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404104:	f001 fca4 	bl	405a50 <__adddf3>
  404108:	4632      	mov	r2, r6
  40410a:	463b      	mov	r3, r7
  40410c:	f002 f8c4 	bl	406298 <__aeabi_dcmplt>
  404110:	2800      	cmp	r0, #0
  404112:	d046      	beq.n	4041a2 <_dtoa_r+0xd62>
  404114:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404116:	9302      	str	r3, [sp, #8]
  404118:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40411c:	f7ff bb43 	b.w	4037a6 <_dtoa_r+0x366>
  404120:	f04f 0800 	mov.w	r8, #0
  404124:	4646      	mov	r6, r8
  404126:	e6a9      	b.n	403e7c <_dtoa_r+0xa3c>
  404128:	9b08      	ldr	r3, [sp, #32]
  40412a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40412c:	1a9d      	subs	r5, r3, r2
  40412e:	2300      	movs	r3, #0
  404130:	f7ff bb71 	b.w	403816 <_dtoa_r+0x3d6>
  404134:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404136:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404138:	9d08      	ldr	r5, [sp, #32]
  40413a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40413e:	f7ff bb6a 	b.w	403816 <_dtoa_r+0x3d6>
  404142:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404146:	f04f 0a02 	mov.w	sl, #2
  40414a:	e56e      	b.n	403c2a <_dtoa_r+0x7ea>
  40414c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40414e:	2b00      	cmp	r3, #0
  404150:	f43f aeb8 	beq.w	403ec4 <_dtoa_r+0xa84>
  404154:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404156:	2b00      	cmp	r3, #0
  404158:	f77f aede 	ble.w	403f18 <_dtoa_r+0xad8>
  40415c:	2200      	movs	r2, #0
  40415e:	4b24      	ldr	r3, [pc, #144]	; (4041f0 <_dtoa_r+0xdb0>)
  404160:	4638      	mov	r0, r7
  404162:	4641      	mov	r1, r8
  404164:	f001 fe26 	bl	405db4 <__aeabi_dmul>
  404168:	4607      	mov	r7, r0
  40416a:	4688      	mov	r8, r1
  40416c:	f10a 0001 	add.w	r0, sl, #1
  404170:	f001 fdba 	bl	405ce8 <__aeabi_i2d>
  404174:	463a      	mov	r2, r7
  404176:	4643      	mov	r3, r8
  404178:	f001 fe1c 	bl	405db4 <__aeabi_dmul>
  40417c:	2200      	movs	r2, #0
  40417e:	4b17      	ldr	r3, [pc, #92]	; (4041dc <_dtoa_r+0xd9c>)
  404180:	f001 fc66 	bl	405a50 <__adddf3>
  404184:	9a02      	ldr	r2, [sp, #8]
  404186:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404188:	9312      	str	r3, [sp, #72]	; 0x48
  40418a:	3a01      	subs	r2, #1
  40418c:	4605      	mov	r5, r0
  40418e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404192:	9215      	str	r2, [sp, #84]	; 0x54
  404194:	e56a      	b.n	403c6c <_dtoa_r+0x82c>
  404196:	2239      	movs	r2, #57	; 0x39
  404198:	46b3      	mov	fp, r6
  40419a:	703a      	strb	r2, [r7, #0]
  40419c:	9e06      	ldr	r6, [sp, #24]
  40419e:	1c7d      	adds	r5, r7, #1
  4041a0:	e4c0      	b.n	403b24 <_dtoa_r+0x6e4>
  4041a2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4041a6:	2000      	movs	r0, #0
  4041a8:	4910      	ldr	r1, [pc, #64]	; (4041ec <_dtoa_r+0xdac>)
  4041aa:	f001 fc4f 	bl	405a4c <__aeabi_dsub>
  4041ae:	4632      	mov	r2, r6
  4041b0:	463b      	mov	r3, r7
  4041b2:	f002 f88f 	bl	4062d4 <__aeabi_dcmpgt>
  4041b6:	b908      	cbnz	r0, 4041bc <_dtoa_r+0xd7c>
  4041b8:	e6ae      	b.n	403f18 <_dtoa_r+0xad8>
  4041ba:	4615      	mov	r5, r2
  4041bc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4041c0:	2b30      	cmp	r3, #48	; 0x30
  4041c2:	f105 32ff 	add.w	r2, r5, #4294967295
  4041c6:	d0f8      	beq.n	4041ba <_dtoa_r+0xd7a>
  4041c8:	e5d7      	b.n	403d7a <_dtoa_r+0x93a>
  4041ca:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4041ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4041d0:	9302      	str	r3, [sp, #8]
  4041d2:	f7ff bae8 	b.w	4037a6 <_dtoa_r+0x366>
  4041d6:	970c      	str	r7, [sp, #48]	; 0x30
  4041d8:	f7ff bba5 	b.w	403926 <_dtoa_r+0x4e6>
  4041dc:	401c0000 	.word	0x401c0000
  4041e0:	40140000 	.word	0x40140000
  4041e4:	004077d8 	.word	0x004077d8
  4041e8:	004077b0 	.word	0x004077b0
  4041ec:	3fe00000 	.word	0x3fe00000
  4041f0:	40240000 	.word	0x40240000
  4041f4:	2b39      	cmp	r3, #57	; 0x39
  4041f6:	f8cd b018 	str.w	fp, [sp, #24]
  4041fa:	46d0      	mov	r8, sl
  4041fc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404200:	469a      	mov	sl, r3
  404202:	d0c8      	beq.n	404196 <_dtoa_r+0xd56>
  404204:	f1bb 0f00 	cmp.w	fp, #0
  404208:	f73f aebf 	bgt.w	403f8a <_dtoa_r+0xb4a>
  40420c:	e6bf      	b.n	403f8e <_dtoa_r+0xb4e>
  40420e:	f47f aebe 	bne.w	403f8e <_dtoa_r+0xb4e>
  404212:	f01a 0f01 	tst.w	sl, #1
  404216:	f43f aeba 	beq.w	403f8e <_dtoa_r+0xb4e>
  40421a:	e6b2      	b.n	403f82 <_dtoa_r+0xb42>
  40421c:	f04f 0800 	mov.w	r8, #0
  404220:	4646      	mov	r6, r8
  404222:	e5e9      	b.n	403df8 <_dtoa_r+0x9b8>
  404224:	4631      	mov	r1, r6
  404226:	2300      	movs	r3, #0
  404228:	220a      	movs	r2, #10
  40422a:	4620      	mov	r0, r4
  40422c:	f000 fc36 	bl	404a9c <__multadd>
  404230:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404232:	2b00      	cmp	r3, #0
  404234:	4606      	mov	r6, r0
  404236:	dd0a      	ble.n	40424e <_dtoa_r+0xe0e>
  404238:	930a      	str	r3, [sp, #40]	; 0x28
  40423a:	f7ff bbaa 	b.w	403992 <_dtoa_r+0x552>
  40423e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404240:	2b02      	cmp	r3, #2
  404242:	dc23      	bgt.n	40428c <_dtoa_r+0xe4c>
  404244:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404246:	e43b      	b.n	403ac0 <_dtoa_r+0x680>
  404248:	f04f 0a02 	mov.w	sl, #2
  40424c:	e4ed      	b.n	403c2a <_dtoa_r+0x7ea>
  40424e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404250:	2b02      	cmp	r3, #2
  404252:	dc1b      	bgt.n	40428c <_dtoa_r+0xe4c>
  404254:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404256:	e7ef      	b.n	404238 <_dtoa_r+0xdf8>
  404258:	2500      	movs	r5, #0
  40425a:	6465      	str	r5, [r4, #68]	; 0x44
  40425c:	4629      	mov	r1, r5
  40425e:	4620      	mov	r0, r4
  404260:	f000 fbec 	bl	404a3c <_Balloc>
  404264:	f04f 33ff 	mov.w	r3, #4294967295
  404268:	930a      	str	r3, [sp, #40]	; 0x28
  40426a:	930f      	str	r3, [sp, #60]	; 0x3c
  40426c:	2301      	movs	r3, #1
  40426e:	9004      	str	r0, [sp, #16]
  404270:	9525      	str	r5, [sp, #148]	; 0x94
  404272:	6420      	str	r0, [r4, #64]	; 0x40
  404274:	930b      	str	r3, [sp, #44]	; 0x2c
  404276:	f7ff b9dd 	b.w	403634 <_dtoa_r+0x1f4>
  40427a:	2501      	movs	r5, #1
  40427c:	f7ff b9a5 	b.w	4035ca <_dtoa_r+0x18a>
  404280:	f43f ab69 	beq.w	403956 <_dtoa_r+0x516>
  404284:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404288:	f7ff bbf9 	b.w	403a7e <_dtoa_r+0x63e>
  40428c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40428e:	930a      	str	r3, [sp, #40]	; 0x28
  404290:	e5e5      	b.n	403e5e <_dtoa_r+0xa1e>
  404292:	bf00      	nop

00404294 <__libc_fini_array>:
  404294:	b538      	push	{r3, r4, r5, lr}
  404296:	4c0a      	ldr	r4, [pc, #40]	; (4042c0 <__libc_fini_array+0x2c>)
  404298:	4d0a      	ldr	r5, [pc, #40]	; (4042c4 <__libc_fini_array+0x30>)
  40429a:	1b64      	subs	r4, r4, r5
  40429c:	10a4      	asrs	r4, r4, #2
  40429e:	d00a      	beq.n	4042b6 <__libc_fini_array+0x22>
  4042a0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4042a4:	3b01      	subs	r3, #1
  4042a6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4042aa:	3c01      	subs	r4, #1
  4042ac:	f855 3904 	ldr.w	r3, [r5], #-4
  4042b0:	4798      	blx	r3
  4042b2:	2c00      	cmp	r4, #0
  4042b4:	d1f9      	bne.n	4042aa <__libc_fini_array+0x16>
  4042b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4042ba:	f003 bb8b 	b.w	4079d4 <_fini>
  4042be:	bf00      	nop
  4042c0:	004079e4 	.word	0x004079e4
  4042c4:	004079e0 	.word	0x004079e0

004042c8 <_localeconv_r>:
  4042c8:	4a04      	ldr	r2, [pc, #16]	; (4042dc <_localeconv_r+0x14>)
  4042ca:	4b05      	ldr	r3, [pc, #20]	; (4042e0 <_localeconv_r+0x18>)
  4042cc:	6812      	ldr	r2, [r2, #0]
  4042ce:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4042d0:	2800      	cmp	r0, #0
  4042d2:	bf08      	it	eq
  4042d4:	4618      	moveq	r0, r3
  4042d6:	30f0      	adds	r0, #240	; 0xf0
  4042d8:	4770      	bx	lr
  4042da:	bf00      	nop
  4042dc:	20400028 	.word	0x20400028
  4042e0:	2040086c 	.word	0x2040086c

004042e4 <__retarget_lock_acquire_recursive>:
  4042e4:	4770      	bx	lr
  4042e6:	bf00      	nop

004042e8 <__retarget_lock_release_recursive>:
  4042e8:	4770      	bx	lr
  4042ea:	bf00      	nop

004042ec <_malloc_r>:
  4042ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4042f0:	f101 060b 	add.w	r6, r1, #11
  4042f4:	2e16      	cmp	r6, #22
  4042f6:	b083      	sub	sp, #12
  4042f8:	4605      	mov	r5, r0
  4042fa:	f240 809e 	bls.w	40443a <_malloc_r+0x14e>
  4042fe:	f036 0607 	bics.w	r6, r6, #7
  404302:	f100 80bd 	bmi.w	404480 <_malloc_r+0x194>
  404306:	42b1      	cmp	r1, r6
  404308:	f200 80ba 	bhi.w	404480 <_malloc_r+0x194>
  40430c:	f000 fb8a 	bl	404a24 <__malloc_lock>
  404310:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404314:	f0c0 8293 	bcc.w	40483e <_malloc_r+0x552>
  404318:	0a73      	lsrs	r3, r6, #9
  40431a:	f000 80b8 	beq.w	40448e <_malloc_r+0x1a2>
  40431e:	2b04      	cmp	r3, #4
  404320:	f200 8179 	bhi.w	404616 <_malloc_r+0x32a>
  404324:	09b3      	lsrs	r3, r6, #6
  404326:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40432a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40432e:	00c3      	lsls	r3, r0, #3
  404330:	4fbf      	ldr	r7, [pc, #764]	; (404630 <_malloc_r+0x344>)
  404332:	443b      	add	r3, r7
  404334:	f1a3 0108 	sub.w	r1, r3, #8
  404338:	685c      	ldr	r4, [r3, #4]
  40433a:	42a1      	cmp	r1, r4
  40433c:	d106      	bne.n	40434c <_malloc_r+0x60>
  40433e:	e00c      	b.n	40435a <_malloc_r+0x6e>
  404340:	2a00      	cmp	r2, #0
  404342:	f280 80aa 	bge.w	40449a <_malloc_r+0x1ae>
  404346:	68e4      	ldr	r4, [r4, #12]
  404348:	42a1      	cmp	r1, r4
  40434a:	d006      	beq.n	40435a <_malloc_r+0x6e>
  40434c:	6863      	ldr	r3, [r4, #4]
  40434e:	f023 0303 	bic.w	r3, r3, #3
  404352:	1b9a      	subs	r2, r3, r6
  404354:	2a0f      	cmp	r2, #15
  404356:	ddf3      	ble.n	404340 <_malloc_r+0x54>
  404358:	4670      	mov	r0, lr
  40435a:	693c      	ldr	r4, [r7, #16]
  40435c:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404644 <_malloc_r+0x358>
  404360:	4574      	cmp	r4, lr
  404362:	f000 81ab 	beq.w	4046bc <_malloc_r+0x3d0>
  404366:	6863      	ldr	r3, [r4, #4]
  404368:	f023 0303 	bic.w	r3, r3, #3
  40436c:	1b9a      	subs	r2, r3, r6
  40436e:	2a0f      	cmp	r2, #15
  404370:	f300 8190 	bgt.w	404694 <_malloc_r+0x3a8>
  404374:	2a00      	cmp	r2, #0
  404376:	f8c7 e014 	str.w	lr, [r7, #20]
  40437a:	f8c7 e010 	str.w	lr, [r7, #16]
  40437e:	f280 809d 	bge.w	4044bc <_malloc_r+0x1d0>
  404382:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404386:	f080 8161 	bcs.w	40464c <_malloc_r+0x360>
  40438a:	08db      	lsrs	r3, r3, #3
  40438c:	f103 0c01 	add.w	ip, r3, #1
  404390:	1099      	asrs	r1, r3, #2
  404392:	687a      	ldr	r2, [r7, #4]
  404394:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404398:	f8c4 8008 	str.w	r8, [r4, #8]
  40439c:	2301      	movs	r3, #1
  40439e:	408b      	lsls	r3, r1
  4043a0:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4043a4:	4313      	orrs	r3, r2
  4043a6:	3908      	subs	r1, #8
  4043a8:	60e1      	str	r1, [r4, #12]
  4043aa:	607b      	str	r3, [r7, #4]
  4043ac:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4043b0:	f8c8 400c 	str.w	r4, [r8, #12]
  4043b4:	1082      	asrs	r2, r0, #2
  4043b6:	2401      	movs	r4, #1
  4043b8:	4094      	lsls	r4, r2
  4043ba:	429c      	cmp	r4, r3
  4043bc:	f200 808b 	bhi.w	4044d6 <_malloc_r+0x1ea>
  4043c0:	421c      	tst	r4, r3
  4043c2:	d106      	bne.n	4043d2 <_malloc_r+0xe6>
  4043c4:	f020 0003 	bic.w	r0, r0, #3
  4043c8:	0064      	lsls	r4, r4, #1
  4043ca:	421c      	tst	r4, r3
  4043cc:	f100 0004 	add.w	r0, r0, #4
  4043d0:	d0fa      	beq.n	4043c8 <_malloc_r+0xdc>
  4043d2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4043d6:	46cc      	mov	ip, r9
  4043d8:	4680      	mov	r8, r0
  4043da:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4043de:	459c      	cmp	ip, r3
  4043e0:	d107      	bne.n	4043f2 <_malloc_r+0x106>
  4043e2:	e16d      	b.n	4046c0 <_malloc_r+0x3d4>
  4043e4:	2a00      	cmp	r2, #0
  4043e6:	f280 817b 	bge.w	4046e0 <_malloc_r+0x3f4>
  4043ea:	68db      	ldr	r3, [r3, #12]
  4043ec:	459c      	cmp	ip, r3
  4043ee:	f000 8167 	beq.w	4046c0 <_malloc_r+0x3d4>
  4043f2:	6859      	ldr	r1, [r3, #4]
  4043f4:	f021 0103 	bic.w	r1, r1, #3
  4043f8:	1b8a      	subs	r2, r1, r6
  4043fa:	2a0f      	cmp	r2, #15
  4043fc:	ddf2      	ble.n	4043e4 <_malloc_r+0xf8>
  4043fe:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404402:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404406:	9300      	str	r3, [sp, #0]
  404408:	199c      	adds	r4, r3, r6
  40440a:	4628      	mov	r0, r5
  40440c:	f046 0601 	orr.w	r6, r6, #1
  404410:	f042 0501 	orr.w	r5, r2, #1
  404414:	605e      	str	r6, [r3, #4]
  404416:	f8c8 c00c 	str.w	ip, [r8, #12]
  40441a:	f8cc 8008 	str.w	r8, [ip, #8]
  40441e:	617c      	str	r4, [r7, #20]
  404420:	613c      	str	r4, [r7, #16]
  404422:	f8c4 e00c 	str.w	lr, [r4, #12]
  404426:	f8c4 e008 	str.w	lr, [r4, #8]
  40442a:	6065      	str	r5, [r4, #4]
  40442c:	505a      	str	r2, [r3, r1]
  40442e:	f000 faff 	bl	404a30 <__malloc_unlock>
  404432:	9b00      	ldr	r3, [sp, #0]
  404434:	f103 0408 	add.w	r4, r3, #8
  404438:	e01e      	b.n	404478 <_malloc_r+0x18c>
  40443a:	2910      	cmp	r1, #16
  40443c:	d820      	bhi.n	404480 <_malloc_r+0x194>
  40443e:	f000 faf1 	bl	404a24 <__malloc_lock>
  404442:	2610      	movs	r6, #16
  404444:	2318      	movs	r3, #24
  404446:	2002      	movs	r0, #2
  404448:	4f79      	ldr	r7, [pc, #484]	; (404630 <_malloc_r+0x344>)
  40444a:	443b      	add	r3, r7
  40444c:	f1a3 0208 	sub.w	r2, r3, #8
  404450:	685c      	ldr	r4, [r3, #4]
  404452:	4294      	cmp	r4, r2
  404454:	f000 813d 	beq.w	4046d2 <_malloc_r+0x3e6>
  404458:	6863      	ldr	r3, [r4, #4]
  40445a:	68e1      	ldr	r1, [r4, #12]
  40445c:	68a6      	ldr	r6, [r4, #8]
  40445e:	f023 0303 	bic.w	r3, r3, #3
  404462:	4423      	add	r3, r4
  404464:	4628      	mov	r0, r5
  404466:	685a      	ldr	r2, [r3, #4]
  404468:	60f1      	str	r1, [r6, #12]
  40446a:	f042 0201 	orr.w	r2, r2, #1
  40446e:	608e      	str	r6, [r1, #8]
  404470:	605a      	str	r2, [r3, #4]
  404472:	f000 fadd 	bl	404a30 <__malloc_unlock>
  404476:	3408      	adds	r4, #8
  404478:	4620      	mov	r0, r4
  40447a:	b003      	add	sp, #12
  40447c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404480:	2400      	movs	r4, #0
  404482:	230c      	movs	r3, #12
  404484:	4620      	mov	r0, r4
  404486:	602b      	str	r3, [r5, #0]
  404488:	b003      	add	sp, #12
  40448a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40448e:	2040      	movs	r0, #64	; 0x40
  404490:	f44f 7300 	mov.w	r3, #512	; 0x200
  404494:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404498:	e74a      	b.n	404330 <_malloc_r+0x44>
  40449a:	4423      	add	r3, r4
  40449c:	68e1      	ldr	r1, [r4, #12]
  40449e:	685a      	ldr	r2, [r3, #4]
  4044a0:	68a6      	ldr	r6, [r4, #8]
  4044a2:	f042 0201 	orr.w	r2, r2, #1
  4044a6:	60f1      	str	r1, [r6, #12]
  4044a8:	4628      	mov	r0, r5
  4044aa:	608e      	str	r6, [r1, #8]
  4044ac:	605a      	str	r2, [r3, #4]
  4044ae:	f000 fabf 	bl	404a30 <__malloc_unlock>
  4044b2:	3408      	adds	r4, #8
  4044b4:	4620      	mov	r0, r4
  4044b6:	b003      	add	sp, #12
  4044b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4044bc:	4423      	add	r3, r4
  4044be:	4628      	mov	r0, r5
  4044c0:	685a      	ldr	r2, [r3, #4]
  4044c2:	f042 0201 	orr.w	r2, r2, #1
  4044c6:	605a      	str	r2, [r3, #4]
  4044c8:	f000 fab2 	bl	404a30 <__malloc_unlock>
  4044cc:	3408      	adds	r4, #8
  4044ce:	4620      	mov	r0, r4
  4044d0:	b003      	add	sp, #12
  4044d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4044d6:	68bc      	ldr	r4, [r7, #8]
  4044d8:	6863      	ldr	r3, [r4, #4]
  4044da:	f023 0803 	bic.w	r8, r3, #3
  4044de:	45b0      	cmp	r8, r6
  4044e0:	d304      	bcc.n	4044ec <_malloc_r+0x200>
  4044e2:	eba8 0306 	sub.w	r3, r8, r6
  4044e6:	2b0f      	cmp	r3, #15
  4044e8:	f300 8085 	bgt.w	4045f6 <_malloc_r+0x30a>
  4044ec:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404648 <_malloc_r+0x35c>
  4044f0:	4b50      	ldr	r3, [pc, #320]	; (404634 <_malloc_r+0x348>)
  4044f2:	f8d9 2000 	ldr.w	r2, [r9]
  4044f6:	681b      	ldr	r3, [r3, #0]
  4044f8:	3201      	adds	r2, #1
  4044fa:	4433      	add	r3, r6
  4044fc:	eb04 0a08 	add.w	sl, r4, r8
  404500:	f000 8155 	beq.w	4047ae <_malloc_r+0x4c2>
  404504:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404508:	330f      	adds	r3, #15
  40450a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40450e:	f02b 0b0f 	bic.w	fp, fp, #15
  404512:	4659      	mov	r1, fp
  404514:	4628      	mov	r0, r5
  404516:	f000 fd8b 	bl	405030 <_sbrk_r>
  40451a:	1c41      	adds	r1, r0, #1
  40451c:	4602      	mov	r2, r0
  40451e:	f000 80fc 	beq.w	40471a <_malloc_r+0x42e>
  404522:	4582      	cmp	sl, r0
  404524:	f200 80f7 	bhi.w	404716 <_malloc_r+0x42a>
  404528:	4b43      	ldr	r3, [pc, #268]	; (404638 <_malloc_r+0x34c>)
  40452a:	6819      	ldr	r1, [r3, #0]
  40452c:	4459      	add	r1, fp
  40452e:	6019      	str	r1, [r3, #0]
  404530:	f000 814d 	beq.w	4047ce <_malloc_r+0x4e2>
  404534:	f8d9 0000 	ldr.w	r0, [r9]
  404538:	3001      	adds	r0, #1
  40453a:	bf1b      	ittet	ne
  40453c:	eba2 0a0a 	subne.w	sl, r2, sl
  404540:	4451      	addne	r1, sl
  404542:	f8c9 2000 	streq.w	r2, [r9]
  404546:	6019      	strne	r1, [r3, #0]
  404548:	f012 0107 	ands.w	r1, r2, #7
  40454c:	f000 8115 	beq.w	40477a <_malloc_r+0x48e>
  404550:	f1c1 0008 	rsb	r0, r1, #8
  404554:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404558:	4402      	add	r2, r0
  40455a:	3108      	adds	r1, #8
  40455c:	eb02 090b 	add.w	r9, r2, fp
  404560:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404564:	eba1 0909 	sub.w	r9, r1, r9
  404568:	4649      	mov	r1, r9
  40456a:	4628      	mov	r0, r5
  40456c:	9301      	str	r3, [sp, #4]
  40456e:	9200      	str	r2, [sp, #0]
  404570:	f000 fd5e 	bl	405030 <_sbrk_r>
  404574:	1c43      	adds	r3, r0, #1
  404576:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40457a:	f000 8143 	beq.w	404804 <_malloc_r+0x518>
  40457e:	1a80      	subs	r0, r0, r2
  404580:	4448      	add	r0, r9
  404582:	f040 0001 	orr.w	r0, r0, #1
  404586:	6819      	ldr	r1, [r3, #0]
  404588:	60ba      	str	r2, [r7, #8]
  40458a:	4449      	add	r1, r9
  40458c:	42bc      	cmp	r4, r7
  40458e:	6050      	str	r0, [r2, #4]
  404590:	6019      	str	r1, [r3, #0]
  404592:	d017      	beq.n	4045c4 <_malloc_r+0x2d8>
  404594:	f1b8 0f0f 	cmp.w	r8, #15
  404598:	f240 80fb 	bls.w	404792 <_malloc_r+0x4a6>
  40459c:	6860      	ldr	r0, [r4, #4]
  40459e:	f1a8 020c 	sub.w	r2, r8, #12
  4045a2:	f022 0207 	bic.w	r2, r2, #7
  4045a6:	eb04 0e02 	add.w	lr, r4, r2
  4045aa:	f000 0001 	and.w	r0, r0, #1
  4045ae:	f04f 0c05 	mov.w	ip, #5
  4045b2:	4310      	orrs	r0, r2
  4045b4:	2a0f      	cmp	r2, #15
  4045b6:	6060      	str	r0, [r4, #4]
  4045b8:	f8ce c004 	str.w	ip, [lr, #4]
  4045bc:	f8ce c008 	str.w	ip, [lr, #8]
  4045c0:	f200 8117 	bhi.w	4047f2 <_malloc_r+0x506>
  4045c4:	4b1d      	ldr	r3, [pc, #116]	; (40463c <_malloc_r+0x350>)
  4045c6:	68bc      	ldr	r4, [r7, #8]
  4045c8:	681a      	ldr	r2, [r3, #0]
  4045ca:	4291      	cmp	r1, r2
  4045cc:	bf88      	it	hi
  4045ce:	6019      	strhi	r1, [r3, #0]
  4045d0:	4b1b      	ldr	r3, [pc, #108]	; (404640 <_malloc_r+0x354>)
  4045d2:	681a      	ldr	r2, [r3, #0]
  4045d4:	4291      	cmp	r1, r2
  4045d6:	6862      	ldr	r2, [r4, #4]
  4045d8:	bf88      	it	hi
  4045da:	6019      	strhi	r1, [r3, #0]
  4045dc:	f022 0203 	bic.w	r2, r2, #3
  4045e0:	4296      	cmp	r6, r2
  4045e2:	eba2 0306 	sub.w	r3, r2, r6
  4045e6:	d801      	bhi.n	4045ec <_malloc_r+0x300>
  4045e8:	2b0f      	cmp	r3, #15
  4045ea:	dc04      	bgt.n	4045f6 <_malloc_r+0x30a>
  4045ec:	4628      	mov	r0, r5
  4045ee:	f000 fa1f 	bl	404a30 <__malloc_unlock>
  4045f2:	2400      	movs	r4, #0
  4045f4:	e740      	b.n	404478 <_malloc_r+0x18c>
  4045f6:	19a2      	adds	r2, r4, r6
  4045f8:	f043 0301 	orr.w	r3, r3, #1
  4045fc:	f046 0601 	orr.w	r6, r6, #1
  404600:	6066      	str	r6, [r4, #4]
  404602:	4628      	mov	r0, r5
  404604:	60ba      	str	r2, [r7, #8]
  404606:	6053      	str	r3, [r2, #4]
  404608:	f000 fa12 	bl	404a30 <__malloc_unlock>
  40460c:	3408      	adds	r4, #8
  40460e:	4620      	mov	r0, r4
  404610:	b003      	add	sp, #12
  404612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404616:	2b14      	cmp	r3, #20
  404618:	d971      	bls.n	4046fe <_malloc_r+0x412>
  40461a:	2b54      	cmp	r3, #84	; 0x54
  40461c:	f200 80a3 	bhi.w	404766 <_malloc_r+0x47a>
  404620:	0b33      	lsrs	r3, r6, #12
  404622:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404626:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40462a:	00c3      	lsls	r3, r0, #3
  40462c:	e680      	b.n	404330 <_malloc_r+0x44>
  40462e:	bf00      	nop
  404630:	2040045c 	.word	0x2040045c
  404634:	20400ca8 	.word	0x20400ca8
  404638:	20400c78 	.word	0x20400c78
  40463c:	20400ca0 	.word	0x20400ca0
  404640:	20400ca4 	.word	0x20400ca4
  404644:	20400464 	.word	0x20400464
  404648:	20400864 	.word	0x20400864
  40464c:	0a5a      	lsrs	r2, r3, #9
  40464e:	2a04      	cmp	r2, #4
  404650:	d95b      	bls.n	40470a <_malloc_r+0x41e>
  404652:	2a14      	cmp	r2, #20
  404654:	f200 80ae 	bhi.w	4047b4 <_malloc_r+0x4c8>
  404658:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40465c:	00c9      	lsls	r1, r1, #3
  40465e:	325b      	adds	r2, #91	; 0x5b
  404660:	eb07 0c01 	add.w	ip, r7, r1
  404664:	5879      	ldr	r1, [r7, r1]
  404666:	f1ac 0c08 	sub.w	ip, ip, #8
  40466a:	458c      	cmp	ip, r1
  40466c:	f000 8088 	beq.w	404780 <_malloc_r+0x494>
  404670:	684a      	ldr	r2, [r1, #4]
  404672:	f022 0203 	bic.w	r2, r2, #3
  404676:	4293      	cmp	r3, r2
  404678:	d273      	bcs.n	404762 <_malloc_r+0x476>
  40467a:	6889      	ldr	r1, [r1, #8]
  40467c:	458c      	cmp	ip, r1
  40467e:	d1f7      	bne.n	404670 <_malloc_r+0x384>
  404680:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404684:	687b      	ldr	r3, [r7, #4]
  404686:	60e2      	str	r2, [r4, #12]
  404688:	f8c4 c008 	str.w	ip, [r4, #8]
  40468c:	6094      	str	r4, [r2, #8]
  40468e:	f8cc 400c 	str.w	r4, [ip, #12]
  404692:	e68f      	b.n	4043b4 <_malloc_r+0xc8>
  404694:	19a1      	adds	r1, r4, r6
  404696:	f046 0c01 	orr.w	ip, r6, #1
  40469a:	f042 0601 	orr.w	r6, r2, #1
  40469e:	f8c4 c004 	str.w	ip, [r4, #4]
  4046a2:	4628      	mov	r0, r5
  4046a4:	6179      	str	r1, [r7, #20]
  4046a6:	6139      	str	r1, [r7, #16]
  4046a8:	f8c1 e00c 	str.w	lr, [r1, #12]
  4046ac:	f8c1 e008 	str.w	lr, [r1, #8]
  4046b0:	604e      	str	r6, [r1, #4]
  4046b2:	50e2      	str	r2, [r4, r3]
  4046b4:	f000 f9bc 	bl	404a30 <__malloc_unlock>
  4046b8:	3408      	adds	r4, #8
  4046ba:	e6dd      	b.n	404478 <_malloc_r+0x18c>
  4046bc:	687b      	ldr	r3, [r7, #4]
  4046be:	e679      	b.n	4043b4 <_malloc_r+0xc8>
  4046c0:	f108 0801 	add.w	r8, r8, #1
  4046c4:	f018 0f03 	tst.w	r8, #3
  4046c8:	f10c 0c08 	add.w	ip, ip, #8
  4046cc:	f47f ae85 	bne.w	4043da <_malloc_r+0xee>
  4046d0:	e02d      	b.n	40472e <_malloc_r+0x442>
  4046d2:	68dc      	ldr	r4, [r3, #12]
  4046d4:	42a3      	cmp	r3, r4
  4046d6:	bf08      	it	eq
  4046d8:	3002      	addeq	r0, #2
  4046da:	f43f ae3e 	beq.w	40435a <_malloc_r+0x6e>
  4046de:	e6bb      	b.n	404458 <_malloc_r+0x16c>
  4046e0:	4419      	add	r1, r3
  4046e2:	461c      	mov	r4, r3
  4046e4:	684a      	ldr	r2, [r1, #4]
  4046e6:	68db      	ldr	r3, [r3, #12]
  4046e8:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4046ec:	f042 0201 	orr.w	r2, r2, #1
  4046f0:	604a      	str	r2, [r1, #4]
  4046f2:	4628      	mov	r0, r5
  4046f4:	60f3      	str	r3, [r6, #12]
  4046f6:	609e      	str	r6, [r3, #8]
  4046f8:	f000 f99a 	bl	404a30 <__malloc_unlock>
  4046fc:	e6bc      	b.n	404478 <_malloc_r+0x18c>
  4046fe:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404702:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404706:	00c3      	lsls	r3, r0, #3
  404708:	e612      	b.n	404330 <_malloc_r+0x44>
  40470a:	099a      	lsrs	r2, r3, #6
  40470c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404710:	00c9      	lsls	r1, r1, #3
  404712:	3238      	adds	r2, #56	; 0x38
  404714:	e7a4      	b.n	404660 <_malloc_r+0x374>
  404716:	42bc      	cmp	r4, r7
  404718:	d054      	beq.n	4047c4 <_malloc_r+0x4d8>
  40471a:	68bc      	ldr	r4, [r7, #8]
  40471c:	6862      	ldr	r2, [r4, #4]
  40471e:	f022 0203 	bic.w	r2, r2, #3
  404722:	e75d      	b.n	4045e0 <_malloc_r+0x2f4>
  404724:	f859 3908 	ldr.w	r3, [r9], #-8
  404728:	4599      	cmp	r9, r3
  40472a:	f040 8086 	bne.w	40483a <_malloc_r+0x54e>
  40472e:	f010 0f03 	tst.w	r0, #3
  404732:	f100 30ff 	add.w	r0, r0, #4294967295
  404736:	d1f5      	bne.n	404724 <_malloc_r+0x438>
  404738:	687b      	ldr	r3, [r7, #4]
  40473a:	ea23 0304 	bic.w	r3, r3, r4
  40473e:	607b      	str	r3, [r7, #4]
  404740:	0064      	lsls	r4, r4, #1
  404742:	429c      	cmp	r4, r3
  404744:	f63f aec7 	bhi.w	4044d6 <_malloc_r+0x1ea>
  404748:	2c00      	cmp	r4, #0
  40474a:	f43f aec4 	beq.w	4044d6 <_malloc_r+0x1ea>
  40474e:	421c      	tst	r4, r3
  404750:	4640      	mov	r0, r8
  404752:	f47f ae3e 	bne.w	4043d2 <_malloc_r+0xe6>
  404756:	0064      	lsls	r4, r4, #1
  404758:	421c      	tst	r4, r3
  40475a:	f100 0004 	add.w	r0, r0, #4
  40475e:	d0fa      	beq.n	404756 <_malloc_r+0x46a>
  404760:	e637      	b.n	4043d2 <_malloc_r+0xe6>
  404762:	468c      	mov	ip, r1
  404764:	e78c      	b.n	404680 <_malloc_r+0x394>
  404766:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40476a:	d815      	bhi.n	404798 <_malloc_r+0x4ac>
  40476c:	0bf3      	lsrs	r3, r6, #15
  40476e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404772:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404776:	00c3      	lsls	r3, r0, #3
  404778:	e5da      	b.n	404330 <_malloc_r+0x44>
  40477a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40477e:	e6ed      	b.n	40455c <_malloc_r+0x270>
  404780:	687b      	ldr	r3, [r7, #4]
  404782:	1092      	asrs	r2, r2, #2
  404784:	2101      	movs	r1, #1
  404786:	fa01 f202 	lsl.w	r2, r1, r2
  40478a:	4313      	orrs	r3, r2
  40478c:	607b      	str	r3, [r7, #4]
  40478e:	4662      	mov	r2, ip
  404790:	e779      	b.n	404686 <_malloc_r+0x39a>
  404792:	2301      	movs	r3, #1
  404794:	6053      	str	r3, [r2, #4]
  404796:	e729      	b.n	4045ec <_malloc_r+0x300>
  404798:	f240 5254 	movw	r2, #1364	; 0x554
  40479c:	4293      	cmp	r3, r2
  40479e:	d822      	bhi.n	4047e6 <_malloc_r+0x4fa>
  4047a0:	0cb3      	lsrs	r3, r6, #18
  4047a2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4047a6:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4047aa:	00c3      	lsls	r3, r0, #3
  4047ac:	e5c0      	b.n	404330 <_malloc_r+0x44>
  4047ae:	f103 0b10 	add.w	fp, r3, #16
  4047b2:	e6ae      	b.n	404512 <_malloc_r+0x226>
  4047b4:	2a54      	cmp	r2, #84	; 0x54
  4047b6:	d829      	bhi.n	40480c <_malloc_r+0x520>
  4047b8:	0b1a      	lsrs	r2, r3, #12
  4047ba:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4047be:	00c9      	lsls	r1, r1, #3
  4047c0:	326e      	adds	r2, #110	; 0x6e
  4047c2:	e74d      	b.n	404660 <_malloc_r+0x374>
  4047c4:	4b20      	ldr	r3, [pc, #128]	; (404848 <_malloc_r+0x55c>)
  4047c6:	6819      	ldr	r1, [r3, #0]
  4047c8:	4459      	add	r1, fp
  4047ca:	6019      	str	r1, [r3, #0]
  4047cc:	e6b2      	b.n	404534 <_malloc_r+0x248>
  4047ce:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4047d2:	2800      	cmp	r0, #0
  4047d4:	f47f aeae 	bne.w	404534 <_malloc_r+0x248>
  4047d8:	eb08 030b 	add.w	r3, r8, fp
  4047dc:	68ba      	ldr	r2, [r7, #8]
  4047de:	f043 0301 	orr.w	r3, r3, #1
  4047e2:	6053      	str	r3, [r2, #4]
  4047e4:	e6ee      	b.n	4045c4 <_malloc_r+0x2d8>
  4047e6:	207f      	movs	r0, #127	; 0x7f
  4047e8:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4047ec:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4047f0:	e59e      	b.n	404330 <_malloc_r+0x44>
  4047f2:	f104 0108 	add.w	r1, r4, #8
  4047f6:	4628      	mov	r0, r5
  4047f8:	9300      	str	r3, [sp, #0]
  4047fa:	f000 fe0f 	bl	40541c <_free_r>
  4047fe:	9b00      	ldr	r3, [sp, #0]
  404800:	6819      	ldr	r1, [r3, #0]
  404802:	e6df      	b.n	4045c4 <_malloc_r+0x2d8>
  404804:	2001      	movs	r0, #1
  404806:	f04f 0900 	mov.w	r9, #0
  40480a:	e6bc      	b.n	404586 <_malloc_r+0x29a>
  40480c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404810:	d805      	bhi.n	40481e <_malloc_r+0x532>
  404812:	0bda      	lsrs	r2, r3, #15
  404814:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404818:	00c9      	lsls	r1, r1, #3
  40481a:	3277      	adds	r2, #119	; 0x77
  40481c:	e720      	b.n	404660 <_malloc_r+0x374>
  40481e:	f240 5154 	movw	r1, #1364	; 0x554
  404822:	428a      	cmp	r2, r1
  404824:	d805      	bhi.n	404832 <_malloc_r+0x546>
  404826:	0c9a      	lsrs	r2, r3, #18
  404828:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40482c:	00c9      	lsls	r1, r1, #3
  40482e:	327c      	adds	r2, #124	; 0x7c
  404830:	e716      	b.n	404660 <_malloc_r+0x374>
  404832:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404836:	227e      	movs	r2, #126	; 0x7e
  404838:	e712      	b.n	404660 <_malloc_r+0x374>
  40483a:	687b      	ldr	r3, [r7, #4]
  40483c:	e780      	b.n	404740 <_malloc_r+0x454>
  40483e:	08f0      	lsrs	r0, r6, #3
  404840:	f106 0308 	add.w	r3, r6, #8
  404844:	e600      	b.n	404448 <_malloc_r+0x15c>
  404846:	bf00      	nop
  404848:	20400c78 	.word	0x20400c78
  40484c:	00000000 	.word	0x00000000

00404850 <memchr>:
  404850:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404854:	2a10      	cmp	r2, #16
  404856:	db2b      	blt.n	4048b0 <memchr+0x60>
  404858:	f010 0f07 	tst.w	r0, #7
  40485c:	d008      	beq.n	404870 <memchr+0x20>
  40485e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404862:	3a01      	subs	r2, #1
  404864:	428b      	cmp	r3, r1
  404866:	d02d      	beq.n	4048c4 <memchr+0x74>
  404868:	f010 0f07 	tst.w	r0, #7
  40486c:	b342      	cbz	r2, 4048c0 <memchr+0x70>
  40486e:	d1f6      	bne.n	40485e <memchr+0xe>
  404870:	b4f0      	push	{r4, r5, r6, r7}
  404872:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404876:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40487a:	f022 0407 	bic.w	r4, r2, #7
  40487e:	f07f 0700 	mvns.w	r7, #0
  404882:	2300      	movs	r3, #0
  404884:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404888:	3c08      	subs	r4, #8
  40488a:	ea85 0501 	eor.w	r5, r5, r1
  40488e:	ea86 0601 	eor.w	r6, r6, r1
  404892:	fa85 f547 	uadd8	r5, r5, r7
  404896:	faa3 f587 	sel	r5, r3, r7
  40489a:	fa86 f647 	uadd8	r6, r6, r7
  40489e:	faa5 f687 	sel	r6, r5, r7
  4048a2:	b98e      	cbnz	r6, 4048c8 <memchr+0x78>
  4048a4:	d1ee      	bne.n	404884 <memchr+0x34>
  4048a6:	bcf0      	pop	{r4, r5, r6, r7}
  4048a8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4048ac:	f002 0207 	and.w	r2, r2, #7
  4048b0:	b132      	cbz	r2, 4048c0 <memchr+0x70>
  4048b2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4048b6:	3a01      	subs	r2, #1
  4048b8:	ea83 0301 	eor.w	r3, r3, r1
  4048bc:	b113      	cbz	r3, 4048c4 <memchr+0x74>
  4048be:	d1f8      	bne.n	4048b2 <memchr+0x62>
  4048c0:	2000      	movs	r0, #0
  4048c2:	4770      	bx	lr
  4048c4:	3801      	subs	r0, #1
  4048c6:	4770      	bx	lr
  4048c8:	2d00      	cmp	r5, #0
  4048ca:	bf06      	itte	eq
  4048cc:	4635      	moveq	r5, r6
  4048ce:	3803      	subeq	r0, #3
  4048d0:	3807      	subne	r0, #7
  4048d2:	f015 0f01 	tst.w	r5, #1
  4048d6:	d107      	bne.n	4048e8 <memchr+0x98>
  4048d8:	3001      	adds	r0, #1
  4048da:	f415 7f80 	tst.w	r5, #256	; 0x100
  4048de:	bf02      	ittt	eq
  4048e0:	3001      	addeq	r0, #1
  4048e2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4048e6:	3001      	addeq	r0, #1
  4048e8:	bcf0      	pop	{r4, r5, r6, r7}
  4048ea:	3801      	subs	r0, #1
  4048ec:	4770      	bx	lr
  4048ee:	bf00      	nop

004048f0 <memcpy>:
  4048f0:	4684      	mov	ip, r0
  4048f2:	ea41 0300 	orr.w	r3, r1, r0
  4048f6:	f013 0303 	ands.w	r3, r3, #3
  4048fa:	d16d      	bne.n	4049d8 <memcpy+0xe8>
  4048fc:	3a40      	subs	r2, #64	; 0x40
  4048fe:	d341      	bcc.n	404984 <memcpy+0x94>
  404900:	f851 3b04 	ldr.w	r3, [r1], #4
  404904:	f840 3b04 	str.w	r3, [r0], #4
  404908:	f851 3b04 	ldr.w	r3, [r1], #4
  40490c:	f840 3b04 	str.w	r3, [r0], #4
  404910:	f851 3b04 	ldr.w	r3, [r1], #4
  404914:	f840 3b04 	str.w	r3, [r0], #4
  404918:	f851 3b04 	ldr.w	r3, [r1], #4
  40491c:	f840 3b04 	str.w	r3, [r0], #4
  404920:	f851 3b04 	ldr.w	r3, [r1], #4
  404924:	f840 3b04 	str.w	r3, [r0], #4
  404928:	f851 3b04 	ldr.w	r3, [r1], #4
  40492c:	f840 3b04 	str.w	r3, [r0], #4
  404930:	f851 3b04 	ldr.w	r3, [r1], #4
  404934:	f840 3b04 	str.w	r3, [r0], #4
  404938:	f851 3b04 	ldr.w	r3, [r1], #4
  40493c:	f840 3b04 	str.w	r3, [r0], #4
  404940:	f851 3b04 	ldr.w	r3, [r1], #4
  404944:	f840 3b04 	str.w	r3, [r0], #4
  404948:	f851 3b04 	ldr.w	r3, [r1], #4
  40494c:	f840 3b04 	str.w	r3, [r0], #4
  404950:	f851 3b04 	ldr.w	r3, [r1], #4
  404954:	f840 3b04 	str.w	r3, [r0], #4
  404958:	f851 3b04 	ldr.w	r3, [r1], #4
  40495c:	f840 3b04 	str.w	r3, [r0], #4
  404960:	f851 3b04 	ldr.w	r3, [r1], #4
  404964:	f840 3b04 	str.w	r3, [r0], #4
  404968:	f851 3b04 	ldr.w	r3, [r1], #4
  40496c:	f840 3b04 	str.w	r3, [r0], #4
  404970:	f851 3b04 	ldr.w	r3, [r1], #4
  404974:	f840 3b04 	str.w	r3, [r0], #4
  404978:	f851 3b04 	ldr.w	r3, [r1], #4
  40497c:	f840 3b04 	str.w	r3, [r0], #4
  404980:	3a40      	subs	r2, #64	; 0x40
  404982:	d2bd      	bcs.n	404900 <memcpy+0x10>
  404984:	3230      	adds	r2, #48	; 0x30
  404986:	d311      	bcc.n	4049ac <memcpy+0xbc>
  404988:	f851 3b04 	ldr.w	r3, [r1], #4
  40498c:	f840 3b04 	str.w	r3, [r0], #4
  404990:	f851 3b04 	ldr.w	r3, [r1], #4
  404994:	f840 3b04 	str.w	r3, [r0], #4
  404998:	f851 3b04 	ldr.w	r3, [r1], #4
  40499c:	f840 3b04 	str.w	r3, [r0], #4
  4049a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4049a4:	f840 3b04 	str.w	r3, [r0], #4
  4049a8:	3a10      	subs	r2, #16
  4049aa:	d2ed      	bcs.n	404988 <memcpy+0x98>
  4049ac:	320c      	adds	r2, #12
  4049ae:	d305      	bcc.n	4049bc <memcpy+0xcc>
  4049b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4049b4:	f840 3b04 	str.w	r3, [r0], #4
  4049b8:	3a04      	subs	r2, #4
  4049ba:	d2f9      	bcs.n	4049b0 <memcpy+0xc0>
  4049bc:	3204      	adds	r2, #4
  4049be:	d008      	beq.n	4049d2 <memcpy+0xe2>
  4049c0:	07d2      	lsls	r2, r2, #31
  4049c2:	bf1c      	itt	ne
  4049c4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4049c8:	f800 3b01 	strbne.w	r3, [r0], #1
  4049cc:	d301      	bcc.n	4049d2 <memcpy+0xe2>
  4049ce:	880b      	ldrh	r3, [r1, #0]
  4049d0:	8003      	strh	r3, [r0, #0]
  4049d2:	4660      	mov	r0, ip
  4049d4:	4770      	bx	lr
  4049d6:	bf00      	nop
  4049d8:	2a08      	cmp	r2, #8
  4049da:	d313      	bcc.n	404a04 <memcpy+0x114>
  4049dc:	078b      	lsls	r3, r1, #30
  4049de:	d08d      	beq.n	4048fc <memcpy+0xc>
  4049e0:	f010 0303 	ands.w	r3, r0, #3
  4049e4:	d08a      	beq.n	4048fc <memcpy+0xc>
  4049e6:	f1c3 0304 	rsb	r3, r3, #4
  4049ea:	1ad2      	subs	r2, r2, r3
  4049ec:	07db      	lsls	r3, r3, #31
  4049ee:	bf1c      	itt	ne
  4049f0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4049f4:	f800 3b01 	strbne.w	r3, [r0], #1
  4049f8:	d380      	bcc.n	4048fc <memcpy+0xc>
  4049fa:	f831 3b02 	ldrh.w	r3, [r1], #2
  4049fe:	f820 3b02 	strh.w	r3, [r0], #2
  404a02:	e77b      	b.n	4048fc <memcpy+0xc>
  404a04:	3a04      	subs	r2, #4
  404a06:	d3d9      	bcc.n	4049bc <memcpy+0xcc>
  404a08:	3a01      	subs	r2, #1
  404a0a:	f811 3b01 	ldrb.w	r3, [r1], #1
  404a0e:	f800 3b01 	strb.w	r3, [r0], #1
  404a12:	d2f9      	bcs.n	404a08 <memcpy+0x118>
  404a14:	780b      	ldrb	r3, [r1, #0]
  404a16:	7003      	strb	r3, [r0, #0]
  404a18:	784b      	ldrb	r3, [r1, #1]
  404a1a:	7043      	strb	r3, [r0, #1]
  404a1c:	788b      	ldrb	r3, [r1, #2]
  404a1e:	7083      	strb	r3, [r0, #2]
  404a20:	4660      	mov	r0, ip
  404a22:	4770      	bx	lr

00404a24 <__malloc_lock>:
  404a24:	4801      	ldr	r0, [pc, #4]	; (404a2c <__malloc_lock+0x8>)
  404a26:	f7ff bc5d 	b.w	4042e4 <__retarget_lock_acquire_recursive>
  404a2a:	bf00      	nop
  404a2c:	20400cbc 	.word	0x20400cbc

00404a30 <__malloc_unlock>:
  404a30:	4801      	ldr	r0, [pc, #4]	; (404a38 <__malloc_unlock+0x8>)
  404a32:	f7ff bc59 	b.w	4042e8 <__retarget_lock_release_recursive>
  404a36:	bf00      	nop
  404a38:	20400cbc 	.word	0x20400cbc

00404a3c <_Balloc>:
  404a3c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404a3e:	b570      	push	{r4, r5, r6, lr}
  404a40:	4605      	mov	r5, r0
  404a42:	460c      	mov	r4, r1
  404a44:	b14b      	cbz	r3, 404a5a <_Balloc+0x1e>
  404a46:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404a4a:	b180      	cbz	r0, 404a6e <_Balloc+0x32>
  404a4c:	6802      	ldr	r2, [r0, #0]
  404a4e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404a52:	2300      	movs	r3, #0
  404a54:	6103      	str	r3, [r0, #16]
  404a56:	60c3      	str	r3, [r0, #12]
  404a58:	bd70      	pop	{r4, r5, r6, pc}
  404a5a:	2221      	movs	r2, #33	; 0x21
  404a5c:	2104      	movs	r1, #4
  404a5e:	f000 fc5d 	bl	40531c <_calloc_r>
  404a62:	64e8      	str	r0, [r5, #76]	; 0x4c
  404a64:	4603      	mov	r3, r0
  404a66:	2800      	cmp	r0, #0
  404a68:	d1ed      	bne.n	404a46 <_Balloc+0xa>
  404a6a:	2000      	movs	r0, #0
  404a6c:	bd70      	pop	{r4, r5, r6, pc}
  404a6e:	2101      	movs	r1, #1
  404a70:	fa01 f604 	lsl.w	r6, r1, r4
  404a74:	1d72      	adds	r2, r6, #5
  404a76:	4628      	mov	r0, r5
  404a78:	0092      	lsls	r2, r2, #2
  404a7a:	f000 fc4f 	bl	40531c <_calloc_r>
  404a7e:	2800      	cmp	r0, #0
  404a80:	d0f3      	beq.n	404a6a <_Balloc+0x2e>
  404a82:	6044      	str	r4, [r0, #4]
  404a84:	6086      	str	r6, [r0, #8]
  404a86:	e7e4      	b.n	404a52 <_Balloc+0x16>

00404a88 <_Bfree>:
  404a88:	b131      	cbz	r1, 404a98 <_Bfree+0x10>
  404a8a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404a8c:	684a      	ldr	r2, [r1, #4]
  404a8e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404a92:	6008      	str	r0, [r1, #0]
  404a94:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404a98:	4770      	bx	lr
  404a9a:	bf00      	nop

00404a9c <__multadd>:
  404a9c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404a9e:	690c      	ldr	r4, [r1, #16]
  404aa0:	b083      	sub	sp, #12
  404aa2:	460d      	mov	r5, r1
  404aa4:	4606      	mov	r6, r0
  404aa6:	f101 0e14 	add.w	lr, r1, #20
  404aaa:	2700      	movs	r7, #0
  404aac:	f8de 0000 	ldr.w	r0, [lr]
  404ab0:	b281      	uxth	r1, r0
  404ab2:	fb02 3301 	mla	r3, r2, r1, r3
  404ab6:	0c01      	lsrs	r1, r0, #16
  404ab8:	0c18      	lsrs	r0, r3, #16
  404aba:	fb02 0101 	mla	r1, r2, r1, r0
  404abe:	b29b      	uxth	r3, r3
  404ac0:	3701      	adds	r7, #1
  404ac2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404ac6:	42bc      	cmp	r4, r7
  404ac8:	f84e 3b04 	str.w	r3, [lr], #4
  404acc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404ad0:	dcec      	bgt.n	404aac <__multadd+0x10>
  404ad2:	b13b      	cbz	r3, 404ae4 <__multadd+0x48>
  404ad4:	68aa      	ldr	r2, [r5, #8]
  404ad6:	4294      	cmp	r4, r2
  404ad8:	da07      	bge.n	404aea <__multadd+0x4e>
  404ada:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404ade:	3401      	adds	r4, #1
  404ae0:	6153      	str	r3, [r2, #20]
  404ae2:	612c      	str	r4, [r5, #16]
  404ae4:	4628      	mov	r0, r5
  404ae6:	b003      	add	sp, #12
  404ae8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404aea:	6869      	ldr	r1, [r5, #4]
  404aec:	9301      	str	r3, [sp, #4]
  404aee:	3101      	adds	r1, #1
  404af0:	4630      	mov	r0, r6
  404af2:	f7ff ffa3 	bl	404a3c <_Balloc>
  404af6:	692a      	ldr	r2, [r5, #16]
  404af8:	3202      	adds	r2, #2
  404afa:	f105 010c 	add.w	r1, r5, #12
  404afe:	4607      	mov	r7, r0
  404b00:	0092      	lsls	r2, r2, #2
  404b02:	300c      	adds	r0, #12
  404b04:	f7ff fef4 	bl	4048f0 <memcpy>
  404b08:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404b0a:	6869      	ldr	r1, [r5, #4]
  404b0c:	9b01      	ldr	r3, [sp, #4]
  404b0e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404b12:	6028      	str	r0, [r5, #0]
  404b14:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404b18:	463d      	mov	r5, r7
  404b1a:	e7de      	b.n	404ada <__multadd+0x3e>

00404b1c <__hi0bits>:
  404b1c:	0c02      	lsrs	r2, r0, #16
  404b1e:	0412      	lsls	r2, r2, #16
  404b20:	4603      	mov	r3, r0
  404b22:	b9b2      	cbnz	r2, 404b52 <__hi0bits+0x36>
  404b24:	0403      	lsls	r3, r0, #16
  404b26:	2010      	movs	r0, #16
  404b28:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404b2c:	bf04      	itt	eq
  404b2e:	021b      	lsleq	r3, r3, #8
  404b30:	3008      	addeq	r0, #8
  404b32:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404b36:	bf04      	itt	eq
  404b38:	011b      	lsleq	r3, r3, #4
  404b3a:	3004      	addeq	r0, #4
  404b3c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404b40:	bf04      	itt	eq
  404b42:	009b      	lsleq	r3, r3, #2
  404b44:	3002      	addeq	r0, #2
  404b46:	2b00      	cmp	r3, #0
  404b48:	db02      	blt.n	404b50 <__hi0bits+0x34>
  404b4a:	005b      	lsls	r3, r3, #1
  404b4c:	d403      	bmi.n	404b56 <__hi0bits+0x3a>
  404b4e:	2020      	movs	r0, #32
  404b50:	4770      	bx	lr
  404b52:	2000      	movs	r0, #0
  404b54:	e7e8      	b.n	404b28 <__hi0bits+0xc>
  404b56:	3001      	adds	r0, #1
  404b58:	4770      	bx	lr
  404b5a:	bf00      	nop

00404b5c <__lo0bits>:
  404b5c:	6803      	ldr	r3, [r0, #0]
  404b5e:	f013 0207 	ands.w	r2, r3, #7
  404b62:	4601      	mov	r1, r0
  404b64:	d007      	beq.n	404b76 <__lo0bits+0x1a>
  404b66:	07da      	lsls	r2, r3, #31
  404b68:	d421      	bmi.n	404bae <__lo0bits+0x52>
  404b6a:	0798      	lsls	r0, r3, #30
  404b6c:	d421      	bmi.n	404bb2 <__lo0bits+0x56>
  404b6e:	089b      	lsrs	r3, r3, #2
  404b70:	600b      	str	r3, [r1, #0]
  404b72:	2002      	movs	r0, #2
  404b74:	4770      	bx	lr
  404b76:	b298      	uxth	r0, r3
  404b78:	b198      	cbz	r0, 404ba2 <__lo0bits+0x46>
  404b7a:	4610      	mov	r0, r2
  404b7c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404b80:	bf04      	itt	eq
  404b82:	0a1b      	lsreq	r3, r3, #8
  404b84:	3008      	addeq	r0, #8
  404b86:	071a      	lsls	r2, r3, #28
  404b88:	bf04      	itt	eq
  404b8a:	091b      	lsreq	r3, r3, #4
  404b8c:	3004      	addeq	r0, #4
  404b8e:	079a      	lsls	r2, r3, #30
  404b90:	bf04      	itt	eq
  404b92:	089b      	lsreq	r3, r3, #2
  404b94:	3002      	addeq	r0, #2
  404b96:	07da      	lsls	r2, r3, #31
  404b98:	d407      	bmi.n	404baa <__lo0bits+0x4e>
  404b9a:	085b      	lsrs	r3, r3, #1
  404b9c:	d104      	bne.n	404ba8 <__lo0bits+0x4c>
  404b9e:	2020      	movs	r0, #32
  404ba0:	4770      	bx	lr
  404ba2:	0c1b      	lsrs	r3, r3, #16
  404ba4:	2010      	movs	r0, #16
  404ba6:	e7e9      	b.n	404b7c <__lo0bits+0x20>
  404ba8:	3001      	adds	r0, #1
  404baa:	600b      	str	r3, [r1, #0]
  404bac:	4770      	bx	lr
  404bae:	2000      	movs	r0, #0
  404bb0:	4770      	bx	lr
  404bb2:	085b      	lsrs	r3, r3, #1
  404bb4:	600b      	str	r3, [r1, #0]
  404bb6:	2001      	movs	r0, #1
  404bb8:	4770      	bx	lr
  404bba:	bf00      	nop

00404bbc <__i2b>:
  404bbc:	b510      	push	{r4, lr}
  404bbe:	460c      	mov	r4, r1
  404bc0:	2101      	movs	r1, #1
  404bc2:	f7ff ff3b 	bl	404a3c <_Balloc>
  404bc6:	2201      	movs	r2, #1
  404bc8:	6144      	str	r4, [r0, #20]
  404bca:	6102      	str	r2, [r0, #16]
  404bcc:	bd10      	pop	{r4, pc}
  404bce:	bf00      	nop

00404bd0 <__multiply>:
  404bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404bd4:	690c      	ldr	r4, [r1, #16]
  404bd6:	6915      	ldr	r5, [r2, #16]
  404bd8:	42ac      	cmp	r4, r5
  404bda:	b083      	sub	sp, #12
  404bdc:	468b      	mov	fp, r1
  404bde:	4616      	mov	r6, r2
  404be0:	da04      	bge.n	404bec <__multiply+0x1c>
  404be2:	4622      	mov	r2, r4
  404be4:	46b3      	mov	fp, r6
  404be6:	462c      	mov	r4, r5
  404be8:	460e      	mov	r6, r1
  404bea:	4615      	mov	r5, r2
  404bec:	f8db 3008 	ldr.w	r3, [fp, #8]
  404bf0:	f8db 1004 	ldr.w	r1, [fp, #4]
  404bf4:	eb04 0805 	add.w	r8, r4, r5
  404bf8:	4598      	cmp	r8, r3
  404bfa:	bfc8      	it	gt
  404bfc:	3101      	addgt	r1, #1
  404bfe:	f7ff ff1d 	bl	404a3c <_Balloc>
  404c02:	f100 0914 	add.w	r9, r0, #20
  404c06:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404c0a:	45d1      	cmp	r9, sl
  404c0c:	9000      	str	r0, [sp, #0]
  404c0e:	d205      	bcs.n	404c1c <__multiply+0x4c>
  404c10:	464b      	mov	r3, r9
  404c12:	2100      	movs	r1, #0
  404c14:	f843 1b04 	str.w	r1, [r3], #4
  404c18:	459a      	cmp	sl, r3
  404c1a:	d8fb      	bhi.n	404c14 <__multiply+0x44>
  404c1c:	f106 0c14 	add.w	ip, r6, #20
  404c20:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404c24:	f10b 0b14 	add.w	fp, fp, #20
  404c28:	459c      	cmp	ip, r3
  404c2a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404c2e:	d24c      	bcs.n	404cca <__multiply+0xfa>
  404c30:	f8cd a004 	str.w	sl, [sp, #4]
  404c34:	469a      	mov	sl, r3
  404c36:	f8dc 5000 	ldr.w	r5, [ip]
  404c3a:	b2af      	uxth	r7, r5
  404c3c:	b1ef      	cbz	r7, 404c7a <__multiply+0xaa>
  404c3e:	2100      	movs	r1, #0
  404c40:	464d      	mov	r5, r9
  404c42:	465e      	mov	r6, fp
  404c44:	460c      	mov	r4, r1
  404c46:	f856 2b04 	ldr.w	r2, [r6], #4
  404c4a:	6828      	ldr	r0, [r5, #0]
  404c4c:	b293      	uxth	r3, r2
  404c4e:	b281      	uxth	r1, r0
  404c50:	fb07 1303 	mla	r3, r7, r3, r1
  404c54:	0c12      	lsrs	r2, r2, #16
  404c56:	0c01      	lsrs	r1, r0, #16
  404c58:	4423      	add	r3, r4
  404c5a:	fb07 1102 	mla	r1, r7, r2, r1
  404c5e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404c62:	b29b      	uxth	r3, r3
  404c64:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404c68:	45b6      	cmp	lr, r6
  404c6a:	f845 3b04 	str.w	r3, [r5], #4
  404c6e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404c72:	d8e8      	bhi.n	404c46 <__multiply+0x76>
  404c74:	602c      	str	r4, [r5, #0]
  404c76:	f8dc 5000 	ldr.w	r5, [ip]
  404c7a:	0c2d      	lsrs	r5, r5, #16
  404c7c:	d01d      	beq.n	404cba <__multiply+0xea>
  404c7e:	f8d9 3000 	ldr.w	r3, [r9]
  404c82:	4648      	mov	r0, r9
  404c84:	461c      	mov	r4, r3
  404c86:	4659      	mov	r1, fp
  404c88:	2200      	movs	r2, #0
  404c8a:	880e      	ldrh	r6, [r1, #0]
  404c8c:	0c24      	lsrs	r4, r4, #16
  404c8e:	fb05 4406 	mla	r4, r5, r6, r4
  404c92:	4422      	add	r2, r4
  404c94:	b29b      	uxth	r3, r3
  404c96:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404c9a:	f840 3b04 	str.w	r3, [r0], #4
  404c9e:	f851 3b04 	ldr.w	r3, [r1], #4
  404ca2:	6804      	ldr	r4, [r0, #0]
  404ca4:	0c1b      	lsrs	r3, r3, #16
  404ca6:	b2a6      	uxth	r6, r4
  404ca8:	fb05 6303 	mla	r3, r5, r3, r6
  404cac:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404cb0:	458e      	cmp	lr, r1
  404cb2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404cb6:	d8e8      	bhi.n	404c8a <__multiply+0xba>
  404cb8:	6003      	str	r3, [r0, #0]
  404cba:	f10c 0c04 	add.w	ip, ip, #4
  404cbe:	45e2      	cmp	sl, ip
  404cc0:	f109 0904 	add.w	r9, r9, #4
  404cc4:	d8b7      	bhi.n	404c36 <__multiply+0x66>
  404cc6:	f8dd a004 	ldr.w	sl, [sp, #4]
  404cca:	f1b8 0f00 	cmp.w	r8, #0
  404cce:	dd0b      	ble.n	404ce8 <__multiply+0x118>
  404cd0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404cd4:	f1aa 0a04 	sub.w	sl, sl, #4
  404cd8:	b11b      	cbz	r3, 404ce2 <__multiply+0x112>
  404cda:	e005      	b.n	404ce8 <__multiply+0x118>
  404cdc:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404ce0:	b913      	cbnz	r3, 404ce8 <__multiply+0x118>
  404ce2:	f1b8 0801 	subs.w	r8, r8, #1
  404ce6:	d1f9      	bne.n	404cdc <__multiply+0x10c>
  404ce8:	9800      	ldr	r0, [sp, #0]
  404cea:	f8c0 8010 	str.w	r8, [r0, #16]
  404cee:	b003      	add	sp, #12
  404cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404cf4 <__pow5mult>:
  404cf4:	f012 0303 	ands.w	r3, r2, #3
  404cf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404cfc:	4614      	mov	r4, r2
  404cfe:	4607      	mov	r7, r0
  404d00:	d12e      	bne.n	404d60 <__pow5mult+0x6c>
  404d02:	460d      	mov	r5, r1
  404d04:	10a4      	asrs	r4, r4, #2
  404d06:	d01c      	beq.n	404d42 <__pow5mult+0x4e>
  404d08:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404d0a:	b396      	cbz	r6, 404d72 <__pow5mult+0x7e>
  404d0c:	07e3      	lsls	r3, r4, #31
  404d0e:	f04f 0800 	mov.w	r8, #0
  404d12:	d406      	bmi.n	404d22 <__pow5mult+0x2e>
  404d14:	1064      	asrs	r4, r4, #1
  404d16:	d014      	beq.n	404d42 <__pow5mult+0x4e>
  404d18:	6830      	ldr	r0, [r6, #0]
  404d1a:	b1a8      	cbz	r0, 404d48 <__pow5mult+0x54>
  404d1c:	4606      	mov	r6, r0
  404d1e:	07e3      	lsls	r3, r4, #31
  404d20:	d5f8      	bpl.n	404d14 <__pow5mult+0x20>
  404d22:	4632      	mov	r2, r6
  404d24:	4629      	mov	r1, r5
  404d26:	4638      	mov	r0, r7
  404d28:	f7ff ff52 	bl	404bd0 <__multiply>
  404d2c:	b1b5      	cbz	r5, 404d5c <__pow5mult+0x68>
  404d2e:	686a      	ldr	r2, [r5, #4]
  404d30:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404d32:	1064      	asrs	r4, r4, #1
  404d34:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404d38:	6029      	str	r1, [r5, #0]
  404d3a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404d3e:	4605      	mov	r5, r0
  404d40:	d1ea      	bne.n	404d18 <__pow5mult+0x24>
  404d42:	4628      	mov	r0, r5
  404d44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404d48:	4632      	mov	r2, r6
  404d4a:	4631      	mov	r1, r6
  404d4c:	4638      	mov	r0, r7
  404d4e:	f7ff ff3f 	bl	404bd0 <__multiply>
  404d52:	6030      	str	r0, [r6, #0]
  404d54:	f8c0 8000 	str.w	r8, [r0]
  404d58:	4606      	mov	r6, r0
  404d5a:	e7e0      	b.n	404d1e <__pow5mult+0x2a>
  404d5c:	4605      	mov	r5, r0
  404d5e:	e7d9      	b.n	404d14 <__pow5mult+0x20>
  404d60:	1e5a      	subs	r2, r3, #1
  404d62:	4d0b      	ldr	r5, [pc, #44]	; (404d90 <__pow5mult+0x9c>)
  404d64:	2300      	movs	r3, #0
  404d66:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404d6a:	f7ff fe97 	bl	404a9c <__multadd>
  404d6e:	4605      	mov	r5, r0
  404d70:	e7c8      	b.n	404d04 <__pow5mult+0x10>
  404d72:	2101      	movs	r1, #1
  404d74:	4638      	mov	r0, r7
  404d76:	f7ff fe61 	bl	404a3c <_Balloc>
  404d7a:	f240 2171 	movw	r1, #625	; 0x271
  404d7e:	2201      	movs	r2, #1
  404d80:	2300      	movs	r3, #0
  404d82:	6141      	str	r1, [r0, #20]
  404d84:	6102      	str	r2, [r0, #16]
  404d86:	4606      	mov	r6, r0
  404d88:	64b8      	str	r0, [r7, #72]	; 0x48
  404d8a:	6003      	str	r3, [r0, #0]
  404d8c:	e7be      	b.n	404d0c <__pow5mult+0x18>
  404d8e:	bf00      	nop
  404d90:	004078a0 	.word	0x004078a0

00404d94 <__lshift>:
  404d94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404d98:	4691      	mov	r9, r2
  404d9a:	690a      	ldr	r2, [r1, #16]
  404d9c:	688b      	ldr	r3, [r1, #8]
  404d9e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404da2:	eb04 0802 	add.w	r8, r4, r2
  404da6:	f108 0501 	add.w	r5, r8, #1
  404daa:	429d      	cmp	r5, r3
  404dac:	460e      	mov	r6, r1
  404dae:	4607      	mov	r7, r0
  404db0:	6849      	ldr	r1, [r1, #4]
  404db2:	dd04      	ble.n	404dbe <__lshift+0x2a>
  404db4:	005b      	lsls	r3, r3, #1
  404db6:	429d      	cmp	r5, r3
  404db8:	f101 0101 	add.w	r1, r1, #1
  404dbc:	dcfa      	bgt.n	404db4 <__lshift+0x20>
  404dbe:	4638      	mov	r0, r7
  404dc0:	f7ff fe3c 	bl	404a3c <_Balloc>
  404dc4:	2c00      	cmp	r4, #0
  404dc6:	f100 0314 	add.w	r3, r0, #20
  404dca:	dd06      	ble.n	404dda <__lshift+0x46>
  404dcc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404dd0:	2100      	movs	r1, #0
  404dd2:	f843 1b04 	str.w	r1, [r3], #4
  404dd6:	429a      	cmp	r2, r3
  404dd8:	d1fb      	bne.n	404dd2 <__lshift+0x3e>
  404dda:	6934      	ldr	r4, [r6, #16]
  404ddc:	f106 0114 	add.w	r1, r6, #20
  404de0:	f019 091f 	ands.w	r9, r9, #31
  404de4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404de8:	d01d      	beq.n	404e26 <__lshift+0x92>
  404dea:	f1c9 0c20 	rsb	ip, r9, #32
  404dee:	2200      	movs	r2, #0
  404df0:	680c      	ldr	r4, [r1, #0]
  404df2:	fa04 f409 	lsl.w	r4, r4, r9
  404df6:	4314      	orrs	r4, r2
  404df8:	f843 4b04 	str.w	r4, [r3], #4
  404dfc:	f851 2b04 	ldr.w	r2, [r1], #4
  404e00:	458e      	cmp	lr, r1
  404e02:	fa22 f20c 	lsr.w	r2, r2, ip
  404e06:	d8f3      	bhi.n	404df0 <__lshift+0x5c>
  404e08:	601a      	str	r2, [r3, #0]
  404e0a:	b10a      	cbz	r2, 404e10 <__lshift+0x7c>
  404e0c:	f108 0502 	add.w	r5, r8, #2
  404e10:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404e12:	6872      	ldr	r2, [r6, #4]
  404e14:	3d01      	subs	r5, #1
  404e16:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404e1a:	6105      	str	r5, [r0, #16]
  404e1c:	6031      	str	r1, [r6, #0]
  404e1e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404e22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404e26:	3b04      	subs	r3, #4
  404e28:	f851 2b04 	ldr.w	r2, [r1], #4
  404e2c:	f843 2f04 	str.w	r2, [r3, #4]!
  404e30:	458e      	cmp	lr, r1
  404e32:	d8f9      	bhi.n	404e28 <__lshift+0x94>
  404e34:	e7ec      	b.n	404e10 <__lshift+0x7c>
  404e36:	bf00      	nop

00404e38 <__mcmp>:
  404e38:	b430      	push	{r4, r5}
  404e3a:	690b      	ldr	r3, [r1, #16]
  404e3c:	4605      	mov	r5, r0
  404e3e:	6900      	ldr	r0, [r0, #16]
  404e40:	1ac0      	subs	r0, r0, r3
  404e42:	d10f      	bne.n	404e64 <__mcmp+0x2c>
  404e44:	009b      	lsls	r3, r3, #2
  404e46:	3514      	adds	r5, #20
  404e48:	3114      	adds	r1, #20
  404e4a:	4419      	add	r1, r3
  404e4c:	442b      	add	r3, r5
  404e4e:	e001      	b.n	404e54 <__mcmp+0x1c>
  404e50:	429d      	cmp	r5, r3
  404e52:	d207      	bcs.n	404e64 <__mcmp+0x2c>
  404e54:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404e58:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404e5c:	4294      	cmp	r4, r2
  404e5e:	d0f7      	beq.n	404e50 <__mcmp+0x18>
  404e60:	d302      	bcc.n	404e68 <__mcmp+0x30>
  404e62:	2001      	movs	r0, #1
  404e64:	bc30      	pop	{r4, r5}
  404e66:	4770      	bx	lr
  404e68:	f04f 30ff 	mov.w	r0, #4294967295
  404e6c:	e7fa      	b.n	404e64 <__mcmp+0x2c>
  404e6e:	bf00      	nop

00404e70 <__mdiff>:
  404e70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404e74:	690f      	ldr	r7, [r1, #16]
  404e76:	460e      	mov	r6, r1
  404e78:	6911      	ldr	r1, [r2, #16]
  404e7a:	1a7f      	subs	r7, r7, r1
  404e7c:	2f00      	cmp	r7, #0
  404e7e:	4690      	mov	r8, r2
  404e80:	d117      	bne.n	404eb2 <__mdiff+0x42>
  404e82:	0089      	lsls	r1, r1, #2
  404e84:	f106 0514 	add.w	r5, r6, #20
  404e88:	f102 0e14 	add.w	lr, r2, #20
  404e8c:	186b      	adds	r3, r5, r1
  404e8e:	4471      	add	r1, lr
  404e90:	e001      	b.n	404e96 <__mdiff+0x26>
  404e92:	429d      	cmp	r5, r3
  404e94:	d25c      	bcs.n	404f50 <__mdiff+0xe0>
  404e96:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404e9a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404e9e:	42a2      	cmp	r2, r4
  404ea0:	d0f7      	beq.n	404e92 <__mdiff+0x22>
  404ea2:	d25e      	bcs.n	404f62 <__mdiff+0xf2>
  404ea4:	4633      	mov	r3, r6
  404ea6:	462c      	mov	r4, r5
  404ea8:	4646      	mov	r6, r8
  404eaa:	4675      	mov	r5, lr
  404eac:	4698      	mov	r8, r3
  404eae:	2701      	movs	r7, #1
  404eb0:	e005      	b.n	404ebe <__mdiff+0x4e>
  404eb2:	db58      	blt.n	404f66 <__mdiff+0xf6>
  404eb4:	f106 0514 	add.w	r5, r6, #20
  404eb8:	f108 0414 	add.w	r4, r8, #20
  404ebc:	2700      	movs	r7, #0
  404ebe:	6871      	ldr	r1, [r6, #4]
  404ec0:	f7ff fdbc 	bl	404a3c <_Balloc>
  404ec4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404ec8:	6936      	ldr	r6, [r6, #16]
  404eca:	60c7      	str	r7, [r0, #12]
  404ecc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404ed0:	46a6      	mov	lr, r4
  404ed2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404ed6:	f100 0414 	add.w	r4, r0, #20
  404eda:	2300      	movs	r3, #0
  404edc:	f85e 1b04 	ldr.w	r1, [lr], #4
  404ee0:	f855 8b04 	ldr.w	r8, [r5], #4
  404ee4:	b28a      	uxth	r2, r1
  404ee6:	fa13 f388 	uxtah	r3, r3, r8
  404eea:	0c09      	lsrs	r1, r1, #16
  404eec:	1a9a      	subs	r2, r3, r2
  404eee:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404ef2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404ef6:	b292      	uxth	r2, r2
  404ef8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404efc:	45f4      	cmp	ip, lr
  404efe:	f844 2b04 	str.w	r2, [r4], #4
  404f02:	ea4f 4323 	mov.w	r3, r3, asr #16
  404f06:	d8e9      	bhi.n	404edc <__mdiff+0x6c>
  404f08:	42af      	cmp	r7, r5
  404f0a:	d917      	bls.n	404f3c <__mdiff+0xcc>
  404f0c:	46a4      	mov	ip, r4
  404f0e:	46ae      	mov	lr, r5
  404f10:	f85e 2b04 	ldr.w	r2, [lr], #4
  404f14:	fa13 f382 	uxtah	r3, r3, r2
  404f18:	1419      	asrs	r1, r3, #16
  404f1a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404f1e:	b29b      	uxth	r3, r3
  404f20:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404f24:	4577      	cmp	r7, lr
  404f26:	f84c 2b04 	str.w	r2, [ip], #4
  404f2a:	ea4f 4321 	mov.w	r3, r1, asr #16
  404f2e:	d8ef      	bhi.n	404f10 <__mdiff+0xa0>
  404f30:	43ed      	mvns	r5, r5
  404f32:	442f      	add	r7, r5
  404f34:	f027 0703 	bic.w	r7, r7, #3
  404f38:	3704      	adds	r7, #4
  404f3a:	443c      	add	r4, r7
  404f3c:	3c04      	subs	r4, #4
  404f3e:	b922      	cbnz	r2, 404f4a <__mdiff+0xda>
  404f40:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404f44:	3e01      	subs	r6, #1
  404f46:	2b00      	cmp	r3, #0
  404f48:	d0fa      	beq.n	404f40 <__mdiff+0xd0>
  404f4a:	6106      	str	r6, [r0, #16]
  404f4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f50:	2100      	movs	r1, #0
  404f52:	f7ff fd73 	bl	404a3c <_Balloc>
  404f56:	2201      	movs	r2, #1
  404f58:	2300      	movs	r3, #0
  404f5a:	6102      	str	r2, [r0, #16]
  404f5c:	6143      	str	r3, [r0, #20]
  404f5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f62:	4674      	mov	r4, lr
  404f64:	e7ab      	b.n	404ebe <__mdiff+0x4e>
  404f66:	4633      	mov	r3, r6
  404f68:	f106 0414 	add.w	r4, r6, #20
  404f6c:	f102 0514 	add.w	r5, r2, #20
  404f70:	4616      	mov	r6, r2
  404f72:	2701      	movs	r7, #1
  404f74:	4698      	mov	r8, r3
  404f76:	e7a2      	b.n	404ebe <__mdiff+0x4e>

00404f78 <__d2b>:
  404f78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404f7c:	b082      	sub	sp, #8
  404f7e:	2101      	movs	r1, #1
  404f80:	461c      	mov	r4, r3
  404f82:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404f86:	4615      	mov	r5, r2
  404f88:	9e08      	ldr	r6, [sp, #32]
  404f8a:	f7ff fd57 	bl	404a3c <_Balloc>
  404f8e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404f92:	4680      	mov	r8, r0
  404f94:	b10f      	cbz	r7, 404f9a <__d2b+0x22>
  404f96:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404f9a:	9401      	str	r4, [sp, #4]
  404f9c:	b31d      	cbz	r5, 404fe6 <__d2b+0x6e>
  404f9e:	a802      	add	r0, sp, #8
  404fa0:	f840 5d08 	str.w	r5, [r0, #-8]!
  404fa4:	f7ff fdda 	bl	404b5c <__lo0bits>
  404fa8:	2800      	cmp	r0, #0
  404faa:	d134      	bne.n	405016 <__d2b+0x9e>
  404fac:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404fb0:	f8c8 2014 	str.w	r2, [r8, #20]
  404fb4:	2b00      	cmp	r3, #0
  404fb6:	bf0c      	ite	eq
  404fb8:	2101      	moveq	r1, #1
  404fba:	2102      	movne	r1, #2
  404fbc:	f8c8 3018 	str.w	r3, [r8, #24]
  404fc0:	f8c8 1010 	str.w	r1, [r8, #16]
  404fc4:	b9df      	cbnz	r7, 404ffe <__d2b+0x86>
  404fc6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404fca:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404fce:	6030      	str	r0, [r6, #0]
  404fd0:	6918      	ldr	r0, [r3, #16]
  404fd2:	f7ff fda3 	bl	404b1c <__hi0bits>
  404fd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404fd8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404fdc:	6018      	str	r0, [r3, #0]
  404fde:	4640      	mov	r0, r8
  404fe0:	b002      	add	sp, #8
  404fe2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404fe6:	a801      	add	r0, sp, #4
  404fe8:	f7ff fdb8 	bl	404b5c <__lo0bits>
  404fec:	9b01      	ldr	r3, [sp, #4]
  404fee:	f8c8 3014 	str.w	r3, [r8, #20]
  404ff2:	2101      	movs	r1, #1
  404ff4:	3020      	adds	r0, #32
  404ff6:	f8c8 1010 	str.w	r1, [r8, #16]
  404ffa:	2f00      	cmp	r7, #0
  404ffc:	d0e3      	beq.n	404fc6 <__d2b+0x4e>
  404ffe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405000:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405004:	4407      	add	r7, r0
  405006:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40500a:	6037      	str	r7, [r6, #0]
  40500c:	6018      	str	r0, [r3, #0]
  40500e:	4640      	mov	r0, r8
  405010:	b002      	add	sp, #8
  405012:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405016:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40501a:	f1c0 0220 	rsb	r2, r0, #32
  40501e:	fa03 f202 	lsl.w	r2, r3, r2
  405022:	430a      	orrs	r2, r1
  405024:	40c3      	lsrs	r3, r0
  405026:	9301      	str	r3, [sp, #4]
  405028:	f8c8 2014 	str.w	r2, [r8, #20]
  40502c:	e7c2      	b.n	404fb4 <__d2b+0x3c>
  40502e:	bf00      	nop

00405030 <_sbrk_r>:
  405030:	b538      	push	{r3, r4, r5, lr}
  405032:	4c07      	ldr	r4, [pc, #28]	; (405050 <_sbrk_r+0x20>)
  405034:	2300      	movs	r3, #0
  405036:	4605      	mov	r5, r0
  405038:	4608      	mov	r0, r1
  40503a:	6023      	str	r3, [r4, #0]
  40503c:	f7fc fb1c 	bl	401678 <_sbrk>
  405040:	1c43      	adds	r3, r0, #1
  405042:	d000      	beq.n	405046 <_sbrk_r+0x16>
  405044:	bd38      	pop	{r3, r4, r5, pc}
  405046:	6823      	ldr	r3, [r4, #0]
  405048:	2b00      	cmp	r3, #0
  40504a:	d0fb      	beq.n	405044 <_sbrk_r+0x14>
  40504c:	602b      	str	r3, [r5, #0]
  40504e:	bd38      	pop	{r3, r4, r5, pc}
  405050:	20400cd0 	.word	0x20400cd0
	...

00405080 <strlen>:
  405080:	f890 f000 	pld	[r0]
  405084:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405088:	f020 0107 	bic.w	r1, r0, #7
  40508c:	f06f 0c00 	mvn.w	ip, #0
  405090:	f010 0407 	ands.w	r4, r0, #7
  405094:	f891 f020 	pld	[r1, #32]
  405098:	f040 8049 	bne.w	40512e <strlen+0xae>
  40509c:	f04f 0400 	mov.w	r4, #0
  4050a0:	f06f 0007 	mvn.w	r0, #7
  4050a4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4050a8:	f891 f040 	pld	[r1, #64]	; 0x40
  4050ac:	f100 0008 	add.w	r0, r0, #8
  4050b0:	fa82 f24c 	uadd8	r2, r2, ip
  4050b4:	faa4 f28c 	sel	r2, r4, ip
  4050b8:	fa83 f34c 	uadd8	r3, r3, ip
  4050bc:	faa2 f38c 	sel	r3, r2, ip
  4050c0:	bb4b      	cbnz	r3, 405116 <strlen+0x96>
  4050c2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  4050c6:	fa82 f24c 	uadd8	r2, r2, ip
  4050ca:	f100 0008 	add.w	r0, r0, #8
  4050ce:	faa4 f28c 	sel	r2, r4, ip
  4050d2:	fa83 f34c 	uadd8	r3, r3, ip
  4050d6:	faa2 f38c 	sel	r3, r2, ip
  4050da:	b9e3      	cbnz	r3, 405116 <strlen+0x96>
  4050dc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4050e0:	fa82 f24c 	uadd8	r2, r2, ip
  4050e4:	f100 0008 	add.w	r0, r0, #8
  4050e8:	faa4 f28c 	sel	r2, r4, ip
  4050ec:	fa83 f34c 	uadd8	r3, r3, ip
  4050f0:	faa2 f38c 	sel	r3, r2, ip
  4050f4:	b97b      	cbnz	r3, 405116 <strlen+0x96>
  4050f6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4050fa:	f101 0120 	add.w	r1, r1, #32
  4050fe:	fa82 f24c 	uadd8	r2, r2, ip
  405102:	f100 0008 	add.w	r0, r0, #8
  405106:	faa4 f28c 	sel	r2, r4, ip
  40510a:	fa83 f34c 	uadd8	r3, r3, ip
  40510e:	faa2 f38c 	sel	r3, r2, ip
  405112:	2b00      	cmp	r3, #0
  405114:	d0c6      	beq.n	4050a4 <strlen+0x24>
  405116:	2a00      	cmp	r2, #0
  405118:	bf04      	itt	eq
  40511a:	3004      	addeq	r0, #4
  40511c:	461a      	moveq	r2, r3
  40511e:	ba12      	rev	r2, r2
  405120:	fab2 f282 	clz	r2, r2
  405124:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405128:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40512c:	4770      	bx	lr
  40512e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405132:	f004 0503 	and.w	r5, r4, #3
  405136:	f1c4 0000 	rsb	r0, r4, #0
  40513a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40513e:	f014 0f04 	tst.w	r4, #4
  405142:	f891 f040 	pld	[r1, #64]	; 0x40
  405146:	fa0c f505 	lsl.w	r5, ip, r5
  40514a:	ea62 0205 	orn	r2, r2, r5
  40514e:	bf1c      	itt	ne
  405150:	ea63 0305 	ornne	r3, r3, r5
  405154:	4662      	movne	r2, ip
  405156:	f04f 0400 	mov.w	r4, #0
  40515a:	e7a9      	b.n	4050b0 <strlen+0x30>

0040515c <__ssprint_r>:
  40515c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405160:	6893      	ldr	r3, [r2, #8]
  405162:	b083      	sub	sp, #12
  405164:	4690      	mov	r8, r2
  405166:	2b00      	cmp	r3, #0
  405168:	d070      	beq.n	40524c <__ssprint_r+0xf0>
  40516a:	4682      	mov	sl, r0
  40516c:	460c      	mov	r4, r1
  40516e:	6817      	ldr	r7, [r2, #0]
  405170:	688d      	ldr	r5, [r1, #8]
  405172:	6808      	ldr	r0, [r1, #0]
  405174:	e042      	b.n	4051fc <__ssprint_r+0xa0>
  405176:	89a3      	ldrh	r3, [r4, #12]
  405178:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40517c:	d02e      	beq.n	4051dc <__ssprint_r+0x80>
  40517e:	6965      	ldr	r5, [r4, #20]
  405180:	6921      	ldr	r1, [r4, #16]
  405182:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405186:	eba0 0b01 	sub.w	fp, r0, r1
  40518a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40518e:	f10b 0001 	add.w	r0, fp, #1
  405192:	106d      	asrs	r5, r5, #1
  405194:	4430      	add	r0, r6
  405196:	42a8      	cmp	r0, r5
  405198:	462a      	mov	r2, r5
  40519a:	bf84      	itt	hi
  40519c:	4605      	movhi	r5, r0
  40519e:	462a      	movhi	r2, r5
  4051a0:	055b      	lsls	r3, r3, #21
  4051a2:	d538      	bpl.n	405216 <__ssprint_r+0xba>
  4051a4:	4611      	mov	r1, r2
  4051a6:	4650      	mov	r0, sl
  4051a8:	f7ff f8a0 	bl	4042ec <_malloc_r>
  4051ac:	2800      	cmp	r0, #0
  4051ae:	d03c      	beq.n	40522a <__ssprint_r+0xce>
  4051b0:	465a      	mov	r2, fp
  4051b2:	6921      	ldr	r1, [r4, #16]
  4051b4:	9001      	str	r0, [sp, #4]
  4051b6:	f7ff fb9b 	bl	4048f0 <memcpy>
  4051ba:	89a2      	ldrh	r2, [r4, #12]
  4051bc:	9b01      	ldr	r3, [sp, #4]
  4051be:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4051c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4051c6:	81a2      	strh	r2, [r4, #12]
  4051c8:	eba5 020b 	sub.w	r2, r5, fp
  4051cc:	eb03 000b 	add.w	r0, r3, fp
  4051d0:	6165      	str	r5, [r4, #20]
  4051d2:	6123      	str	r3, [r4, #16]
  4051d4:	6020      	str	r0, [r4, #0]
  4051d6:	60a2      	str	r2, [r4, #8]
  4051d8:	4635      	mov	r5, r6
  4051da:	46b3      	mov	fp, r6
  4051dc:	465a      	mov	r2, fp
  4051de:	4649      	mov	r1, r9
  4051e0:	f000 fa18 	bl	405614 <memmove>
  4051e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4051e8:	68a2      	ldr	r2, [r4, #8]
  4051ea:	6820      	ldr	r0, [r4, #0]
  4051ec:	1b55      	subs	r5, r2, r5
  4051ee:	4458      	add	r0, fp
  4051f0:	1b9e      	subs	r6, r3, r6
  4051f2:	60a5      	str	r5, [r4, #8]
  4051f4:	6020      	str	r0, [r4, #0]
  4051f6:	f8c8 6008 	str.w	r6, [r8, #8]
  4051fa:	b33e      	cbz	r6, 40524c <__ssprint_r+0xf0>
  4051fc:	687e      	ldr	r6, [r7, #4]
  4051fe:	463b      	mov	r3, r7
  405200:	3708      	adds	r7, #8
  405202:	2e00      	cmp	r6, #0
  405204:	d0fa      	beq.n	4051fc <__ssprint_r+0xa0>
  405206:	42ae      	cmp	r6, r5
  405208:	f8d3 9000 	ldr.w	r9, [r3]
  40520c:	46ab      	mov	fp, r5
  40520e:	d2b2      	bcs.n	405176 <__ssprint_r+0x1a>
  405210:	4635      	mov	r5, r6
  405212:	46b3      	mov	fp, r6
  405214:	e7e2      	b.n	4051dc <__ssprint_r+0x80>
  405216:	4650      	mov	r0, sl
  405218:	f000 fa60 	bl	4056dc <_realloc_r>
  40521c:	4603      	mov	r3, r0
  40521e:	2800      	cmp	r0, #0
  405220:	d1d2      	bne.n	4051c8 <__ssprint_r+0x6c>
  405222:	6921      	ldr	r1, [r4, #16]
  405224:	4650      	mov	r0, sl
  405226:	f000 f8f9 	bl	40541c <_free_r>
  40522a:	230c      	movs	r3, #12
  40522c:	f8ca 3000 	str.w	r3, [sl]
  405230:	89a3      	ldrh	r3, [r4, #12]
  405232:	2200      	movs	r2, #0
  405234:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405238:	f04f 30ff 	mov.w	r0, #4294967295
  40523c:	81a3      	strh	r3, [r4, #12]
  40523e:	f8c8 2008 	str.w	r2, [r8, #8]
  405242:	f8c8 2004 	str.w	r2, [r8, #4]
  405246:	b003      	add	sp, #12
  405248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40524c:	2000      	movs	r0, #0
  40524e:	f8c8 0004 	str.w	r0, [r8, #4]
  405252:	b003      	add	sp, #12
  405254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405258 <__register_exitproc>:
  405258:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40525c:	4d2c      	ldr	r5, [pc, #176]	; (405310 <__register_exitproc+0xb8>)
  40525e:	4606      	mov	r6, r0
  405260:	6828      	ldr	r0, [r5, #0]
  405262:	4698      	mov	r8, r3
  405264:	460f      	mov	r7, r1
  405266:	4691      	mov	r9, r2
  405268:	f7ff f83c 	bl	4042e4 <__retarget_lock_acquire_recursive>
  40526c:	4b29      	ldr	r3, [pc, #164]	; (405314 <__register_exitproc+0xbc>)
  40526e:	681c      	ldr	r4, [r3, #0]
  405270:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405274:	2b00      	cmp	r3, #0
  405276:	d03e      	beq.n	4052f6 <__register_exitproc+0x9e>
  405278:	685a      	ldr	r2, [r3, #4]
  40527a:	2a1f      	cmp	r2, #31
  40527c:	dc1c      	bgt.n	4052b8 <__register_exitproc+0x60>
  40527e:	f102 0e01 	add.w	lr, r2, #1
  405282:	b176      	cbz	r6, 4052a2 <__register_exitproc+0x4a>
  405284:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405288:	2401      	movs	r4, #1
  40528a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40528e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405292:	4094      	lsls	r4, r2
  405294:	4320      	orrs	r0, r4
  405296:	2e02      	cmp	r6, #2
  405298:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40529c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4052a0:	d023      	beq.n	4052ea <__register_exitproc+0x92>
  4052a2:	3202      	adds	r2, #2
  4052a4:	f8c3 e004 	str.w	lr, [r3, #4]
  4052a8:	6828      	ldr	r0, [r5, #0]
  4052aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4052ae:	f7ff f81b 	bl	4042e8 <__retarget_lock_release_recursive>
  4052b2:	2000      	movs	r0, #0
  4052b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4052b8:	4b17      	ldr	r3, [pc, #92]	; (405318 <__register_exitproc+0xc0>)
  4052ba:	b30b      	cbz	r3, 405300 <__register_exitproc+0xa8>
  4052bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4052c0:	f3af 8000 	nop.w
  4052c4:	4603      	mov	r3, r0
  4052c6:	b1d8      	cbz	r0, 405300 <__register_exitproc+0xa8>
  4052c8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4052cc:	6002      	str	r2, [r0, #0]
  4052ce:	2100      	movs	r1, #0
  4052d0:	6041      	str	r1, [r0, #4]
  4052d2:	460a      	mov	r2, r1
  4052d4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4052d8:	f04f 0e01 	mov.w	lr, #1
  4052dc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4052e0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4052e4:	2e00      	cmp	r6, #0
  4052e6:	d0dc      	beq.n	4052a2 <__register_exitproc+0x4a>
  4052e8:	e7cc      	b.n	405284 <__register_exitproc+0x2c>
  4052ea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4052ee:	430c      	orrs	r4, r1
  4052f0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4052f4:	e7d5      	b.n	4052a2 <__register_exitproc+0x4a>
  4052f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4052fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4052fe:	e7bb      	b.n	405278 <__register_exitproc+0x20>
  405300:	6828      	ldr	r0, [r5, #0]
  405302:	f7fe fff1 	bl	4042e8 <__retarget_lock_release_recursive>
  405306:	f04f 30ff 	mov.w	r0, #4294967295
  40530a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40530e:	bf00      	nop
  405310:	20400458 	.word	0x20400458
  405314:	00407738 	.word	0x00407738
  405318:	00000000 	.word	0x00000000

0040531c <_calloc_r>:
  40531c:	b510      	push	{r4, lr}
  40531e:	fb02 f101 	mul.w	r1, r2, r1
  405322:	f7fe ffe3 	bl	4042ec <_malloc_r>
  405326:	4604      	mov	r4, r0
  405328:	b1d8      	cbz	r0, 405362 <_calloc_r+0x46>
  40532a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40532e:	f022 0203 	bic.w	r2, r2, #3
  405332:	3a04      	subs	r2, #4
  405334:	2a24      	cmp	r2, #36	; 0x24
  405336:	d818      	bhi.n	40536a <_calloc_r+0x4e>
  405338:	2a13      	cmp	r2, #19
  40533a:	d914      	bls.n	405366 <_calloc_r+0x4a>
  40533c:	2300      	movs	r3, #0
  40533e:	2a1b      	cmp	r2, #27
  405340:	6003      	str	r3, [r0, #0]
  405342:	6043      	str	r3, [r0, #4]
  405344:	d916      	bls.n	405374 <_calloc_r+0x58>
  405346:	2a24      	cmp	r2, #36	; 0x24
  405348:	6083      	str	r3, [r0, #8]
  40534a:	60c3      	str	r3, [r0, #12]
  40534c:	bf11      	iteee	ne
  40534e:	f100 0210 	addne.w	r2, r0, #16
  405352:	6103      	streq	r3, [r0, #16]
  405354:	6143      	streq	r3, [r0, #20]
  405356:	f100 0218 	addeq.w	r2, r0, #24
  40535a:	2300      	movs	r3, #0
  40535c:	6013      	str	r3, [r2, #0]
  40535e:	6053      	str	r3, [r2, #4]
  405360:	6093      	str	r3, [r2, #8]
  405362:	4620      	mov	r0, r4
  405364:	bd10      	pop	{r4, pc}
  405366:	4602      	mov	r2, r0
  405368:	e7f7      	b.n	40535a <_calloc_r+0x3e>
  40536a:	2100      	movs	r1, #0
  40536c:	f7fc fd20 	bl	401db0 <memset>
  405370:	4620      	mov	r0, r4
  405372:	bd10      	pop	{r4, pc}
  405374:	f100 0208 	add.w	r2, r0, #8
  405378:	e7ef      	b.n	40535a <_calloc_r+0x3e>
  40537a:	bf00      	nop

0040537c <_malloc_trim_r>:
  40537c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40537e:	4f24      	ldr	r7, [pc, #144]	; (405410 <_malloc_trim_r+0x94>)
  405380:	460c      	mov	r4, r1
  405382:	4606      	mov	r6, r0
  405384:	f7ff fb4e 	bl	404a24 <__malloc_lock>
  405388:	68bb      	ldr	r3, [r7, #8]
  40538a:	685d      	ldr	r5, [r3, #4]
  40538c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405390:	310f      	adds	r1, #15
  405392:	f025 0503 	bic.w	r5, r5, #3
  405396:	4429      	add	r1, r5
  405398:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40539c:	f021 010f 	bic.w	r1, r1, #15
  4053a0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4053a4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4053a8:	db07      	blt.n	4053ba <_malloc_trim_r+0x3e>
  4053aa:	2100      	movs	r1, #0
  4053ac:	4630      	mov	r0, r6
  4053ae:	f7ff fe3f 	bl	405030 <_sbrk_r>
  4053b2:	68bb      	ldr	r3, [r7, #8]
  4053b4:	442b      	add	r3, r5
  4053b6:	4298      	cmp	r0, r3
  4053b8:	d004      	beq.n	4053c4 <_malloc_trim_r+0x48>
  4053ba:	4630      	mov	r0, r6
  4053bc:	f7ff fb38 	bl	404a30 <__malloc_unlock>
  4053c0:	2000      	movs	r0, #0
  4053c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4053c4:	4261      	negs	r1, r4
  4053c6:	4630      	mov	r0, r6
  4053c8:	f7ff fe32 	bl	405030 <_sbrk_r>
  4053cc:	3001      	adds	r0, #1
  4053ce:	d00d      	beq.n	4053ec <_malloc_trim_r+0x70>
  4053d0:	4b10      	ldr	r3, [pc, #64]	; (405414 <_malloc_trim_r+0x98>)
  4053d2:	68ba      	ldr	r2, [r7, #8]
  4053d4:	6819      	ldr	r1, [r3, #0]
  4053d6:	1b2d      	subs	r5, r5, r4
  4053d8:	f045 0501 	orr.w	r5, r5, #1
  4053dc:	4630      	mov	r0, r6
  4053de:	1b09      	subs	r1, r1, r4
  4053e0:	6055      	str	r5, [r2, #4]
  4053e2:	6019      	str	r1, [r3, #0]
  4053e4:	f7ff fb24 	bl	404a30 <__malloc_unlock>
  4053e8:	2001      	movs	r0, #1
  4053ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4053ec:	2100      	movs	r1, #0
  4053ee:	4630      	mov	r0, r6
  4053f0:	f7ff fe1e 	bl	405030 <_sbrk_r>
  4053f4:	68ba      	ldr	r2, [r7, #8]
  4053f6:	1a83      	subs	r3, r0, r2
  4053f8:	2b0f      	cmp	r3, #15
  4053fa:	ddde      	ble.n	4053ba <_malloc_trim_r+0x3e>
  4053fc:	4c06      	ldr	r4, [pc, #24]	; (405418 <_malloc_trim_r+0x9c>)
  4053fe:	4905      	ldr	r1, [pc, #20]	; (405414 <_malloc_trim_r+0x98>)
  405400:	6824      	ldr	r4, [r4, #0]
  405402:	f043 0301 	orr.w	r3, r3, #1
  405406:	1b00      	subs	r0, r0, r4
  405408:	6053      	str	r3, [r2, #4]
  40540a:	6008      	str	r0, [r1, #0]
  40540c:	e7d5      	b.n	4053ba <_malloc_trim_r+0x3e>
  40540e:	bf00      	nop
  405410:	2040045c 	.word	0x2040045c
  405414:	20400c78 	.word	0x20400c78
  405418:	20400864 	.word	0x20400864

0040541c <_free_r>:
  40541c:	2900      	cmp	r1, #0
  40541e:	d044      	beq.n	4054aa <_free_r+0x8e>
  405420:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405424:	460d      	mov	r5, r1
  405426:	4680      	mov	r8, r0
  405428:	f7ff fafc 	bl	404a24 <__malloc_lock>
  40542c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405430:	4969      	ldr	r1, [pc, #420]	; (4055d8 <_free_r+0x1bc>)
  405432:	f027 0301 	bic.w	r3, r7, #1
  405436:	f1a5 0408 	sub.w	r4, r5, #8
  40543a:	18e2      	adds	r2, r4, r3
  40543c:	688e      	ldr	r6, [r1, #8]
  40543e:	6850      	ldr	r0, [r2, #4]
  405440:	42b2      	cmp	r2, r6
  405442:	f020 0003 	bic.w	r0, r0, #3
  405446:	d05e      	beq.n	405506 <_free_r+0xea>
  405448:	07fe      	lsls	r6, r7, #31
  40544a:	6050      	str	r0, [r2, #4]
  40544c:	d40b      	bmi.n	405466 <_free_r+0x4a>
  40544e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405452:	1be4      	subs	r4, r4, r7
  405454:	f101 0e08 	add.w	lr, r1, #8
  405458:	68a5      	ldr	r5, [r4, #8]
  40545a:	4575      	cmp	r5, lr
  40545c:	443b      	add	r3, r7
  40545e:	d06d      	beq.n	40553c <_free_r+0x120>
  405460:	68e7      	ldr	r7, [r4, #12]
  405462:	60ef      	str	r7, [r5, #12]
  405464:	60bd      	str	r5, [r7, #8]
  405466:	1815      	adds	r5, r2, r0
  405468:	686d      	ldr	r5, [r5, #4]
  40546a:	07ed      	lsls	r5, r5, #31
  40546c:	d53e      	bpl.n	4054ec <_free_r+0xd0>
  40546e:	f043 0201 	orr.w	r2, r3, #1
  405472:	6062      	str	r2, [r4, #4]
  405474:	50e3      	str	r3, [r4, r3]
  405476:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40547a:	d217      	bcs.n	4054ac <_free_r+0x90>
  40547c:	08db      	lsrs	r3, r3, #3
  40547e:	1c58      	adds	r0, r3, #1
  405480:	109a      	asrs	r2, r3, #2
  405482:	684d      	ldr	r5, [r1, #4]
  405484:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405488:	60a7      	str	r7, [r4, #8]
  40548a:	2301      	movs	r3, #1
  40548c:	4093      	lsls	r3, r2
  40548e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405492:	432b      	orrs	r3, r5
  405494:	3a08      	subs	r2, #8
  405496:	60e2      	str	r2, [r4, #12]
  405498:	604b      	str	r3, [r1, #4]
  40549a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40549e:	60fc      	str	r4, [r7, #12]
  4054a0:	4640      	mov	r0, r8
  4054a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4054a6:	f7ff bac3 	b.w	404a30 <__malloc_unlock>
  4054aa:	4770      	bx	lr
  4054ac:	0a5a      	lsrs	r2, r3, #9
  4054ae:	2a04      	cmp	r2, #4
  4054b0:	d852      	bhi.n	405558 <_free_r+0x13c>
  4054b2:	099a      	lsrs	r2, r3, #6
  4054b4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4054b8:	00ff      	lsls	r7, r7, #3
  4054ba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4054be:	19c8      	adds	r0, r1, r7
  4054c0:	59ca      	ldr	r2, [r1, r7]
  4054c2:	3808      	subs	r0, #8
  4054c4:	4290      	cmp	r0, r2
  4054c6:	d04f      	beq.n	405568 <_free_r+0x14c>
  4054c8:	6851      	ldr	r1, [r2, #4]
  4054ca:	f021 0103 	bic.w	r1, r1, #3
  4054ce:	428b      	cmp	r3, r1
  4054d0:	d232      	bcs.n	405538 <_free_r+0x11c>
  4054d2:	6892      	ldr	r2, [r2, #8]
  4054d4:	4290      	cmp	r0, r2
  4054d6:	d1f7      	bne.n	4054c8 <_free_r+0xac>
  4054d8:	68c3      	ldr	r3, [r0, #12]
  4054da:	60a0      	str	r0, [r4, #8]
  4054dc:	60e3      	str	r3, [r4, #12]
  4054de:	609c      	str	r4, [r3, #8]
  4054e0:	60c4      	str	r4, [r0, #12]
  4054e2:	4640      	mov	r0, r8
  4054e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4054e8:	f7ff baa2 	b.w	404a30 <__malloc_unlock>
  4054ec:	6895      	ldr	r5, [r2, #8]
  4054ee:	4f3b      	ldr	r7, [pc, #236]	; (4055dc <_free_r+0x1c0>)
  4054f0:	42bd      	cmp	r5, r7
  4054f2:	4403      	add	r3, r0
  4054f4:	d040      	beq.n	405578 <_free_r+0x15c>
  4054f6:	68d0      	ldr	r0, [r2, #12]
  4054f8:	60e8      	str	r0, [r5, #12]
  4054fa:	f043 0201 	orr.w	r2, r3, #1
  4054fe:	6085      	str	r5, [r0, #8]
  405500:	6062      	str	r2, [r4, #4]
  405502:	50e3      	str	r3, [r4, r3]
  405504:	e7b7      	b.n	405476 <_free_r+0x5a>
  405506:	07ff      	lsls	r7, r7, #31
  405508:	4403      	add	r3, r0
  40550a:	d407      	bmi.n	40551c <_free_r+0x100>
  40550c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405510:	1aa4      	subs	r4, r4, r2
  405512:	4413      	add	r3, r2
  405514:	68a0      	ldr	r0, [r4, #8]
  405516:	68e2      	ldr	r2, [r4, #12]
  405518:	60c2      	str	r2, [r0, #12]
  40551a:	6090      	str	r0, [r2, #8]
  40551c:	4a30      	ldr	r2, [pc, #192]	; (4055e0 <_free_r+0x1c4>)
  40551e:	6812      	ldr	r2, [r2, #0]
  405520:	f043 0001 	orr.w	r0, r3, #1
  405524:	4293      	cmp	r3, r2
  405526:	6060      	str	r0, [r4, #4]
  405528:	608c      	str	r4, [r1, #8]
  40552a:	d3b9      	bcc.n	4054a0 <_free_r+0x84>
  40552c:	4b2d      	ldr	r3, [pc, #180]	; (4055e4 <_free_r+0x1c8>)
  40552e:	4640      	mov	r0, r8
  405530:	6819      	ldr	r1, [r3, #0]
  405532:	f7ff ff23 	bl	40537c <_malloc_trim_r>
  405536:	e7b3      	b.n	4054a0 <_free_r+0x84>
  405538:	4610      	mov	r0, r2
  40553a:	e7cd      	b.n	4054d8 <_free_r+0xbc>
  40553c:	1811      	adds	r1, r2, r0
  40553e:	6849      	ldr	r1, [r1, #4]
  405540:	07c9      	lsls	r1, r1, #31
  405542:	d444      	bmi.n	4055ce <_free_r+0x1b2>
  405544:	6891      	ldr	r1, [r2, #8]
  405546:	68d2      	ldr	r2, [r2, #12]
  405548:	60ca      	str	r2, [r1, #12]
  40554a:	4403      	add	r3, r0
  40554c:	f043 0001 	orr.w	r0, r3, #1
  405550:	6091      	str	r1, [r2, #8]
  405552:	6060      	str	r0, [r4, #4]
  405554:	50e3      	str	r3, [r4, r3]
  405556:	e7a3      	b.n	4054a0 <_free_r+0x84>
  405558:	2a14      	cmp	r2, #20
  40555a:	d816      	bhi.n	40558a <_free_r+0x16e>
  40555c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405560:	00ff      	lsls	r7, r7, #3
  405562:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405566:	e7aa      	b.n	4054be <_free_r+0xa2>
  405568:	10aa      	asrs	r2, r5, #2
  40556a:	2301      	movs	r3, #1
  40556c:	684d      	ldr	r5, [r1, #4]
  40556e:	4093      	lsls	r3, r2
  405570:	432b      	orrs	r3, r5
  405572:	604b      	str	r3, [r1, #4]
  405574:	4603      	mov	r3, r0
  405576:	e7b0      	b.n	4054da <_free_r+0xbe>
  405578:	f043 0201 	orr.w	r2, r3, #1
  40557c:	614c      	str	r4, [r1, #20]
  40557e:	610c      	str	r4, [r1, #16]
  405580:	60e5      	str	r5, [r4, #12]
  405582:	60a5      	str	r5, [r4, #8]
  405584:	6062      	str	r2, [r4, #4]
  405586:	50e3      	str	r3, [r4, r3]
  405588:	e78a      	b.n	4054a0 <_free_r+0x84>
  40558a:	2a54      	cmp	r2, #84	; 0x54
  40558c:	d806      	bhi.n	40559c <_free_r+0x180>
  40558e:	0b1a      	lsrs	r2, r3, #12
  405590:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405594:	00ff      	lsls	r7, r7, #3
  405596:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40559a:	e790      	b.n	4054be <_free_r+0xa2>
  40559c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4055a0:	d806      	bhi.n	4055b0 <_free_r+0x194>
  4055a2:	0bda      	lsrs	r2, r3, #15
  4055a4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4055a8:	00ff      	lsls	r7, r7, #3
  4055aa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4055ae:	e786      	b.n	4054be <_free_r+0xa2>
  4055b0:	f240 5054 	movw	r0, #1364	; 0x554
  4055b4:	4282      	cmp	r2, r0
  4055b6:	d806      	bhi.n	4055c6 <_free_r+0x1aa>
  4055b8:	0c9a      	lsrs	r2, r3, #18
  4055ba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4055be:	00ff      	lsls	r7, r7, #3
  4055c0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4055c4:	e77b      	b.n	4054be <_free_r+0xa2>
  4055c6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4055ca:	257e      	movs	r5, #126	; 0x7e
  4055cc:	e777      	b.n	4054be <_free_r+0xa2>
  4055ce:	f043 0101 	orr.w	r1, r3, #1
  4055d2:	6061      	str	r1, [r4, #4]
  4055d4:	6013      	str	r3, [r2, #0]
  4055d6:	e763      	b.n	4054a0 <_free_r+0x84>
  4055d8:	2040045c 	.word	0x2040045c
  4055dc:	20400464 	.word	0x20400464
  4055e0:	20400868 	.word	0x20400868
  4055e4:	20400ca8 	.word	0x20400ca8

004055e8 <__ascii_mbtowc>:
  4055e8:	b082      	sub	sp, #8
  4055ea:	b149      	cbz	r1, 405600 <__ascii_mbtowc+0x18>
  4055ec:	b15a      	cbz	r2, 405606 <__ascii_mbtowc+0x1e>
  4055ee:	b16b      	cbz	r3, 40560c <__ascii_mbtowc+0x24>
  4055f0:	7813      	ldrb	r3, [r2, #0]
  4055f2:	600b      	str	r3, [r1, #0]
  4055f4:	7812      	ldrb	r2, [r2, #0]
  4055f6:	1c10      	adds	r0, r2, #0
  4055f8:	bf18      	it	ne
  4055fa:	2001      	movne	r0, #1
  4055fc:	b002      	add	sp, #8
  4055fe:	4770      	bx	lr
  405600:	a901      	add	r1, sp, #4
  405602:	2a00      	cmp	r2, #0
  405604:	d1f3      	bne.n	4055ee <__ascii_mbtowc+0x6>
  405606:	4610      	mov	r0, r2
  405608:	b002      	add	sp, #8
  40560a:	4770      	bx	lr
  40560c:	f06f 0001 	mvn.w	r0, #1
  405610:	e7f4      	b.n	4055fc <__ascii_mbtowc+0x14>
  405612:	bf00      	nop

00405614 <memmove>:
  405614:	4288      	cmp	r0, r1
  405616:	b5f0      	push	{r4, r5, r6, r7, lr}
  405618:	d90d      	bls.n	405636 <memmove+0x22>
  40561a:	188b      	adds	r3, r1, r2
  40561c:	4298      	cmp	r0, r3
  40561e:	d20a      	bcs.n	405636 <memmove+0x22>
  405620:	1884      	adds	r4, r0, r2
  405622:	2a00      	cmp	r2, #0
  405624:	d051      	beq.n	4056ca <memmove+0xb6>
  405626:	4622      	mov	r2, r4
  405628:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40562c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405630:	4299      	cmp	r1, r3
  405632:	d1f9      	bne.n	405628 <memmove+0x14>
  405634:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405636:	2a0f      	cmp	r2, #15
  405638:	d948      	bls.n	4056cc <memmove+0xb8>
  40563a:	ea41 0300 	orr.w	r3, r1, r0
  40563e:	079b      	lsls	r3, r3, #30
  405640:	d146      	bne.n	4056d0 <memmove+0xbc>
  405642:	f100 0410 	add.w	r4, r0, #16
  405646:	f101 0310 	add.w	r3, r1, #16
  40564a:	4615      	mov	r5, r2
  40564c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405650:	f844 6c10 	str.w	r6, [r4, #-16]
  405654:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405658:	f844 6c0c 	str.w	r6, [r4, #-12]
  40565c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405660:	f844 6c08 	str.w	r6, [r4, #-8]
  405664:	3d10      	subs	r5, #16
  405666:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40566a:	f844 6c04 	str.w	r6, [r4, #-4]
  40566e:	2d0f      	cmp	r5, #15
  405670:	f103 0310 	add.w	r3, r3, #16
  405674:	f104 0410 	add.w	r4, r4, #16
  405678:	d8e8      	bhi.n	40564c <memmove+0x38>
  40567a:	f1a2 0310 	sub.w	r3, r2, #16
  40567e:	f023 030f 	bic.w	r3, r3, #15
  405682:	f002 0e0f 	and.w	lr, r2, #15
  405686:	3310      	adds	r3, #16
  405688:	f1be 0f03 	cmp.w	lr, #3
  40568c:	4419      	add	r1, r3
  40568e:	4403      	add	r3, r0
  405690:	d921      	bls.n	4056d6 <memmove+0xc2>
  405692:	1f1e      	subs	r6, r3, #4
  405694:	460d      	mov	r5, r1
  405696:	4674      	mov	r4, lr
  405698:	3c04      	subs	r4, #4
  40569a:	f855 7b04 	ldr.w	r7, [r5], #4
  40569e:	f846 7f04 	str.w	r7, [r6, #4]!
  4056a2:	2c03      	cmp	r4, #3
  4056a4:	d8f8      	bhi.n	405698 <memmove+0x84>
  4056a6:	f1ae 0404 	sub.w	r4, lr, #4
  4056aa:	f024 0403 	bic.w	r4, r4, #3
  4056ae:	3404      	adds	r4, #4
  4056b0:	4421      	add	r1, r4
  4056b2:	4423      	add	r3, r4
  4056b4:	f002 0203 	and.w	r2, r2, #3
  4056b8:	b162      	cbz	r2, 4056d4 <memmove+0xc0>
  4056ba:	3b01      	subs	r3, #1
  4056bc:	440a      	add	r2, r1
  4056be:	f811 4b01 	ldrb.w	r4, [r1], #1
  4056c2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4056c6:	428a      	cmp	r2, r1
  4056c8:	d1f9      	bne.n	4056be <memmove+0xaa>
  4056ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4056cc:	4603      	mov	r3, r0
  4056ce:	e7f3      	b.n	4056b8 <memmove+0xa4>
  4056d0:	4603      	mov	r3, r0
  4056d2:	e7f2      	b.n	4056ba <memmove+0xa6>
  4056d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4056d6:	4672      	mov	r2, lr
  4056d8:	e7ee      	b.n	4056b8 <memmove+0xa4>
  4056da:	bf00      	nop

004056dc <_realloc_r>:
  4056dc:	2900      	cmp	r1, #0
  4056de:	f000 8095 	beq.w	40580c <_realloc_r+0x130>
  4056e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4056e6:	460d      	mov	r5, r1
  4056e8:	4616      	mov	r6, r2
  4056ea:	b083      	sub	sp, #12
  4056ec:	4680      	mov	r8, r0
  4056ee:	f106 070b 	add.w	r7, r6, #11
  4056f2:	f7ff f997 	bl	404a24 <__malloc_lock>
  4056f6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4056fa:	2f16      	cmp	r7, #22
  4056fc:	f02e 0403 	bic.w	r4, lr, #3
  405700:	f1a5 0908 	sub.w	r9, r5, #8
  405704:	d83c      	bhi.n	405780 <_realloc_r+0xa4>
  405706:	2210      	movs	r2, #16
  405708:	4617      	mov	r7, r2
  40570a:	42be      	cmp	r6, r7
  40570c:	d83d      	bhi.n	40578a <_realloc_r+0xae>
  40570e:	4294      	cmp	r4, r2
  405710:	da43      	bge.n	40579a <_realloc_r+0xbe>
  405712:	4bc4      	ldr	r3, [pc, #784]	; (405a24 <_realloc_r+0x348>)
  405714:	6899      	ldr	r1, [r3, #8]
  405716:	eb09 0004 	add.w	r0, r9, r4
  40571a:	4288      	cmp	r0, r1
  40571c:	f000 80b4 	beq.w	405888 <_realloc_r+0x1ac>
  405720:	6843      	ldr	r3, [r0, #4]
  405722:	f023 0101 	bic.w	r1, r3, #1
  405726:	4401      	add	r1, r0
  405728:	6849      	ldr	r1, [r1, #4]
  40572a:	07c9      	lsls	r1, r1, #31
  40572c:	d54c      	bpl.n	4057c8 <_realloc_r+0xec>
  40572e:	f01e 0f01 	tst.w	lr, #1
  405732:	f000 809b 	beq.w	40586c <_realloc_r+0x190>
  405736:	4631      	mov	r1, r6
  405738:	4640      	mov	r0, r8
  40573a:	f7fe fdd7 	bl	4042ec <_malloc_r>
  40573e:	4606      	mov	r6, r0
  405740:	2800      	cmp	r0, #0
  405742:	d03a      	beq.n	4057ba <_realloc_r+0xde>
  405744:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405748:	f023 0301 	bic.w	r3, r3, #1
  40574c:	444b      	add	r3, r9
  40574e:	f1a0 0208 	sub.w	r2, r0, #8
  405752:	429a      	cmp	r2, r3
  405754:	f000 8121 	beq.w	40599a <_realloc_r+0x2be>
  405758:	1f22      	subs	r2, r4, #4
  40575a:	2a24      	cmp	r2, #36	; 0x24
  40575c:	f200 8107 	bhi.w	40596e <_realloc_r+0x292>
  405760:	2a13      	cmp	r2, #19
  405762:	f200 80db 	bhi.w	40591c <_realloc_r+0x240>
  405766:	4603      	mov	r3, r0
  405768:	462a      	mov	r2, r5
  40576a:	6811      	ldr	r1, [r2, #0]
  40576c:	6019      	str	r1, [r3, #0]
  40576e:	6851      	ldr	r1, [r2, #4]
  405770:	6059      	str	r1, [r3, #4]
  405772:	6892      	ldr	r2, [r2, #8]
  405774:	609a      	str	r2, [r3, #8]
  405776:	4629      	mov	r1, r5
  405778:	4640      	mov	r0, r8
  40577a:	f7ff fe4f 	bl	40541c <_free_r>
  40577e:	e01c      	b.n	4057ba <_realloc_r+0xde>
  405780:	f027 0707 	bic.w	r7, r7, #7
  405784:	2f00      	cmp	r7, #0
  405786:	463a      	mov	r2, r7
  405788:	dabf      	bge.n	40570a <_realloc_r+0x2e>
  40578a:	2600      	movs	r6, #0
  40578c:	230c      	movs	r3, #12
  40578e:	4630      	mov	r0, r6
  405790:	f8c8 3000 	str.w	r3, [r8]
  405794:	b003      	add	sp, #12
  405796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40579a:	462e      	mov	r6, r5
  40579c:	1be3      	subs	r3, r4, r7
  40579e:	2b0f      	cmp	r3, #15
  4057a0:	d81e      	bhi.n	4057e0 <_realloc_r+0x104>
  4057a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4057a6:	f003 0301 	and.w	r3, r3, #1
  4057aa:	4323      	orrs	r3, r4
  4057ac:	444c      	add	r4, r9
  4057ae:	f8c9 3004 	str.w	r3, [r9, #4]
  4057b2:	6863      	ldr	r3, [r4, #4]
  4057b4:	f043 0301 	orr.w	r3, r3, #1
  4057b8:	6063      	str	r3, [r4, #4]
  4057ba:	4640      	mov	r0, r8
  4057bc:	f7ff f938 	bl	404a30 <__malloc_unlock>
  4057c0:	4630      	mov	r0, r6
  4057c2:	b003      	add	sp, #12
  4057c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4057c8:	f023 0303 	bic.w	r3, r3, #3
  4057cc:	18e1      	adds	r1, r4, r3
  4057ce:	4291      	cmp	r1, r2
  4057d0:	db1f      	blt.n	405812 <_realloc_r+0x136>
  4057d2:	68c3      	ldr	r3, [r0, #12]
  4057d4:	6882      	ldr	r2, [r0, #8]
  4057d6:	462e      	mov	r6, r5
  4057d8:	60d3      	str	r3, [r2, #12]
  4057da:	460c      	mov	r4, r1
  4057dc:	609a      	str	r2, [r3, #8]
  4057de:	e7dd      	b.n	40579c <_realloc_r+0xc0>
  4057e0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4057e4:	eb09 0107 	add.w	r1, r9, r7
  4057e8:	f002 0201 	and.w	r2, r2, #1
  4057ec:	444c      	add	r4, r9
  4057ee:	f043 0301 	orr.w	r3, r3, #1
  4057f2:	4317      	orrs	r7, r2
  4057f4:	f8c9 7004 	str.w	r7, [r9, #4]
  4057f8:	604b      	str	r3, [r1, #4]
  4057fa:	6863      	ldr	r3, [r4, #4]
  4057fc:	f043 0301 	orr.w	r3, r3, #1
  405800:	3108      	adds	r1, #8
  405802:	6063      	str	r3, [r4, #4]
  405804:	4640      	mov	r0, r8
  405806:	f7ff fe09 	bl	40541c <_free_r>
  40580a:	e7d6      	b.n	4057ba <_realloc_r+0xde>
  40580c:	4611      	mov	r1, r2
  40580e:	f7fe bd6d 	b.w	4042ec <_malloc_r>
  405812:	f01e 0f01 	tst.w	lr, #1
  405816:	d18e      	bne.n	405736 <_realloc_r+0x5a>
  405818:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40581c:	eba9 0a01 	sub.w	sl, r9, r1
  405820:	f8da 1004 	ldr.w	r1, [sl, #4]
  405824:	f021 0103 	bic.w	r1, r1, #3
  405828:	440b      	add	r3, r1
  40582a:	4423      	add	r3, r4
  40582c:	4293      	cmp	r3, r2
  40582e:	db25      	blt.n	40587c <_realloc_r+0x1a0>
  405830:	68c2      	ldr	r2, [r0, #12]
  405832:	6881      	ldr	r1, [r0, #8]
  405834:	4656      	mov	r6, sl
  405836:	60ca      	str	r2, [r1, #12]
  405838:	6091      	str	r1, [r2, #8]
  40583a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40583e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405842:	1f22      	subs	r2, r4, #4
  405844:	2a24      	cmp	r2, #36	; 0x24
  405846:	60c1      	str	r1, [r0, #12]
  405848:	6088      	str	r0, [r1, #8]
  40584a:	f200 8094 	bhi.w	405976 <_realloc_r+0x29a>
  40584e:	2a13      	cmp	r2, #19
  405850:	d96f      	bls.n	405932 <_realloc_r+0x256>
  405852:	6829      	ldr	r1, [r5, #0]
  405854:	f8ca 1008 	str.w	r1, [sl, #8]
  405858:	6869      	ldr	r1, [r5, #4]
  40585a:	f8ca 100c 	str.w	r1, [sl, #12]
  40585e:	2a1b      	cmp	r2, #27
  405860:	f200 80a2 	bhi.w	4059a8 <_realloc_r+0x2cc>
  405864:	3508      	adds	r5, #8
  405866:	f10a 0210 	add.w	r2, sl, #16
  40586a:	e063      	b.n	405934 <_realloc_r+0x258>
  40586c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405870:	eba9 0a03 	sub.w	sl, r9, r3
  405874:	f8da 1004 	ldr.w	r1, [sl, #4]
  405878:	f021 0103 	bic.w	r1, r1, #3
  40587c:	1863      	adds	r3, r4, r1
  40587e:	4293      	cmp	r3, r2
  405880:	f6ff af59 	blt.w	405736 <_realloc_r+0x5a>
  405884:	4656      	mov	r6, sl
  405886:	e7d8      	b.n	40583a <_realloc_r+0x15e>
  405888:	6841      	ldr	r1, [r0, #4]
  40588a:	f021 0b03 	bic.w	fp, r1, #3
  40588e:	44a3      	add	fp, r4
  405890:	f107 0010 	add.w	r0, r7, #16
  405894:	4583      	cmp	fp, r0
  405896:	da56      	bge.n	405946 <_realloc_r+0x26a>
  405898:	f01e 0f01 	tst.w	lr, #1
  40589c:	f47f af4b 	bne.w	405736 <_realloc_r+0x5a>
  4058a0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4058a4:	eba9 0a01 	sub.w	sl, r9, r1
  4058a8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4058ac:	f021 0103 	bic.w	r1, r1, #3
  4058b0:	448b      	add	fp, r1
  4058b2:	4558      	cmp	r0, fp
  4058b4:	dce2      	bgt.n	40587c <_realloc_r+0x1a0>
  4058b6:	4656      	mov	r6, sl
  4058b8:	f8da 100c 	ldr.w	r1, [sl, #12]
  4058bc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4058c0:	1f22      	subs	r2, r4, #4
  4058c2:	2a24      	cmp	r2, #36	; 0x24
  4058c4:	60c1      	str	r1, [r0, #12]
  4058c6:	6088      	str	r0, [r1, #8]
  4058c8:	f200 808f 	bhi.w	4059ea <_realloc_r+0x30e>
  4058cc:	2a13      	cmp	r2, #19
  4058ce:	f240 808a 	bls.w	4059e6 <_realloc_r+0x30a>
  4058d2:	6829      	ldr	r1, [r5, #0]
  4058d4:	f8ca 1008 	str.w	r1, [sl, #8]
  4058d8:	6869      	ldr	r1, [r5, #4]
  4058da:	f8ca 100c 	str.w	r1, [sl, #12]
  4058de:	2a1b      	cmp	r2, #27
  4058e0:	f200 808a 	bhi.w	4059f8 <_realloc_r+0x31c>
  4058e4:	3508      	adds	r5, #8
  4058e6:	f10a 0210 	add.w	r2, sl, #16
  4058ea:	6829      	ldr	r1, [r5, #0]
  4058ec:	6011      	str	r1, [r2, #0]
  4058ee:	6869      	ldr	r1, [r5, #4]
  4058f0:	6051      	str	r1, [r2, #4]
  4058f2:	68a9      	ldr	r1, [r5, #8]
  4058f4:	6091      	str	r1, [r2, #8]
  4058f6:	eb0a 0107 	add.w	r1, sl, r7
  4058fa:	ebab 0207 	sub.w	r2, fp, r7
  4058fe:	f042 0201 	orr.w	r2, r2, #1
  405902:	6099      	str	r1, [r3, #8]
  405904:	604a      	str	r2, [r1, #4]
  405906:	f8da 3004 	ldr.w	r3, [sl, #4]
  40590a:	f003 0301 	and.w	r3, r3, #1
  40590e:	431f      	orrs	r7, r3
  405910:	4640      	mov	r0, r8
  405912:	f8ca 7004 	str.w	r7, [sl, #4]
  405916:	f7ff f88b 	bl	404a30 <__malloc_unlock>
  40591a:	e751      	b.n	4057c0 <_realloc_r+0xe4>
  40591c:	682b      	ldr	r3, [r5, #0]
  40591e:	6003      	str	r3, [r0, #0]
  405920:	686b      	ldr	r3, [r5, #4]
  405922:	6043      	str	r3, [r0, #4]
  405924:	2a1b      	cmp	r2, #27
  405926:	d82d      	bhi.n	405984 <_realloc_r+0x2a8>
  405928:	f100 0308 	add.w	r3, r0, #8
  40592c:	f105 0208 	add.w	r2, r5, #8
  405930:	e71b      	b.n	40576a <_realloc_r+0x8e>
  405932:	4632      	mov	r2, r6
  405934:	6829      	ldr	r1, [r5, #0]
  405936:	6011      	str	r1, [r2, #0]
  405938:	6869      	ldr	r1, [r5, #4]
  40593a:	6051      	str	r1, [r2, #4]
  40593c:	68a9      	ldr	r1, [r5, #8]
  40593e:	6091      	str	r1, [r2, #8]
  405940:	461c      	mov	r4, r3
  405942:	46d1      	mov	r9, sl
  405944:	e72a      	b.n	40579c <_realloc_r+0xc0>
  405946:	eb09 0107 	add.w	r1, r9, r7
  40594a:	ebab 0b07 	sub.w	fp, fp, r7
  40594e:	f04b 0201 	orr.w	r2, fp, #1
  405952:	6099      	str	r1, [r3, #8]
  405954:	604a      	str	r2, [r1, #4]
  405956:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40595a:	f003 0301 	and.w	r3, r3, #1
  40595e:	431f      	orrs	r7, r3
  405960:	4640      	mov	r0, r8
  405962:	f845 7c04 	str.w	r7, [r5, #-4]
  405966:	f7ff f863 	bl	404a30 <__malloc_unlock>
  40596a:	462e      	mov	r6, r5
  40596c:	e728      	b.n	4057c0 <_realloc_r+0xe4>
  40596e:	4629      	mov	r1, r5
  405970:	f7ff fe50 	bl	405614 <memmove>
  405974:	e6ff      	b.n	405776 <_realloc_r+0x9a>
  405976:	4629      	mov	r1, r5
  405978:	4630      	mov	r0, r6
  40597a:	461c      	mov	r4, r3
  40597c:	46d1      	mov	r9, sl
  40597e:	f7ff fe49 	bl	405614 <memmove>
  405982:	e70b      	b.n	40579c <_realloc_r+0xc0>
  405984:	68ab      	ldr	r3, [r5, #8]
  405986:	6083      	str	r3, [r0, #8]
  405988:	68eb      	ldr	r3, [r5, #12]
  40598a:	60c3      	str	r3, [r0, #12]
  40598c:	2a24      	cmp	r2, #36	; 0x24
  40598e:	d017      	beq.n	4059c0 <_realloc_r+0x2e4>
  405990:	f100 0310 	add.w	r3, r0, #16
  405994:	f105 0210 	add.w	r2, r5, #16
  405998:	e6e7      	b.n	40576a <_realloc_r+0x8e>
  40599a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40599e:	f023 0303 	bic.w	r3, r3, #3
  4059a2:	441c      	add	r4, r3
  4059a4:	462e      	mov	r6, r5
  4059a6:	e6f9      	b.n	40579c <_realloc_r+0xc0>
  4059a8:	68a9      	ldr	r1, [r5, #8]
  4059aa:	f8ca 1010 	str.w	r1, [sl, #16]
  4059ae:	68e9      	ldr	r1, [r5, #12]
  4059b0:	f8ca 1014 	str.w	r1, [sl, #20]
  4059b4:	2a24      	cmp	r2, #36	; 0x24
  4059b6:	d00c      	beq.n	4059d2 <_realloc_r+0x2f6>
  4059b8:	3510      	adds	r5, #16
  4059ba:	f10a 0218 	add.w	r2, sl, #24
  4059be:	e7b9      	b.n	405934 <_realloc_r+0x258>
  4059c0:	692b      	ldr	r3, [r5, #16]
  4059c2:	6103      	str	r3, [r0, #16]
  4059c4:	696b      	ldr	r3, [r5, #20]
  4059c6:	6143      	str	r3, [r0, #20]
  4059c8:	f105 0218 	add.w	r2, r5, #24
  4059cc:	f100 0318 	add.w	r3, r0, #24
  4059d0:	e6cb      	b.n	40576a <_realloc_r+0x8e>
  4059d2:	692a      	ldr	r2, [r5, #16]
  4059d4:	f8ca 2018 	str.w	r2, [sl, #24]
  4059d8:	696a      	ldr	r2, [r5, #20]
  4059da:	f8ca 201c 	str.w	r2, [sl, #28]
  4059de:	3518      	adds	r5, #24
  4059e0:	f10a 0220 	add.w	r2, sl, #32
  4059e4:	e7a6      	b.n	405934 <_realloc_r+0x258>
  4059e6:	4632      	mov	r2, r6
  4059e8:	e77f      	b.n	4058ea <_realloc_r+0x20e>
  4059ea:	4629      	mov	r1, r5
  4059ec:	4630      	mov	r0, r6
  4059ee:	9301      	str	r3, [sp, #4]
  4059f0:	f7ff fe10 	bl	405614 <memmove>
  4059f4:	9b01      	ldr	r3, [sp, #4]
  4059f6:	e77e      	b.n	4058f6 <_realloc_r+0x21a>
  4059f8:	68a9      	ldr	r1, [r5, #8]
  4059fa:	f8ca 1010 	str.w	r1, [sl, #16]
  4059fe:	68e9      	ldr	r1, [r5, #12]
  405a00:	f8ca 1014 	str.w	r1, [sl, #20]
  405a04:	2a24      	cmp	r2, #36	; 0x24
  405a06:	d003      	beq.n	405a10 <_realloc_r+0x334>
  405a08:	3510      	adds	r5, #16
  405a0a:	f10a 0218 	add.w	r2, sl, #24
  405a0e:	e76c      	b.n	4058ea <_realloc_r+0x20e>
  405a10:	692a      	ldr	r2, [r5, #16]
  405a12:	f8ca 2018 	str.w	r2, [sl, #24]
  405a16:	696a      	ldr	r2, [r5, #20]
  405a18:	f8ca 201c 	str.w	r2, [sl, #28]
  405a1c:	3518      	adds	r5, #24
  405a1e:	f10a 0220 	add.w	r2, sl, #32
  405a22:	e762      	b.n	4058ea <_realloc_r+0x20e>
  405a24:	2040045c 	.word	0x2040045c

00405a28 <__ascii_wctomb>:
  405a28:	b121      	cbz	r1, 405a34 <__ascii_wctomb+0xc>
  405a2a:	2aff      	cmp	r2, #255	; 0xff
  405a2c:	d804      	bhi.n	405a38 <__ascii_wctomb+0x10>
  405a2e:	700a      	strb	r2, [r1, #0]
  405a30:	2001      	movs	r0, #1
  405a32:	4770      	bx	lr
  405a34:	4608      	mov	r0, r1
  405a36:	4770      	bx	lr
  405a38:	238a      	movs	r3, #138	; 0x8a
  405a3a:	6003      	str	r3, [r0, #0]
  405a3c:	f04f 30ff 	mov.w	r0, #4294967295
  405a40:	4770      	bx	lr
  405a42:	bf00      	nop

00405a44 <__aeabi_drsub>:
  405a44:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405a48:	e002      	b.n	405a50 <__adddf3>
  405a4a:	bf00      	nop

00405a4c <__aeabi_dsub>:
  405a4c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405a50 <__adddf3>:
  405a50:	b530      	push	{r4, r5, lr}
  405a52:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405a56:	ea4f 0543 	mov.w	r5, r3, lsl #1
  405a5a:	ea94 0f05 	teq	r4, r5
  405a5e:	bf08      	it	eq
  405a60:	ea90 0f02 	teqeq	r0, r2
  405a64:	bf1f      	itttt	ne
  405a66:	ea54 0c00 	orrsne.w	ip, r4, r0
  405a6a:	ea55 0c02 	orrsne.w	ip, r5, r2
  405a6e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405a72:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405a76:	f000 80e2 	beq.w	405c3e <__adddf3+0x1ee>
  405a7a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  405a7e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405a82:	bfb8      	it	lt
  405a84:	426d      	neglt	r5, r5
  405a86:	dd0c      	ble.n	405aa2 <__adddf3+0x52>
  405a88:	442c      	add	r4, r5
  405a8a:	ea80 0202 	eor.w	r2, r0, r2
  405a8e:	ea81 0303 	eor.w	r3, r1, r3
  405a92:	ea82 0000 	eor.w	r0, r2, r0
  405a96:	ea83 0101 	eor.w	r1, r3, r1
  405a9a:	ea80 0202 	eor.w	r2, r0, r2
  405a9e:	ea81 0303 	eor.w	r3, r1, r3
  405aa2:	2d36      	cmp	r5, #54	; 0x36
  405aa4:	bf88      	it	hi
  405aa6:	bd30      	pophi	{r4, r5, pc}
  405aa8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405aac:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405ab0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405ab4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405ab8:	d002      	beq.n	405ac0 <__adddf3+0x70>
  405aba:	4240      	negs	r0, r0
  405abc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405ac0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405ac4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405ac8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  405acc:	d002      	beq.n	405ad4 <__adddf3+0x84>
  405ace:	4252      	negs	r2, r2
  405ad0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405ad4:	ea94 0f05 	teq	r4, r5
  405ad8:	f000 80a7 	beq.w	405c2a <__adddf3+0x1da>
  405adc:	f1a4 0401 	sub.w	r4, r4, #1
  405ae0:	f1d5 0e20 	rsbs	lr, r5, #32
  405ae4:	db0d      	blt.n	405b02 <__adddf3+0xb2>
  405ae6:	fa02 fc0e 	lsl.w	ip, r2, lr
  405aea:	fa22 f205 	lsr.w	r2, r2, r5
  405aee:	1880      	adds	r0, r0, r2
  405af0:	f141 0100 	adc.w	r1, r1, #0
  405af4:	fa03 f20e 	lsl.w	r2, r3, lr
  405af8:	1880      	adds	r0, r0, r2
  405afa:	fa43 f305 	asr.w	r3, r3, r5
  405afe:	4159      	adcs	r1, r3
  405b00:	e00e      	b.n	405b20 <__adddf3+0xd0>
  405b02:	f1a5 0520 	sub.w	r5, r5, #32
  405b06:	f10e 0e20 	add.w	lr, lr, #32
  405b0a:	2a01      	cmp	r2, #1
  405b0c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405b10:	bf28      	it	cs
  405b12:	f04c 0c02 	orrcs.w	ip, ip, #2
  405b16:	fa43 f305 	asr.w	r3, r3, r5
  405b1a:	18c0      	adds	r0, r0, r3
  405b1c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405b20:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405b24:	d507      	bpl.n	405b36 <__adddf3+0xe6>
  405b26:	f04f 0e00 	mov.w	lr, #0
  405b2a:	f1dc 0c00 	rsbs	ip, ip, #0
  405b2e:	eb7e 0000 	sbcs.w	r0, lr, r0
  405b32:	eb6e 0101 	sbc.w	r1, lr, r1
  405b36:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  405b3a:	d31b      	bcc.n	405b74 <__adddf3+0x124>
  405b3c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405b40:	d30c      	bcc.n	405b5c <__adddf3+0x10c>
  405b42:	0849      	lsrs	r1, r1, #1
  405b44:	ea5f 0030 	movs.w	r0, r0, rrx
  405b48:	ea4f 0c3c 	mov.w	ip, ip, rrx
  405b4c:	f104 0401 	add.w	r4, r4, #1
  405b50:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405b54:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405b58:	f080 809a 	bcs.w	405c90 <__adddf3+0x240>
  405b5c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405b60:	bf08      	it	eq
  405b62:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405b66:	f150 0000 	adcs.w	r0, r0, #0
  405b6a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405b6e:	ea41 0105 	orr.w	r1, r1, r5
  405b72:	bd30      	pop	{r4, r5, pc}
  405b74:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405b78:	4140      	adcs	r0, r0
  405b7a:	eb41 0101 	adc.w	r1, r1, r1
  405b7e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405b82:	f1a4 0401 	sub.w	r4, r4, #1
  405b86:	d1e9      	bne.n	405b5c <__adddf3+0x10c>
  405b88:	f091 0f00 	teq	r1, #0
  405b8c:	bf04      	itt	eq
  405b8e:	4601      	moveq	r1, r0
  405b90:	2000      	moveq	r0, #0
  405b92:	fab1 f381 	clz	r3, r1
  405b96:	bf08      	it	eq
  405b98:	3320      	addeq	r3, #32
  405b9a:	f1a3 030b 	sub.w	r3, r3, #11
  405b9e:	f1b3 0220 	subs.w	r2, r3, #32
  405ba2:	da0c      	bge.n	405bbe <__adddf3+0x16e>
  405ba4:	320c      	adds	r2, #12
  405ba6:	dd08      	ble.n	405bba <__adddf3+0x16a>
  405ba8:	f102 0c14 	add.w	ip, r2, #20
  405bac:	f1c2 020c 	rsb	r2, r2, #12
  405bb0:	fa01 f00c 	lsl.w	r0, r1, ip
  405bb4:	fa21 f102 	lsr.w	r1, r1, r2
  405bb8:	e00c      	b.n	405bd4 <__adddf3+0x184>
  405bba:	f102 0214 	add.w	r2, r2, #20
  405bbe:	bfd8      	it	le
  405bc0:	f1c2 0c20 	rsble	ip, r2, #32
  405bc4:	fa01 f102 	lsl.w	r1, r1, r2
  405bc8:	fa20 fc0c 	lsr.w	ip, r0, ip
  405bcc:	bfdc      	itt	le
  405bce:	ea41 010c 	orrle.w	r1, r1, ip
  405bd2:	4090      	lslle	r0, r2
  405bd4:	1ae4      	subs	r4, r4, r3
  405bd6:	bfa2      	ittt	ge
  405bd8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405bdc:	4329      	orrge	r1, r5
  405bde:	bd30      	popge	{r4, r5, pc}
  405be0:	ea6f 0404 	mvn.w	r4, r4
  405be4:	3c1f      	subs	r4, #31
  405be6:	da1c      	bge.n	405c22 <__adddf3+0x1d2>
  405be8:	340c      	adds	r4, #12
  405bea:	dc0e      	bgt.n	405c0a <__adddf3+0x1ba>
  405bec:	f104 0414 	add.w	r4, r4, #20
  405bf0:	f1c4 0220 	rsb	r2, r4, #32
  405bf4:	fa20 f004 	lsr.w	r0, r0, r4
  405bf8:	fa01 f302 	lsl.w	r3, r1, r2
  405bfc:	ea40 0003 	orr.w	r0, r0, r3
  405c00:	fa21 f304 	lsr.w	r3, r1, r4
  405c04:	ea45 0103 	orr.w	r1, r5, r3
  405c08:	bd30      	pop	{r4, r5, pc}
  405c0a:	f1c4 040c 	rsb	r4, r4, #12
  405c0e:	f1c4 0220 	rsb	r2, r4, #32
  405c12:	fa20 f002 	lsr.w	r0, r0, r2
  405c16:	fa01 f304 	lsl.w	r3, r1, r4
  405c1a:	ea40 0003 	orr.w	r0, r0, r3
  405c1e:	4629      	mov	r1, r5
  405c20:	bd30      	pop	{r4, r5, pc}
  405c22:	fa21 f004 	lsr.w	r0, r1, r4
  405c26:	4629      	mov	r1, r5
  405c28:	bd30      	pop	{r4, r5, pc}
  405c2a:	f094 0f00 	teq	r4, #0
  405c2e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405c32:	bf06      	itte	eq
  405c34:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405c38:	3401      	addeq	r4, #1
  405c3a:	3d01      	subne	r5, #1
  405c3c:	e74e      	b.n	405adc <__adddf3+0x8c>
  405c3e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405c42:	bf18      	it	ne
  405c44:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405c48:	d029      	beq.n	405c9e <__adddf3+0x24e>
  405c4a:	ea94 0f05 	teq	r4, r5
  405c4e:	bf08      	it	eq
  405c50:	ea90 0f02 	teqeq	r0, r2
  405c54:	d005      	beq.n	405c62 <__adddf3+0x212>
  405c56:	ea54 0c00 	orrs.w	ip, r4, r0
  405c5a:	bf04      	itt	eq
  405c5c:	4619      	moveq	r1, r3
  405c5e:	4610      	moveq	r0, r2
  405c60:	bd30      	pop	{r4, r5, pc}
  405c62:	ea91 0f03 	teq	r1, r3
  405c66:	bf1e      	ittt	ne
  405c68:	2100      	movne	r1, #0
  405c6a:	2000      	movne	r0, #0
  405c6c:	bd30      	popne	{r4, r5, pc}
  405c6e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405c72:	d105      	bne.n	405c80 <__adddf3+0x230>
  405c74:	0040      	lsls	r0, r0, #1
  405c76:	4149      	adcs	r1, r1
  405c78:	bf28      	it	cs
  405c7a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405c7e:	bd30      	pop	{r4, r5, pc}
  405c80:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405c84:	bf3c      	itt	cc
  405c86:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405c8a:	bd30      	popcc	{r4, r5, pc}
  405c8c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405c90:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405c94:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405c98:	f04f 0000 	mov.w	r0, #0
  405c9c:	bd30      	pop	{r4, r5, pc}
  405c9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405ca2:	bf1a      	itte	ne
  405ca4:	4619      	movne	r1, r3
  405ca6:	4610      	movne	r0, r2
  405ca8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405cac:	bf1c      	itt	ne
  405cae:	460b      	movne	r3, r1
  405cb0:	4602      	movne	r2, r0
  405cb2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405cb6:	bf06      	itte	eq
  405cb8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405cbc:	ea91 0f03 	teqeq	r1, r3
  405cc0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405cc4:	bd30      	pop	{r4, r5, pc}
  405cc6:	bf00      	nop

00405cc8 <__aeabi_ui2d>:
  405cc8:	f090 0f00 	teq	r0, #0
  405ccc:	bf04      	itt	eq
  405cce:	2100      	moveq	r1, #0
  405cd0:	4770      	bxeq	lr
  405cd2:	b530      	push	{r4, r5, lr}
  405cd4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405cd8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405cdc:	f04f 0500 	mov.w	r5, #0
  405ce0:	f04f 0100 	mov.w	r1, #0
  405ce4:	e750      	b.n	405b88 <__adddf3+0x138>
  405ce6:	bf00      	nop

00405ce8 <__aeabi_i2d>:
  405ce8:	f090 0f00 	teq	r0, #0
  405cec:	bf04      	itt	eq
  405cee:	2100      	moveq	r1, #0
  405cf0:	4770      	bxeq	lr
  405cf2:	b530      	push	{r4, r5, lr}
  405cf4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405cf8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405cfc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405d00:	bf48      	it	mi
  405d02:	4240      	negmi	r0, r0
  405d04:	f04f 0100 	mov.w	r1, #0
  405d08:	e73e      	b.n	405b88 <__adddf3+0x138>
  405d0a:	bf00      	nop

00405d0c <__aeabi_f2d>:
  405d0c:	0042      	lsls	r2, r0, #1
  405d0e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405d12:	ea4f 0131 	mov.w	r1, r1, rrx
  405d16:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405d1a:	bf1f      	itttt	ne
  405d1c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405d20:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405d24:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405d28:	4770      	bxne	lr
  405d2a:	f092 0f00 	teq	r2, #0
  405d2e:	bf14      	ite	ne
  405d30:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405d34:	4770      	bxeq	lr
  405d36:	b530      	push	{r4, r5, lr}
  405d38:	f44f 7460 	mov.w	r4, #896	; 0x380
  405d3c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405d40:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405d44:	e720      	b.n	405b88 <__adddf3+0x138>
  405d46:	bf00      	nop

00405d48 <__aeabi_ul2d>:
  405d48:	ea50 0201 	orrs.w	r2, r0, r1
  405d4c:	bf08      	it	eq
  405d4e:	4770      	bxeq	lr
  405d50:	b530      	push	{r4, r5, lr}
  405d52:	f04f 0500 	mov.w	r5, #0
  405d56:	e00a      	b.n	405d6e <__aeabi_l2d+0x16>

00405d58 <__aeabi_l2d>:
  405d58:	ea50 0201 	orrs.w	r2, r0, r1
  405d5c:	bf08      	it	eq
  405d5e:	4770      	bxeq	lr
  405d60:	b530      	push	{r4, r5, lr}
  405d62:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405d66:	d502      	bpl.n	405d6e <__aeabi_l2d+0x16>
  405d68:	4240      	negs	r0, r0
  405d6a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405d6e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405d72:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405d76:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405d7a:	f43f aedc 	beq.w	405b36 <__adddf3+0xe6>
  405d7e:	f04f 0203 	mov.w	r2, #3
  405d82:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405d86:	bf18      	it	ne
  405d88:	3203      	addne	r2, #3
  405d8a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405d8e:	bf18      	it	ne
  405d90:	3203      	addne	r2, #3
  405d92:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405d96:	f1c2 0320 	rsb	r3, r2, #32
  405d9a:	fa00 fc03 	lsl.w	ip, r0, r3
  405d9e:	fa20 f002 	lsr.w	r0, r0, r2
  405da2:	fa01 fe03 	lsl.w	lr, r1, r3
  405da6:	ea40 000e 	orr.w	r0, r0, lr
  405daa:	fa21 f102 	lsr.w	r1, r1, r2
  405dae:	4414      	add	r4, r2
  405db0:	e6c1      	b.n	405b36 <__adddf3+0xe6>
  405db2:	bf00      	nop

00405db4 <__aeabi_dmul>:
  405db4:	b570      	push	{r4, r5, r6, lr}
  405db6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405dba:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405dbe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405dc2:	bf1d      	ittte	ne
  405dc4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405dc8:	ea94 0f0c 	teqne	r4, ip
  405dcc:	ea95 0f0c 	teqne	r5, ip
  405dd0:	f000 f8de 	bleq	405f90 <__aeabi_dmul+0x1dc>
  405dd4:	442c      	add	r4, r5
  405dd6:	ea81 0603 	eor.w	r6, r1, r3
  405dda:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405dde:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405de2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405de6:	bf18      	it	ne
  405de8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405dec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405df0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405df4:	d038      	beq.n	405e68 <__aeabi_dmul+0xb4>
  405df6:	fba0 ce02 	umull	ip, lr, r0, r2
  405dfa:	f04f 0500 	mov.w	r5, #0
  405dfe:	fbe1 e502 	umlal	lr, r5, r1, r2
  405e02:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405e06:	fbe0 e503 	umlal	lr, r5, r0, r3
  405e0a:	f04f 0600 	mov.w	r6, #0
  405e0e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405e12:	f09c 0f00 	teq	ip, #0
  405e16:	bf18      	it	ne
  405e18:	f04e 0e01 	orrne.w	lr, lr, #1
  405e1c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405e20:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405e24:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405e28:	d204      	bcs.n	405e34 <__aeabi_dmul+0x80>
  405e2a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405e2e:	416d      	adcs	r5, r5
  405e30:	eb46 0606 	adc.w	r6, r6, r6
  405e34:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405e38:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405e3c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405e40:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405e44:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405e48:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405e4c:	bf88      	it	hi
  405e4e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405e52:	d81e      	bhi.n	405e92 <__aeabi_dmul+0xde>
  405e54:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405e58:	bf08      	it	eq
  405e5a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405e5e:	f150 0000 	adcs.w	r0, r0, #0
  405e62:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405e66:	bd70      	pop	{r4, r5, r6, pc}
  405e68:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405e6c:	ea46 0101 	orr.w	r1, r6, r1
  405e70:	ea40 0002 	orr.w	r0, r0, r2
  405e74:	ea81 0103 	eor.w	r1, r1, r3
  405e78:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405e7c:	bfc2      	ittt	gt
  405e7e:	ebd4 050c 	rsbsgt	r5, r4, ip
  405e82:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405e86:	bd70      	popgt	{r4, r5, r6, pc}
  405e88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405e8c:	f04f 0e00 	mov.w	lr, #0
  405e90:	3c01      	subs	r4, #1
  405e92:	f300 80ab 	bgt.w	405fec <__aeabi_dmul+0x238>
  405e96:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405e9a:	bfde      	ittt	le
  405e9c:	2000      	movle	r0, #0
  405e9e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405ea2:	bd70      	pople	{r4, r5, r6, pc}
  405ea4:	f1c4 0400 	rsb	r4, r4, #0
  405ea8:	3c20      	subs	r4, #32
  405eaa:	da35      	bge.n	405f18 <__aeabi_dmul+0x164>
  405eac:	340c      	adds	r4, #12
  405eae:	dc1b      	bgt.n	405ee8 <__aeabi_dmul+0x134>
  405eb0:	f104 0414 	add.w	r4, r4, #20
  405eb4:	f1c4 0520 	rsb	r5, r4, #32
  405eb8:	fa00 f305 	lsl.w	r3, r0, r5
  405ebc:	fa20 f004 	lsr.w	r0, r0, r4
  405ec0:	fa01 f205 	lsl.w	r2, r1, r5
  405ec4:	ea40 0002 	orr.w	r0, r0, r2
  405ec8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405ecc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405ed0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405ed4:	fa21 f604 	lsr.w	r6, r1, r4
  405ed8:	eb42 0106 	adc.w	r1, r2, r6
  405edc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405ee0:	bf08      	it	eq
  405ee2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405ee6:	bd70      	pop	{r4, r5, r6, pc}
  405ee8:	f1c4 040c 	rsb	r4, r4, #12
  405eec:	f1c4 0520 	rsb	r5, r4, #32
  405ef0:	fa00 f304 	lsl.w	r3, r0, r4
  405ef4:	fa20 f005 	lsr.w	r0, r0, r5
  405ef8:	fa01 f204 	lsl.w	r2, r1, r4
  405efc:	ea40 0002 	orr.w	r0, r0, r2
  405f00:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405f04:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405f08:	f141 0100 	adc.w	r1, r1, #0
  405f0c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405f10:	bf08      	it	eq
  405f12:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405f16:	bd70      	pop	{r4, r5, r6, pc}
  405f18:	f1c4 0520 	rsb	r5, r4, #32
  405f1c:	fa00 f205 	lsl.w	r2, r0, r5
  405f20:	ea4e 0e02 	orr.w	lr, lr, r2
  405f24:	fa20 f304 	lsr.w	r3, r0, r4
  405f28:	fa01 f205 	lsl.w	r2, r1, r5
  405f2c:	ea43 0302 	orr.w	r3, r3, r2
  405f30:	fa21 f004 	lsr.w	r0, r1, r4
  405f34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405f38:	fa21 f204 	lsr.w	r2, r1, r4
  405f3c:	ea20 0002 	bic.w	r0, r0, r2
  405f40:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405f44:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405f48:	bf08      	it	eq
  405f4a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405f4e:	bd70      	pop	{r4, r5, r6, pc}
  405f50:	f094 0f00 	teq	r4, #0
  405f54:	d10f      	bne.n	405f76 <__aeabi_dmul+0x1c2>
  405f56:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405f5a:	0040      	lsls	r0, r0, #1
  405f5c:	eb41 0101 	adc.w	r1, r1, r1
  405f60:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405f64:	bf08      	it	eq
  405f66:	3c01      	subeq	r4, #1
  405f68:	d0f7      	beq.n	405f5a <__aeabi_dmul+0x1a6>
  405f6a:	ea41 0106 	orr.w	r1, r1, r6
  405f6e:	f095 0f00 	teq	r5, #0
  405f72:	bf18      	it	ne
  405f74:	4770      	bxne	lr
  405f76:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405f7a:	0052      	lsls	r2, r2, #1
  405f7c:	eb43 0303 	adc.w	r3, r3, r3
  405f80:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405f84:	bf08      	it	eq
  405f86:	3d01      	subeq	r5, #1
  405f88:	d0f7      	beq.n	405f7a <__aeabi_dmul+0x1c6>
  405f8a:	ea43 0306 	orr.w	r3, r3, r6
  405f8e:	4770      	bx	lr
  405f90:	ea94 0f0c 	teq	r4, ip
  405f94:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405f98:	bf18      	it	ne
  405f9a:	ea95 0f0c 	teqne	r5, ip
  405f9e:	d00c      	beq.n	405fba <__aeabi_dmul+0x206>
  405fa0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405fa4:	bf18      	it	ne
  405fa6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405faa:	d1d1      	bne.n	405f50 <__aeabi_dmul+0x19c>
  405fac:	ea81 0103 	eor.w	r1, r1, r3
  405fb0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405fb4:	f04f 0000 	mov.w	r0, #0
  405fb8:	bd70      	pop	{r4, r5, r6, pc}
  405fba:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405fbe:	bf06      	itte	eq
  405fc0:	4610      	moveq	r0, r2
  405fc2:	4619      	moveq	r1, r3
  405fc4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405fc8:	d019      	beq.n	405ffe <__aeabi_dmul+0x24a>
  405fca:	ea94 0f0c 	teq	r4, ip
  405fce:	d102      	bne.n	405fd6 <__aeabi_dmul+0x222>
  405fd0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405fd4:	d113      	bne.n	405ffe <__aeabi_dmul+0x24a>
  405fd6:	ea95 0f0c 	teq	r5, ip
  405fda:	d105      	bne.n	405fe8 <__aeabi_dmul+0x234>
  405fdc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405fe0:	bf1c      	itt	ne
  405fe2:	4610      	movne	r0, r2
  405fe4:	4619      	movne	r1, r3
  405fe6:	d10a      	bne.n	405ffe <__aeabi_dmul+0x24a>
  405fe8:	ea81 0103 	eor.w	r1, r1, r3
  405fec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405ff0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405ff4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405ff8:	f04f 0000 	mov.w	r0, #0
  405ffc:	bd70      	pop	{r4, r5, r6, pc}
  405ffe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406002:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  406006:	bd70      	pop	{r4, r5, r6, pc}

00406008 <__aeabi_ddiv>:
  406008:	b570      	push	{r4, r5, r6, lr}
  40600a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40600e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  406012:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  406016:	bf1d      	ittte	ne
  406018:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40601c:	ea94 0f0c 	teqne	r4, ip
  406020:	ea95 0f0c 	teqne	r5, ip
  406024:	f000 f8a7 	bleq	406176 <__aeabi_ddiv+0x16e>
  406028:	eba4 0405 	sub.w	r4, r4, r5
  40602c:	ea81 0e03 	eor.w	lr, r1, r3
  406030:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  406034:	ea4f 3101 	mov.w	r1, r1, lsl #12
  406038:	f000 8088 	beq.w	40614c <__aeabi_ddiv+0x144>
  40603c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  406040:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  406044:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  406048:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40604c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  406050:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  406054:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  406058:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40605c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  406060:	429d      	cmp	r5, r3
  406062:	bf08      	it	eq
  406064:	4296      	cmpeq	r6, r2
  406066:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40606a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40606e:	d202      	bcs.n	406076 <__aeabi_ddiv+0x6e>
  406070:	085b      	lsrs	r3, r3, #1
  406072:	ea4f 0232 	mov.w	r2, r2, rrx
  406076:	1ab6      	subs	r6, r6, r2
  406078:	eb65 0503 	sbc.w	r5, r5, r3
  40607c:	085b      	lsrs	r3, r3, #1
  40607e:	ea4f 0232 	mov.w	r2, r2, rrx
  406082:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  406086:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40608a:	ebb6 0e02 	subs.w	lr, r6, r2
  40608e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406092:	bf22      	ittt	cs
  406094:	1ab6      	subcs	r6, r6, r2
  406096:	4675      	movcs	r5, lr
  406098:	ea40 000c 	orrcs.w	r0, r0, ip
  40609c:	085b      	lsrs	r3, r3, #1
  40609e:	ea4f 0232 	mov.w	r2, r2, rrx
  4060a2:	ebb6 0e02 	subs.w	lr, r6, r2
  4060a6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4060aa:	bf22      	ittt	cs
  4060ac:	1ab6      	subcs	r6, r6, r2
  4060ae:	4675      	movcs	r5, lr
  4060b0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4060b4:	085b      	lsrs	r3, r3, #1
  4060b6:	ea4f 0232 	mov.w	r2, r2, rrx
  4060ba:	ebb6 0e02 	subs.w	lr, r6, r2
  4060be:	eb75 0e03 	sbcs.w	lr, r5, r3
  4060c2:	bf22      	ittt	cs
  4060c4:	1ab6      	subcs	r6, r6, r2
  4060c6:	4675      	movcs	r5, lr
  4060c8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4060cc:	085b      	lsrs	r3, r3, #1
  4060ce:	ea4f 0232 	mov.w	r2, r2, rrx
  4060d2:	ebb6 0e02 	subs.w	lr, r6, r2
  4060d6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4060da:	bf22      	ittt	cs
  4060dc:	1ab6      	subcs	r6, r6, r2
  4060de:	4675      	movcs	r5, lr
  4060e0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4060e4:	ea55 0e06 	orrs.w	lr, r5, r6
  4060e8:	d018      	beq.n	40611c <__aeabi_ddiv+0x114>
  4060ea:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4060ee:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4060f2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4060f6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4060fa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4060fe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  406102:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  406106:	d1c0      	bne.n	40608a <__aeabi_ddiv+0x82>
  406108:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40610c:	d10b      	bne.n	406126 <__aeabi_ddiv+0x11e>
  40610e:	ea41 0100 	orr.w	r1, r1, r0
  406112:	f04f 0000 	mov.w	r0, #0
  406116:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40611a:	e7b6      	b.n	40608a <__aeabi_ddiv+0x82>
  40611c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  406120:	bf04      	itt	eq
  406122:	4301      	orreq	r1, r0
  406124:	2000      	moveq	r0, #0
  406126:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40612a:	bf88      	it	hi
  40612c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  406130:	f63f aeaf 	bhi.w	405e92 <__aeabi_dmul+0xde>
  406134:	ebb5 0c03 	subs.w	ip, r5, r3
  406138:	bf04      	itt	eq
  40613a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40613e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  406142:	f150 0000 	adcs.w	r0, r0, #0
  406146:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40614a:	bd70      	pop	{r4, r5, r6, pc}
  40614c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  406150:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  406154:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  406158:	bfc2      	ittt	gt
  40615a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40615e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406162:	bd70      	popgt	{r4, r5, r6, pc}
  406164:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  406168:	f04f 0e00 	mov.w	lr, #0
  40616c:	3c01      	subs	r4, #1
  40616e:	e690      	b.n	405e92 <__aeabi_dmul+0xde>
  406170:	ea45 0e06 	orr.w	lr, r5, r6
  406174:	e68d      	b.n	405e92 <__aeabi_dmul+0xde>
  406176:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40617a:	ea94 0f0c 	teq	r4, ip
  40617e:	bf08      	it	eq
  406180:	ea95 0f0c 	teqeq	r5, ip
  406184:	f43f af3b 	beq.w	405ffe <__aeabi_dmul+0x24a>
  406188:	ea94 0f0c 	teq	r4, ip
  40618c:	d10a      	bne.n	4061a4 <__aeabi_ddiv+0x19c>
  40618e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  406192:	f47f af34 	bne.w	405ffe <__aeabi_dmul+0x24a>
  406196:	ea95 0f0c 	teq	r5, ip
  40619a:	f47f af25 	bne.w	405fe8 <__aeabi_dmul+0x234>
  40619e:	4610      	mov	r0, r2
  4061a0:	4619      	mov	r1, r3
  4061a2:	e72c      	b.n	405ffe <__aeabi_dmul+0x24a>
  4061a4:	ea95 0f0c 	teq	r5, ip
  4061a8:	d106      	bne.n	4061b8 <__aeabi_ddiv+0x1b0>
  4061aa:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4061ae:	f43f aefd 	beq.w	405fac <__aeabi_dmul+0x1f8>
  4061b2:	4610      	mov	r0, r2
  4061b4:	4619      	mov	r1, r3
  4061b6:	e722      	b.n	405ffe <__aeabi_dmul+0x24a>
  4061b8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4061bc:	bf18      	it	ne
  4061be:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4061c2:	f47f aec5 	bne.w	405f50 <__aeabi_dmul+0x19c>
  4061c6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4061ca:	f47f af0d 	bne.w	405fe8 <__aeabi_dmul+0x234>
  4061ce:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4061d2:	f47f aeeb 	bne.w	405fac <__aeabi_dmul+0x1f8>
  4061d6:	e712      	b.n	405ffe <__aeabi_dmul+0x24a>

004061d8 <__gedf2>:
  4061d8:	f04f 3cff 	mov.w	ip, #4294967295
  4061dc:	e006      	b.n	4061ec <__cmpdf2+0x4>
  4061de:	bf00      	nop

004061e0 <__ledf2>:
  4061e0:	f04f 0c01 	mov.w	ip, #1
  4061e4:	e002      	b.n	4061ec <__cmpdf2+0x4>
  4061e6:	bf00      	nop

004061e8 <__cmpdf2>:
  4061e8:	f04f 0c01 	mov.w	ip, #1
  4061ec:	f84d cd04 	str.w	ip, [sp, #-4]!
  4061f0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4061f4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4061f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4061fc:	bf18      	it	ne
  4061fe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406202:	d01b      	beq.n	40623c <__cmpdf2+0x54>
  406204:	b001      	add	sp, #4
  406206:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40620a:	bf0c      	ite	eq
  40620c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406210:	ea91 0f03 	teqne	r1, r3
  406214:	bf02      	ittt	eq
  406216:	ea90 0f02 	teqeq	r0, r2
  40621a:	2000      	moveq	r0, #0
  40621c:	4770      	bxeq	lr
  40621e:	f110 0f00 	cmn.w	r0, #0
  406222:	ea91 0f03 	teq	r1, r3
  406226:	bf58      	it	pl
  406228:	4299      	cmppl	r1, r3
  40622a:	bf08      	it	eq
  40622c:	4290      	cmpeq	r0, r2
  40622e:	bf2c      	ite	cs
  406230:	17d8      	asrcs	r0, r3, #31
  406232:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406236:	f040 0001 	orr.w	r0, r0, #1
  40623a:	4770      	bx	lr
  40623c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406240:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406244:	d102      	bne.n	40624c <__cmpdf2+0x64>
  406246:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40624a:	d107      	bne.n	40625c <__cmpdf2+0x74>
  40624c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406250:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406254:	d1d6      	bne.n	406204 <__cmpdf2+0x1c>
  406256:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40625a:	d0d3      	beq.n	406204 <__cmpdf2+0x1c>
  40625c:	f85d 0b04 	ldr.w	r0, [sp], #4
  406260:	4770      	bx	lr
  406262:	bf00      	nop

00406264 <__aeabi_cdrcmple>:
  406264:	4684      	mov	ip, r0
  406266:	4610      	mov	r0, r2
  406268:	4662      	mov	r2, ip
  40626a:	468c      	mov	ip, r1
  40626c:	4619      	mov	r1, r3
  40626e:	4663      	mov	r3, ip
  406270:	e000      	b.n	406274 <__aeabi_cdcmpeq>
  406272:	bf00      	nop

00406274 <__aeabi_cdcmpeq>:
  406274:	b501      	push	{r0, lr}
  406276:	f7ff ffb7 	bl	4061e8 <__cmpdf2>
  40627a:	2800      	cmp	r0, #0
  40627c:	bf48      	it	mi
  40627e:	f110 0f00 	cmnmi.w	r0, #0
  406282:	bd01      	pop	{r0, pc}

00406284 <__aeabi_dcmpeq>:
  406284:	f84d ed08 	str.w	lr, [sp, #-8]!
  406288:	f7ff fff4 	bl	406274 <__aeabi_cdcmpeq>
  40628c:	bf0c      	ite	eq
  40628e:	2001      	moveq	r0, #1
  406290:	2000      	movne	r0, #0
  406292:	f85d fb08 	ldr.w	pc, [sp], #8
  406296:	bf00      	nop

00406298 <__aeabi_dcmplt>:
  406298:	f84d ed08 	str.w	lr, [sp, #-8]!
  40629c:	f7ff ffea 	bl	406274 <__aeabi_cdcmpeq>
  4062a0:	bf34      	ite	cc
  4062a2:	2001      	movcc	r0, #1
  4062a4:	2000      	movcs	r0, #0
  4062a6:	f85d fb08 	ldr.w	pc, [sp], #8
  4062aa:	bf00      	nop

004062ac <__aeabi_dcmple>:
  4062ac:	f84d ed08 	str.w	lr, [sp, #-8]!
  4062b0:	f7ff ffe0 	bl	406274 <__aeabi_cdcmpeq>
  4062b4:	bf94      	ite	ls
  4062b6:	2001      	movls	r0, #1
  4062b8:	2000      	movhi	r0, #0
  4062ba:	f85d fb08 	ldr.w	pc, [sp], #8
  4062be:	bf00      	nop

004062c0 <__aeabi_dcmpge>:
  4062c0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4062c4:	f7ff ffce 	bl	406264 <__aeabi_cdrcmple>
  4062c8:	bf94      	ite	ls
  4062ca:	2001      	movls	r0, #1
  4062cc:	2000      	movhi	r0, #0
  4062ce:	f85d fb08 	ldr.w	pc, [sp], #8
  4062d2:	bf00      	nop

004062d4 <__aeabi_dcmpgt>:
  4062d4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4062d8:	f7ff ffc4 	bl	406264 <__aeabi_cdrcmple>
  4062dc:	bf34      	ite	cc
  4062de:	2001      	movcc	r0, #1
  4062e0:	2000      	movcs	r0, #0
  4062e2:	f85d fb08 	ldr.w	pc, [sp], #8
  4062e6:	bf00      	nop

004062e8 <__aeabi_dcmpun>:
  4062e8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4062ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4062f0:	d102      	bne.n	4062f8 <__aeabi_dcmpun+0x10>
  4062f2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4062f6:	d10a      	bne.n	40630e <__aeabi_dcmpun+0x26>
  4062f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4062fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406300:	d102      	bne.n	406308 <__aeabi_dcmpun+0x20>
  406302:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406306:	d102      	bne.n	40630e <__aeabi_dcmpun+0x26>
  406308:	f04f 0000 	mov.w	r0, #0
  40630c:	4770      	bx	lr
  40630e:	f04f 0001 	mov.w	r0, #1
  406312:	4770      	bx	lr

00406314 <__aeabi_d2iz>:
  406314:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406318:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40631c:	d215      	bcs.n	40634a <__aeabi_d2iz+0x36>
  40631e:	d511      	bpl.n	406344 <__aeabi_d2iz+0x30>
  406320:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406324:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406328:	d912      	bls.n	406350 <__aeabi_d2iz+0x3c>
  40632a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40632e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  406332:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406336:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40633a:	fa23 f002 	lsr.w	r0, r3, r2
  40633e:	bf18      	it	ne
  406340:	4240      	negne	r0, r0
  406342:	4770      	bx	lr
  406344:	f04f 0000 	mov.w	r0, #0
  406348:	4770      	bx	lr
  40634a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40634e:	d105      	bne.n	40635c <__aeabi_d2iz+0x48>
  406350:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406354:	bf08      	it	eq
  406356:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40635a:	4770      	bx	lr
  40635c:	f04f 0000 	mov.w	r0, #0
  406360:	4770      	bx	lr
  406362:	bf00      	nop

00406364 <__aeabi_uldivmod>:
  406364:	b953      	cbnz	r3, 40637c <__aeabi_uldivmod+0x18>
  406366:	b94a      	cbnz	r2, 40637c <__aeabi_uldivmod+0x18>
  406368:	2900      	cmp	r1, #0
  40636a:	bf08      	it	eq
  40636c:	2800      	cmpeq	r0, #0
  40636e:	bf1c      	itt	ne
  406370:	f04f 31ff 	movne.w	r1, #4294967295
  406374:	f04f 30ff 	movne.w	r0, #4294967295
  406378:	f000 b97a 	b.w	406670 <__aeabi_idiv0>
  40637c:	f1ad 0c08 	sub.w	ip, sp, #8
  406380:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406384:	f000 f806 	bl	406394 <__udivmoddi4>
  406388:	f8dd e004 	ldr.w	lr, [sp, #4]
  40638c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406390:	b004      	add	sp, #16
  406392:	4770      	bx	lr

00406394 <__udivmoddi4>:
  406394:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406398:	468c      	mov	ip, r1
  40639a:	460d      	mov	r5, r1
  40639c:	4604      	mov	r4, r0
  40639e:	9e08      	ldr	r6, [sp, #32]
  4063a0:	2b00      	cmp	r3, #0
  4063a2:	d151      	bne.n	406448 <__udivmoddi4+0xb4>
  4063a4:	428a      	cmp	r2, r1
  4063a6:	4617      	mov	r7, r2
  4063a8:	d96d      	bls.n	406486 <__udivmoddi4+0xf2>
  4063aa:	fab2 fe82 	clz	lr, r2
  4063ae:	f1be 0f00 	cmp.w	lr, #0
  4063b2:	d00b      	beq.n	4063cc <__udivmoddi4+0x38>
  4063b4:	f1ce 0c20 	rsb	ip, lr, #32
  4063b8:	fa01 f50e 	lsl.w	r5, r1, lr
  4063bc:	fa20 fc0c 	lsr.w	ip, r0, ip
  4063c0:	fa02 f70e 	lsl.w	r7, r2, lr
  4063c4:	ea4c 0c05 	orr.w	ip, ip, r5
  4063c8:	fa00 f40e 	lsl.w	r4, r0, lr
  4063cc:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  4063d0:	0c25      	lsrs	r5, r4, #16
  4063d2:	fbbc f8fa 	udiv	r8, ip, sl
  4063d6:	fa1f f987 	uxth.w	r9, r7
  4063da:	fb0a cc18 	mls	ip, sl, r8, ip
  4063de:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4063e2:	fb08 f309 	mul.w	r3, r8, r9
  4063e6:	42ab      	cmp	r3, r5
  4063e8:	d90a      	bls.n	406400 <__udivmoddi4+0x6c>
  4063ea:	19ed      	adds	r5, r5, r7
  4063ec:	f108 32ff 	add.w	r2, r8, #4294967295
  4063f0:	f080 8123 	bcs.w	40663a <__udivmoddi4+0x2a6>
  4063f4:	42ab      	cmp	r3, r5
  4063f6:	f240 8120 	bls.w	40663a <__udivmoddi4+0x2a6>
  4063fa:	f1a8 0802 	sub.w	r8, r8, #2
  4063fe:	443d      	add	r5, r7
  406400:	1aed      	subs	r5, r5, r3
  406402:	b2a4      	uxth	r4, r4
  406404:	fbb5 f0fa 	udiv	r0, r5, sl
  406408:	fb0a 5510 	mls	r5, sl, r0, r5
  40640c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406410:	fb00 f909 	mul.w	r9, r0, r9
  406414:	45a1      	cmp	r9, r4
  406416:	d909      	bls.n	40642c <__udivmoddi4+0x98>
  406418:	19e4      	adds	r4, r4, r7
  40641a:	f100 33ff 	add.w	r3, r0, #4294967295
  40641e:	f080 810a 	bcs.w	406636 <__udivmoddi4+0x2a2>
  406422:	45a1      	cmp	r9, r4
  406424:	f240 8107 	bls.w	406636 <__udivmoddi4+0x2a2>
  406428:	3802      	subs	r0, #2
  40642a:	443c      	add	r4, r7
  40642c:	eba4 0409 	sub.w	r4, r4, r9
  406430:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406434:	2100      	movs	r1, #0
  406436:	2e00      	cmp	r6, #0
  406438:	d061      	beq.n	4064fe <__udivmoddi4+0x16a>
  40643a:	fa24 f40e 	lsr.w	r4, r4, lr
  40643e:	2300      	movs	r3, #0
  406440:	6034      	str	r4, [r6, #0]
  406442:	6073      	str	r3, [r6, #4]
  406444:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406448:	428b      	cmp	r3, r1
  40644a:	d907      	bls.n	40645c <__udivmoddi4+0xc8>
  40644c:	2e00      	cmp	r6, #0
  40644e:	d054      	beq.n	4064fa <__udivmoddi4+0x166>
  406450:	2100      	movs	r1, #0
  406452:	e886 0021 	stmia.w	r6, {r0, r5}
  406456:	4608      	mov	r0, r1
  406458:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40645c:	fab3 f183 	clz	r1, r3
  406460:	2900      	cmp	r1, #0
  406462:	f040 808e 	bne.w	406582 <__udivmoddi4+0x1ee>
  406466:	42ab      	cmp	r3, r5
  406468:	d302      	bcc.n	406470 <__udivmoddi4+0xdc>
  40646a:	4282      	cmp	r2, r0
  40646c:	f200 80fa 	bhi.w	406664 <__udivmoddi4+0x2d0>
  406470:	1a84      	subs	r4, r0, r2
  406472:	eb65 0503 	sbc.w	r5, r5, r3
  406476:	2001      	movs	r0, #1
  406478:	46ac      	mov	ip, r5
  40647a:	2e00      	cmp	r6, #0
  40647c:	d03f      	beq.n	4064fe <__udivmoddi4+0x16a>
  40647e:	e886 1010 	stmia.w	r6, {r4, ip}
  406482:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406486:	b912      	cbnz	r2, 40648e <__udivmoddi4+0xfa>
  406488:	2701      	movs	r7, #1
  40648a:	fbb7 f7f2 	udiv	r7, r7, r2
  40648e:	fab7 fe87 	clz	lr, r7
  406492:	f1be 0f00 	cmp.w	lr, #0
  406496:	d134      	bne.n	406502 <__udivmoddi4+0x16e>
  406498:	1beb      	subs	r3, r5, r7
  40649a:	0c3a      	lsrs	r2, r7, #16
  40649c:	fa1f fc87 	uxth.w	ip, r7
  4064a0:	2101      	movs	r1, #1
  4064a2:	fbb3 f8f2 	udiv	r8, r3, r2
  4064a6:	0c25      	lsrs	r5, r4, #16
  4064a8:	fb02 3318 	mls	r3, r2, r8, r3
  4064ac:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4064b0:	fb0c f308 	mul.w	r3, ip, r8
  4064b4:	42ab      	cmp	r3, r5
  4064b6:	d907      	bls.n	4064c8 <__udivmoddi4+0x134>
  4064b8:	19ed      	adds	r5, r5, r7
  4064ba:	f108 30ff 	add.w	r0, r8, #4294967295
  4064be:	d202      	bcs.n	4064c6 <__udivmoddi4+0x132>
  4064c0:	42ab      	cmp	r3, r5
  4064c2:	f200 80d1 	bhi.w	406668 <__udivmoddi4+0x2d4>
  4064c6:	4680      	mov	r8, r0
  4064c8:	1aed      	subs	r5, r5, r3
  4064ca:	b2a3      	uxth	r3, r4
  4064cc:	fbb5 f0f2 	udiv	r0, r5, r2
  4064d0:	fb02 5510 	mls	r5, r2, r0, r5
  4064d4:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4064d8:	fb0c fc00 	mul.w	ip, ip, r0
  4064dc:	45a4      	cmp	ip, r4
  4064de:	d907      	bls.n	4064f0 <__udivmoddi4+0x15c>
  4064e0:	19e4      	adds	r4, r4, r7
  4064e2:	f100 33ff 	add.w	r3, r0, #4294967295
  4064e6:	d202      	bcs.n	4064ee <__udivmoddi4+0x15a>
  4064e8:	45a4      	cmp	ip, r4
  4064ea:	f200 80b8 	bhi.w	40665e <__udivmoddi4+0x2ca>
  4064ee:	4618      	mov	r0, r3
  4064f0:	eba4 040c 	sub.w	r4, r4, ip
  4064f4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4064f8:	e79d      	b.n	406436 <__udivmoddi4+0xa2>
  4064fa:	4631      	mov	r1, r6
  4064fc:	4630      	mov	r0, r6
  4064fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406502:	f1ce 0420 	rsb	r4, lr, #32
  406506:	fa05 f30e 	lsl.w	r3, r5, lr
  40650a:	fa07 f70e 	lsl.w	r7, r7, lr
  40650e:	fa20 f804 	lsr.w	r8, r0, r4
  406512:	0c3a      	lsrs	r2, r7, #16
  406514:	fa25 f404 	lsr.w	r4, r5, r4
  406518:	ea48 0803 	orr.w	r8, r8, r3
  40651c:	fbb4 f1f2 	udiv	r1, r4, r2
  406520:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406524:	fb02 4411 	mls	r4, r2, r1, r4
  406528:	fa1f fc87 	uxth.w	ip, r7
  40652c:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406530:	fb01 f30c 	mul.w	r3, r1, ip
  406534:	42ab      	cmp	r3, r5
  406536:	fa00 f40e 	lsl.w	r4, r0, lr
  40653a:	d909      	bls.n	406550 <__udivmoddi4+0x1bc>
  40653c:	19ed      	adds	r5, r5, r7
  40653e:	f101 30ff 	add.w	r0, r1, #4294967295
  406542:	f080 808a 	bcs.w	40665a <__udivmoddi4+0x2c6>
  406546:	42ab      	cmp	r3, r5
  406548:	f240 8087 	bls.w	40665a <__udivmoddi4+0x2c6>
  40654c:	3902      	subs	r1, #2
  40654e:	443d      	add	r5, r7
  406550:	1aeb      	subs	r3, r5, r3
  406552:	fa1f f588 	uxth.w	r5, r8
  406556:	fbb3 f0f2 	udiv	r0, r3, r2
  40655a:	fb02 3310 	mls	r3, r2, r0, r3
  40655e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406562:	fb00 f30c 	mul.w	r3, r0, ip
  406566:	42ab      	cmp	r3, r5
  406568:	d907      	bls.n	40657a <__udivmoddi4+0x1e6>
  40656a:	19ed      	adds	r5, r5, r7
  40656c:	f100 38ff 	add.w	r8, r0, #4294967295
  406570:	d26f      	bcs.n	406652 <__udivmoddi4+0x2be>
  406572:	42ab      	cmp	r3, r5
  406574:	d96d      	bls.n	406652 <__udivmoddi4+0x2be>
  406576:	3802      	subs	r0, #2
  406578:	443d      	add	r5, r7
  40657a:	1aeb      	subs	r3, r5, r3
  40657c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406580:	e78f      	b.n	4064a2 <__udivmoddi4+0x10e>
  406582:	f1c1 0720 	rsb	r7, r1, #32
  406586:	fa22 f807 	lsr.w	r8, r2, r7
  40658a:	408b      	lsls	r3, r1
  40658c:	fa05 f401 	lsl.w	r4, r5, r1
  406590:	ea48 0303 	orr.w	r3, r8, r3
  406594:	fa20 fe07 	lsr.w	lr, r0, r7
  406598:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40659c:	40fd      	lsrs	r5, r7
  40659e:	ea4e 0e04 	orr.w	lr, lr, r4
  4065a2:	fbb5 f9fc 	udiv	r9, r5, ip
  4065a6:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4065aa:	fb0c 5519 	mls	r5, ip, r9, r5
  4065ae:	fa1f f883 	uxth.w	r8, r3
  4065b2:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4065b6:	fb09 f408 	mul.w	r4, r9, r8
  4065ba:	42ac      	cmp	r4, r5
  4065bc:	fa02 f201 	lsl.w	r2, r2, r1
  4065c0:	fa00 fa01 	lsl.w	sl, r0, r1
  4065c4:	d908      	bls.n	4065d8 <__udivmoddi4+0x244>
  4065c6:	18ed      	adds	r5, r5, r3
  4065c8:	f109 30ff 	add.w	r0, r9, #4294967295
  4065cc:	d243      	bcs.n	406656 <__udivmoddi4+0x2c2>
  4065ce:	42ac      	cmp	r4, r5
  4065d0:	d941      	bls.n	406656 <__udivmoddi4+0x2c2>
  4065d2:	f1a9 0902 	sub.w	r9, r9, #2
  4065d6:	441d      	add	r5, r3
  4065d8:	1b2d      	subs	r5, r5, r4
  4065da:	fa1f fe8e 	uxth.w	lr, lr
  4065de:	fbb5 f0fc 	udiv	r0, r5, ip
  4065e2:	fb0c 5510 	mls	r5, ip, r0, r5
  4065e6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4065ea:	fb00 f808 	mul.w	r8, r0, r8
  4065ee:	45a0      	cmp	r8, r4
  4065f0:	d907      	bls.n	406602 <__udivmoddi4+0x26e>
  4065f2:	18e4      	adds	r4, r4, r3
  4065f4:	f100 35ff 	add.w	r5, r0, #4294967295
  4065f8:	d229      	bcs.n	40664e <__udivmoddi4+0x2ba>
  4065fa:	45a0      	cmp	r8, r4
  4065fc:	d927      	bls.n	40664e <__udivmoddi4+0x2ba>
  4065fe:	3802      	subs	r0, #2
  406600:	441c      	add	r4, r3
  406602:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406606:	eba4 0408 	sub.w	r4, r4, r8
  40660a:	fba0 8902 	umull	r8, r9, r0, r2
  40660e:	454c      	cmp	r4, r9
  406610:	46c6      	mov	lr, r8
  406612:	464d      	mov	r5, r9
  406614:	d315      	bcc.n	406642 <__udivmoddi4+0x2ae>
  406616:	d012      	beq.n	40663e <__udivmoddi4+0x2aa>
  406618:	b156      	cbz	r6, 406630 <__udivmoddi4+0x29c>
  40661a:	ebba 030e 	subs.w	r3, sl, lr
  40661e:	eb64 0405 	sbc.w	r4, r4, r5
  406622:	fa04 f707 	lsl.w	r7, r4, r7
  406626:	40cb      	lsrs	r3, r1
  406628:	431f      	orrs	r7, r3
  40662a:	40cc      	lsrs	r4, r1
  40662c:	6037      	str	r7, [r6, #0]
  40662e:	6074      	str	r4, [r6, #4]
  406630:	2100      	movs	r1, #0
  406632:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406636:	4618      	mov	r0, r3
  406638:	e6f8      	b.n	40642c <__udivmoddi4+0x98>
  40663a:	4690      	mov	r8, r2
  40663c:	e6e0      	b.n	406400 <__udivmoddi4+0x6c>
  40663e:	45c2      	cmp	sl, r8
  406640:	d2ea      	bcs.n	406618 <__udivmoddi4+0x284>
  406642:	ebb8 0e02 	subs.w	lr, r8, r2
  406646:	eb69 0503 	sbc.w	r5, r9, r3
  40664a:	3801      	subs	r0, #1
  40664c:	e7e4      	b.n	406618 <__udivmoddi4+0x284>
  40664e:	4628      	mov	r0, r5
  406650:	e7d7      	b.n	406602 <__udivmoddi4+0x26e>
  406652:	4640      	mov	r0, r8
  406654:	e791      	b.n	40657a <__udivmoddi4+0x1e6>
  406656:	4681      	mov	r9, r0
  406658:	e7be      	b.n	4065d8 <__udivmoddi4+0x244>
  40665a:	4601      	mov	r1, r0
  40665c:	e778      	b.n	406550 <__udivmoddi4+0x1bc>
  40665e:	3802      	subs	r0, #2
  406660:	443c      	add	r4, r7
  406662:	e745      	b.n	4064f0 <__udivmoddi4+0x15c>
  406664:	4608      	mov	r0, r1
  406666:	e708      	b.n	40647a <__udivmoddi4+0xe6>
  406668:	f1a8 0802 	sub.w	r8, r8, #2
  40666c:	443d      	add	r5, r7
  40666e:	e72b      	b.n	4064c8 <__udivmoddi4+0x134>

00406670 <__aeabi_idiv0>:
  406670:	4770      	bx	lr
  406672:	bf00      	nop

00406674 <sysfont_glyphs>:
	...
  406680:	c00f f01f f038 f870 f871 fc61 dc63 9c63     ....8.p.q.a.c.c.
  406690:	9c67 1c67 1c7f 187e 387e 703c f01c c00f     g.g...~.~8<p....
	...
  4066b4:	0000 800f 807f 807f 8063 8003 8003 8003     ........c.......
  4066c4:	8003 8003 8003 8003 8003 8003 8003 8003     ................
  4066d4:	fc7f 0000 0000 0000 0000 0000 0000 0000     ................
	...
  4066ec:	e01f f07f 3030 3800 3800 3800 7000 f000     ....00.8.8.8.p..
  4066fc:	e001 c003 c007 800f 001f 003c 0078 f87f     ..........<.x...
	...
  406720:	0000 e03f f03d 7000 3000 3000 7000 e003     ..?.=..p.0.0.p..
  406730:	e00f f00b 3800 3800 1800 3800 3800 f078     .....8.8...8.8x.
  406740:	e07f 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406758:	7000 f000 f001 f003 f003 7007 700f 701e     .p.........p.p.p
  406768:	701c 703c 7078 f87f 7000 7000 7000 7000     .p<pxp...p.p.p.p
	...
  40678c:	0000 f01f 0018 0038 0038 0038 0038 e03f     ......8.8.8.8.?.
  40679c:	f01d 7800 3800 3800 3800 7800 f07d f07f     ...x.8.8.8.x}...
  4067ac:	c03f 0000 0000 0000 0000 0000 0000 0000     ?...............
	...
  4067c4:	0000 e003 c007 001e 003c 0038 e07f f07e     ........<.8...~.
  4067d4:	3878 1870 1c70 1c70 3870 3838 f03c e00f     x8p.p.p.p888<...
	...
  4067fc:	f87f 3800 3800 7000 7000 e000 e000 c001     ...8.8.p.p......
  40680c:	c001 c003 8003 8003 0007 0007 000e 0000     ................
	...
  406830:	e01f f03e 3830 3870 783c f03f e01f e00f     ..>.08p8<x?.....
  406840:	f03f f87f 7878 1c70 1c70 3870 783c e01f     ?...xxp.p.p8<x..
	...
  406864:	0000 e00f f03e 7038 3870 3870 1870 3870     ....>.8pp8p8p.p8
  406874:	7878 f83f f81f 7800 7000 e000 c003 801f     xx?....x.p......
  406884:	003e 0000 0000 0000 0000 0000 0000 0000     >...............
	...
  4068a4:	0000 8007 8007 8007 8007 0000 0000 0000     ................
  4068b4:	8007 8007 8007 8007 0000 0000 0000 0000     ................
	...
  4068dc:	8003 c007 c007 8003 0000 0000 0000 0000     ................
  4068ec:	c003 8007 8007 8007 0007 0007 0000 0000     ................
	...
  40690c:	1800 7800 f801 f003 c00f 003f 007c 007c     ...x......?.|.|.
  40691c:	003f c00f f003 f801 7800 1800 0000 0000     ?........x......
	...
  40694c:	f87f 0000 0000 0000 f87f 0000 0000 0000     ................
	...
  406978:	0060 0078 007e 801f e007 f003 f800 f800     `.x.~...........
  406988:	f003 e007 801f 007e 0078 0070 0000 0000     ......~.x.p.....
	...
  4069a8:	e01f f01c 7018 7000 7000 7000 e000 e001     .....p.p.p.p....
  4069b8:	c003 8003 0003 0000 0000 8007 8007 8007     ................
  4069c8:	8007 0000 0000 0000 0000 0000 0000 0000     ................
	...
  4069e4:	e00f f01f 381c 3838 f837 f87f d87c d86c     .....8887...|.l.
  4069f4:	d87c d86c f87f f07f 0030 0038 e01e e00f     |.l.....0.8.....
	...
  406a14:	8003 8007 8007 c007 c00f c00f e00e e00c     ................
  406a24:	e01c e01c f01f 7038 7038 3838 3870 3870     ......8p8p88p8p8
  406a34:	1870 0000 0000 0000 0000 0000 0000 0000     p...............
  406a44:	0000 0000 0000 c07f e071 7070 3070 3070     ........q.ppp0p0
  406a54:	7070 f077 e07f f073 7870 3870 1870 1870     ppw...s.pxp8p.p.
  406a64:	3870 7870 f071 c07f 0000 0000 0000 0000     p8pxq...........
	...
  406a80:	f807 381f 003c 0038 0070 0070 0060 0060     ...8<.8.p.p.`.`.
  406a90:	00e0 0060 0060 0070 0070 0038 003c 3c1f     ..`.`.p.p.8.<..<
  406aa0:	fc07 0000 0000 0000 0000 0000 0000 0000     ................
  406ab0:	0000 0000 0000 807f e063 f060 7060 3860     ........c.`.`p`8
  406ac0:	1860 1c60 1c60 1c60 1c60 1c60 1860 3860     `.`.`.`.`.`.`.`8
  406ad0:	3860 7060 e063 c07f 0000 0000 0000 0000     `8`pc...........
	...
  406aec:	f87f 0070 0070 0070 0070 0070 0070 0070     ..p.p.p.p.p.p.p.
  406afc:	f07f 0070 0070 0070 0070 0070 0070 0070     ..p.p.p.p.p.p.p.
  406b0c:	f87f 0000 0000 0000 0000 0000 0000 0000     ................
  406b1c:	0000 0000 0000 f87f 0070 0070 0070 0070     ........p.p.p.p.
  406b2c:	0070 0070 0070 f07f 0070 0070 0070 0070     p.p.p...p.p.p.p.
  406b3c:	0070 0070 0070 0070 0000 0000 0000 0000     p.p.p.p.........
	...
  406b58:	f807 301e 001c 0038 0070 0070 0070 0060     ...0..8.p.p.p.`.
  406b68:	fc61 1c60 1c70 1c70 1c70 1c38 1c3c 7c1e     a.`.p.p.p.8.<..|
  406b78:	f007 0000 0000 0000 0000 0000 0000 0000     ................
  406b88:	0000 0000 0000 1870 1870 1870 1870 1870     ......p.p.p.p.p.
  406b98:	1870 1870 1870 f87f 1870 1870 1870 1870     p.p.p...p.p.p.p.
  406ba8:	1870 1870 1870 1870 0000 0000 0000 0000     p.p.p.p.........
	...
  406bc4:	f87f 8003 8003 8003 8003 8003 8003 8003     ................
  406bd4:	8003 8003 8003 8003 8003 8003 8003 8003     ................
  406be4:	fc7f 0000 0000 0000 0000 0000 0000 0000     ................
  406bf4:	0000 0000 0000 f83f 1800 1800 1800 1800     ......?.........
  406c04:	1800 1800 1800 1800 1800 1800 1800 3800     ...............8
  406c14:	3800 7000 f00f c07f 0000 0000 0000 0000     .8.p............
	...
  406c30:	7860 f060 e061 c063 8063 0067 006f 007f     `x`.a.c.c.g.o...
  406c40:	807f 807b c071 e061 e060 7060 7060 3860     ..{.q.a.`.`p`p`8
  406c50:	3c60 0000 0000 0000 0000 0000 0000 0000     `<..............
  406c60:	0000 0000 0000 0070 0070 0070 0070 0070     ......p.p.p.p.p.
  406c70:	0070 0070 0070 0070 0070 0070 0070 0070     p.p.p.p.p.p.p.p.
  406c80:	0070 0070 0070 f87f 0000 0000 0000 0000     p.p.p...........
	...
  406c9c:	3c70 3c78 3c78 7c78 7c78 7c7c 7c7c fc7c     p<x<x<x|x||||||.
  406cac:	fc7c dc7e dc7e dc77 dc77 9c77 9c77 9c73     |.~.~.w.w.w.w.s.
  406cbc:	9c73 0000 0000 0000 0000 0000 0000 0000     s...............
  406ccc:	0000 0000 0000 1878 1878 187c 187c 187e     ......x.x.|.|.~.
  406cdc:	187e 1877 1877 9873 9873 d871 d871 f870     ~.w.w.s.s.q.q.p.
  406cec:	f870 7870 7870 3870 0000 0000 0000 0000     p.pxpxp8........
	...
  406d08:	c00f e01c 7038 3830 3870 1870 1c60 1c60     ....8p08p8p.`.`.
  406d18:	1c60 1c60 1c60 1870 3870 3830 7038 e01c     `.`.`.p.p8088p..
  406d28:	c00f 0000 0000 0000 0000 0000 0000 0000     ................
  406d38:	0000 0000 0000 e07f f071 7870 3870 1870     ........q.pxp8p.
  406d48:	1870 1870 3870 3870 7070 f077 c07f 0070     p.p.p8p8ppw...p.
  406d58:	0070 0070 0070 0070 0000 0000 0000 0000     p.p.p.p.........
	...
  406d74:	c00f e01c 7038 3830 3870 1870 1c60 1c60     ....8p08p8p.`.`.
  406d84:	1c60 1c60 1c70 1c70 3870 3878 7838 f01f     `.`.p.p.p8x88x..
  406d94:	e01f c007 8003 e003 f001 0000 0000 0000     ................
  406da4:	0000 0000 0000 c07f e071 7070 3070 3870     ........q.ppp0p8
  406db4:	3870 7070 7070 f077 e07f c071 e070 e070     p8ppppw...q.p.p.
  406dc4:	7070 7070 3870 3870 0000 0000 0000 0000     ppppp8p8........
	...
  406de0:	f80f 703c 0030 0070 0078 003c 003f c01f     ..<p0.p.x.<.?...
  406df0:	f007 f801 7800 1800 1800 3800 f87d f07f     .....x.....8}...
  406e00:	e03f 0000 0000 0000 0000 0000 0000 0000     ?...............
  406e10:	0000 0000 0000 fc7f 8003 8003 8003 8003     ................
  406e20:	8003 8003 8003 8003 8003 8003 8003 8003     ................
  406e30:	8003 8003 8003 8003 0000 0000 0000 0000     ................
	...
  406e4c:	1c70 1c70 1c70 1c70 1c70 1c70 1c70 1c70     p.p.p.p.p.p.p.p.
  406e5c:	1c70 1870 1870 1870 3870 3830 7038 f01c     p.p.p.p.p8088p..
  406e6c:	c00f 0000 0000 0000 0000 0000 0000 0000     ................
  406e7c:	0000 0000 0000 1c60 1870 3870 3830 3038     ......`.p.p80880
  406e8c:	7038 7038 701c e01c e01c e00e c00e c00f     8p8p.p..........
  406e9c:	c007 8007 8007 8003 0000 0000 0000 0000     ................
	...
  406eb8:	1c60 1c70 1870 1870 3870 b873 b833 b833     `.p.p.p.p8s.3.3.
  406ec8:	b83f f83f f03f f03f f03f f03e f01e f01c     ?.?.?.?.?.>.....
  406ed8:	f01c 0000 0000 0000 0000 0000 0000 0000     ................
  406ee8:	0000 0000 0000 3870 3838 7038 f01c e01c     ......p8888p....
  406ef8:	c00f c007 8007 8003 8007 c00f e00f e01c     ................
  406f08:	701c 7038 3838 3870 0000 0000 0000 0000     .p8p88p8........
	...
  406f24:	3870 3870 3038 7038 701c e01c e00e c00f     p8p8808p.p......
  406f34:	c007 8007 8007 8003 8003 8003 8003 8003     ................
  406f44:	8003 0000 0000 0000 0000 0000 0000 0000     ................
  406f54:	0000 0000 0000 f83f 3800 7000 f000 e000     ......?..8.p....
  406f64:	e001 c001 8003 8007 0007 000f 000e 001c     ................
  406f74:	003c 0038 0078 f87f 0000 0000 0000 0000     <.8.x...........
	...
  406f8c:	0000 c007 0007 0007 0007 0007 0007 0007     ................
  406f9c:	0007 0007 0007 0007 0007 0007 0007 0007     ................
  406fac:	0007 0007 0007 0007 c007 0000 0000 0000     ................
	...
  406fc4:	0070 0038 0038 001c 001c 000e 000e 0007     p.8.8...........
  406fd4:	0007 8003 8003 c001 c001 e000 e000 7000     ...............p
  406fe4:	7000 3800 3800 0000 0000 0000 0000 0000     .p.8.8..........
  406ff4:	0000 0000 0000 c007 c001 c001 c001 c001     ................
  407004:	c001 c001 c001 c001 c001 c001 c001 c001     ................
  407014:	c001 c001 c001 c001 c001 c001 c007 0000     ................
	...
  407030:	0000 8007 c007 c00f e01e 0000 0000 0000     ................
	...
  407088:	f87f 0000 0000 0000 0000 0000 0000 0000     ................
  407098:	0000 0000 0006 800f c00f c001 0000 0000     ................
	...
  4070dc:	0000 e03f f01c 3800 3800 3800 f81f 783e     ..?....8.8.8..>x
  4070ec:	3838 3830 7830 f839 f81f 0000 0000 0000     88080x9.........
	...
  407108:	0070 0070 0070 0070 0070 0070 e07f f078     p.p.p.p.p.p...x.
  407118:	7070 3870 3870 1870 1870 3870 3870 7070     ppp8p8p.p.p8p8pp
  407128:	e071 c07f 0000 0000 0000 0000 0000 0000     q...............
	...
  407148:	0000 f00f 301e 0038 0038 0070 0070 0070     .....08.8.p.p.p.
  407158:	0070 0038 003c 381e f80f 0000 0000 0000     p.8.<..8........
	...
  407174:	1800 1800 1800 1800 1800 1800 f807 781f     ...............x
  407184:	183c 1838 1830 1870 1870 1870 1830 1838     <.8.0.p.p.p.0.8.
  407194:	781e f80f 0000 0000 0000 0000 0000 0000     .x..............
	...
  4071b4:	0000 e00f f03c 7838 3870 3870 f87f 0070     ....<.8xp8p8..p.
  4071c4:	0070 0070 0038 783e f80f 0000 0000 0000     p.p.8.>x........
	...
  4071e0:	f803 f807 0007 000e 000e 000e f87f 000e     ................
  4071f0:	000e 000e 000e 000e 000e 000e 000e 000e     ................
  407200:	000e f87f 0000 0000 0000 0000 0000 0000     ................
	...
  407220:	0000 f80f 781f 183c 1838 1870 1870 1870     .....x<.8.p.p.p.
  407230:	1870 1870 1838 781c f80f 3800 3800 f03d     p.p.8..x...8.8=.
  407240:	e03f 0000 0000 0000 0000 0000 0070 0070     ?...........p.p.
  407250:	0070 0070 0070 0070 e077 707e 3878 3870     p.p.p.p.w.~px8p8
  407260:	3870 3870 3870 3870 3870 3870 3870 3870     p8p8p8p8p8p8p8p8
	...
  407280:	0000 8007 8007 8007 0000 0000 0000 807f     ................
  407290:	8003 8003 8003 8003 8003 8003 8003 8003     ................
  4072a0:	8003 8003 fc7f 0000 0000 0000 0000 0000     ................
	...
  4072b8:	3800 3c00 3800 0000 0000 0000 f80f 1800     .8.<.8..........
  4072c8:	1800 1800 1800 1800 1800 1800 1800 1800     ................
  4072d8:	3800 3800 3800 7000 e00f c07f 0000 0000     .8.8.8.p........
  4072e8:	0000 0000 0000 0070 0070 0070 0070 0070     ......p.p.p.p.p.
  4072f8:	0070 7870 f071 c073 8077 807f 807f c07b     p.pxq.s.w.....{.
  407308:	e071 e070 f070 7870 3870 0000 0000 0000     q.p.p.pxp8......
	...
  407324:	007f 0003 0003 0003 0003 0003 0003 0003     ................
  407334:	0003 0003 0003 0003 0003 0003 0003 0003     ................
  407344:	0003 fc7f 0000 0000 0000 0000 0000 0000     ................
	...
  407364:	0070 f07f f87b b873 b873 b873 b873 b873     p...{.s.s.s.s.s.
  407374:	b873 b873 b873 b873 b873 0000 0000 0000     s.s.s.s.s.......
	...
  40739c:	e077 707e 3878 3870 3870 3870 3870 3870     w.~px8p8p8p8p8p8
  4073ac:	3870 3870 3870 3870 0000 0000 0000 0000     p8p8p8p8........
	...
  4073d0:	0000 e00f f01c 3838 3870 1870 1870 1870     ......88p8p.p.p.
  4073e0:	1870 3870 3038 f01c e00f 0000 0000 0000     p.p880..........
	...
  407408:	c07f f078 7070 3870 3870 3870 3870 3870     ..x.ppp8p8p8p8p8
  407418:	3870 7070 e071 c07f 0070 0070 0070 0070     p8ppq...p.p.p.p.
	...
  40743c:	0000 f807 781f 181c 1838 1830 1870 1870     .....x..8.0.p.p.
  40744c:	1870 1830 1838 781e f80f 1800 1800 1800     p.0.8..x........
  40745c:	1800 0000 0000 0000 0000 0000 0000 0000     ................
	...
  407474:	f87f 980f 000f 000e 000e 000e 000e 000e     ................
  407484:	000e 000e 000e e07f 0000 0000 0000 0000     ................
	...
  4074a8:	0000 f00f 301c 0018 003e 801f e01f f007     .....0..>.......
  4074b8:	f801 7800 3800 703c e03f 0000 0000 0000     ...x.8<p?.......
	...
  4074d8:	0000 0007 0007 0007 f87f 0007 0007 0007     ................
  4074e8:	0007 0007 0007 0007 0003 8003 e003 fc01     ................
	...
  407514:	0000 3870 3870 3870 3870 3870 3870 3870     ..p8p8p8p8p8p8p8
  407524:	3870 3830 3838 f83c f81f 0000 0000 0000     p80888<.........
	...
  40754c:	3870 3838 7038 7018 601c e01c e00e c00f     p8888p.p.`......
  40755c:	c00f 8007 8007 8003 0000 0000 0000 0000     ................
	...
  407580:	0000 b873 b873 b837 b837 b837 f03f f03f     ..s.s.7.7.7.?.?.
  407590:	f03e f01e f01e f01c f01c 0000 0000 0000     >...............
	...
  4075b8:	7838 703c e01c e00f c007 8007 8007 c00f     8x<p............
  4075c8:	e00f f01c 7038 3878 0000 0000 0000 0000     ....8px8........
	...
  4075ec:	0000 3870 3838 3038 701c 701c e00c e00e     ..p88880.p.p....
  4075fc:	c00e c007 c007 8003 8003 8003 0007 0007     ................
  40760c:	0006 000e 0000 0000 0000 0000 0000 0000     ................
	...
  407624:	f03f 7000 f000 e001 c003 8007 000f 000f     ?..p............
  407634:	001e 003c 0078 f87f 0000 0000 0000 0000     ..<.x...........
	...
  40764c:	c003 c003 0007 0007 0007 8003 c003 c001     ................
  40765c:	c001 c003 800f 800f c007 c001 c001 c003     ................
  40766c:	8003 0007 0007 0007 c003 c003 0000 0000     ................
  40767c:	0000 0000 0000 8003 8003 8003 8003 8003     ................
  40768c:	8003 8003 8003 8003 8003 8003 8003 8003     ................
  40769c:	8003 8003 8003 8003 8003 8003 8003 8003     ................
	...
  4076b8:	000f 800f 8003 8001 8003 8007 0007 000e     ................
  4076c8:	000e 8007 c003 c003 8007 000e 000e 0007     ................
  4076d8:	8007 8003 8001 8003 800f 000f 0000 0000     ................
	...
  407704:	0000 183e 183f f873 f070 0000 0000 0000     ..>.?.s.p.......
	...
  407720:	2541 3230 3a64 3025 6432 0000 2554 3230     A%02d:%02d..T%02
  407730:	3a64 3025 6432 0000                         d:%02d..

00407738 <_global_impure_ptr>:
  407738:	0030 2040 4e49 0046 6e69 0066 414e 004e     0.@ INF.inf.NAN.
  407748:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  407758:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  407768:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  407778:	296c 0000 0030 0000                         l)..0...

00407780 <blanks.7223>:
  407780:	2020 2020 2020 2020 2020 2020 2020 2020                     

00407790 <zeroes.7224>:
  407790:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  4077a0:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

004077b0 <__mprec_bigtens>:
  4077b0:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  4077c0:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  4077d0:	bf3c 7f73 4fdd 7515                         <.s..O.u

004077d8 <__mprec_tens>:
  4077d8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4077e8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4077f8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  407808:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  407818:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  407828:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  407838:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  407848:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407858:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407868:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407878:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407888:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407898:	9db4 79d9 7843 44ea                         ...yCx.D

004078a0 <p05.6055>:
  4078a0:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  4078b0:	4f50 4953 0058 0000 002e 0000               POSIX.......

004078bc <_ctype_>:
  4078bc:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  4078cc:	2020 2020 2020 2020 2020 2020 2020 2020                     
  4078dc:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4078ec:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4078fc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40790c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40791c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40792c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40793c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

004079c0 <_init>:
  4079c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4079c2:	bf00      	nop
  4079c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4079c6:	bc08      	pop	{r3}
  4079c8:	469e      	mov	lr, r3
  4079ca:	4770      	bx	lr

004079cc <__init_array_start>:
  4079cc:	004032f5 	.word	0x004032f5

004079d0 <__frame_dummy_init_array_entry>:
  4079d0:	00400165                                e.@.

004079d4 <_fini>:
  4079d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4079d6:	bf00      	nop
  4079d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4079da:	bc08      	pop	{r3}
  4079dc:	469e      	mov	lr, r3
  4079de:	4770      	bx	lr

004079e0 <__fini_array_start>:
  4079e0:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 6674 0040 1b0e 7e30               ....tf@...0~

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <hora>:
20400020:	000a 0000                                   ....

20400024 <minuto>:
20400024:	0038 0000                                   8...

20400028 <_impure_ptr>:
20400028:	0030 2040 0000 0000                         0.@ ....

20400030 <impure_data>:
20400030:	0000 0000 031c 2040 0384 2040 03ec 2040     ......@ ..@ ..@ 
	...
204000d8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e8:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400458 <__atexit_recursive_mutex>:
20400458:	0cac 2040                                   ..@ 

2040045c <__malloc_av_>:
	...
20400464:	045c 2040 045c 2040 0464 2040 0464 2040     \.@ \.@ d.@ d.@ 
20400474:	046c 2040 046c 2040 0474 2040 0474 2040     l.@ l.@ t.@ t.@ 
20400484:	047c 2040 047c 2040 0484 2040 0484 2040     |.@ |.@ ..@ ..@ 
20400494:	048c 2040 048c 2040 0494 2040 0494 2040     ..@ ..@ ..@ ..@ 
204004a4:	049c 2040 049c 2040 04a4 2040 04a4 2040     ..@ ..@ ..@ ..@ 
204004b4:	04ac 2040 04ac 2040 04b4 2040 04b4 2040     ..@ ..@ ..@ ..@ 
204004c4:	04bc 2040 04bc 2040 04c4 2040 04c4 2040     ..@ ..@ ..@ ..@ 
204004d4:	04cc 2040 04cc 2040 04d4 2040 04d4 2040     ..@ ..@ ..@ ..@ 
204004e4:	04dc 2040 04dc 2040 04e4 2040 04e4 2040     ..@ ..@ ..@ ..@ 
204004f4:	04ec 2040 04ec 2040 04f4 2040 04f4 2040     ..@ ..@ ..@ ..@ 
20400504:	04fc 2040 04fc 2040 0504 2040 0504 2040     ..@ ..@ ..@ ..@ 
20400514:	050c 2040 050c 2040 0514 2040 0514 2040     ..@ ..@ ..@ ..@ 
20400524:	051c 2040 051c 2040 0524 2040 0524 2040     ..@ ..@ $.@ $.@ 
20400534:	052c 2040 052c 2040 0534 2040 0534 2040     ,.@ ,.@ 4.@ 4.@ 
20400544:	053c 2040 053c 2040 0544 2040 0544 2040     <.@ <.@ D.@ D.@ 
20400554:	054c 2040 054c 2040 0554 2040 0554 2040     L.@ L.@ T.@ T.@ 
20400564:	055c 2040 055c 2040 0564 2040 0564 2040     \.@ \.@ d.@ d.@ 
20400574:	056c 2040 056c 2040 0574 2040 0574 2040     l.@ l.@ t.@ t.@ 
20400584:	057c 2040 057c 2040 0584 2040 0584 2040     |.@ |.@ ..@ ..@ 
20400594:	058c 2040 058c 2040 0594 2040 0594 2040     ..@ ..@ ..@ ..@ 
204005a4:	059c 2040 059c 2040 05a4 2040 05a4 2040     ..@ ..@ ..@ ..@ 
204005b4:	05ac 2040 05ac 2040 05b4 2040 05b4 2040     ..@ ..@ ..@ ..@ 
204005c4:	05bc 2040 05bc 2040 05c4 2040 05c4 2040     ..@ ..@ ..@ ..@ 
204005d4:	05cc 2040 05cc 2040 05d4 2040 05d4 2040     ..@ ..@ ..@ ..@ 
204005e4:	05dc 2040 05dc 2040 05e4 2040 05e4 2040     ..@ ..@ ..@ ..@ 
204005f4:	05ec 2040 05ec 2040 05f4 2040 05f4 2040     ..@ ..@ ..@ ..@ 
20400604:	05fc 2040 05fc 2040 0604 2040 0604 2040     ..@ ..@ ..@ ..@ 
20400614:	060c 2040 060c 2040 0614 2040 0614 2040     ..@ ..@ ..@ ..@ 
20400624:	061c 2040 061c 2040 0624 2040 0624 2040     ..@ ..@ $.@ $.@ 
20400634:	062c 2040 062c 2040 0634 2040 0634 2040     ,.@ ,.@ 4.@ 4.@ 
20400644:	063c 2040 063c 2040 0644 2040 0644 2040     <.@ <.@ D.@ D.@ 
20400654:	064c 2040 064c 2040 0654 2040 0654 2040     L.@ L.@ T.@ T.@ 
20400664:	065c 2040 065c 2040 0664 2040 0664 2040     \.@ \.@ d.@ d.@ 
20400674:	066c 2040 066c 2040 0674 2040 0674 2040     l.@ l.@ t.@ t.@ 
20400684:	067c 2040 067c 2040 0684 2040 0684 2040     |.@ |.@ ..@ ..@ 
20400694:	068c 2040 068c 2040 0694 2040 0694 2040     ..@ ..@ ..@ ..@ 
204006a4:	069c 2040 069c 2040 06a4 2040 06a4 2040     ..@ ..@ ..@ ..@ 
204006b4:	06ac 2040 06ac 2040 06b4 2040 06b4 2040     ..@ ..@ ..@ ..@ 
204006c4:	06bc 2040 06bc 2040 06c4 2040 06c4 2040     ..@ ..@ ..@ ..@ 
204006d4:	06cc 2040 06cc 2040 06d4 2040 06d4 2040     ..@ ..@ ..@ ..@ 
204006e4:	06dc 2040 06dc 2040 06e4 2040 06e4 2040     ..@ ..@ ..@ ..@ 
204006f4:	06ec 2040 06ec 2040 06f4 2040 06f4 2040     ..@ ..@ ..@ ..@ 
20400704:	06fc 2040 06fc 2040 0704 2040 0704 2040     ..@ ..@ ..@ ..@ 
20400714:	070c 2040 070c 2040 0714 2040 0714 2040     ..@ ..@ ..@ ..@ 
20400724:	071c 2040 071c 2040 0724 2040 0724 2040     ..@ ..@ $.@ $.@ 
20400734:	072c 2040 072c 2040 0734 2040 0734 2040     ,.@ ,.@ 4.@ 4.@ 
20400744:	073c 2040 073c 2040 0744 2040 0744 2040     <.@ <.@ D.@ D.@ 
20400754:	074c 2040 074c 2040 0754 2040 0754 2040     L.@ L.@ T.@ T.@ 
20400764:	075c 2040 075c 2040 0764 2040 0764 2040     \.@ \.@ d.@ d.@ 
20400774:	076c 2040 076c 2040 0774 2040 0774 2040     l.@ l.@ t.@ t.@ 
20400784:	077c 2040 077c 2040 0784 2040 0784 2040     |.@ |.@ ..@ ..@ 
20400794:	078c 2040 078c 2040 0794 2040 0794 2040     ..@ ..@ ..@ ..@ 
204007a4:	079c 2040 079c 2040 07a4 2040 07a4 2040     ..@ ..@ ..@ ..@ 
204007b4:	07ac 2040 07ac 2040 07b4 2040 07b4 2040     ..@ ..@ ..@ ..@ 
204007c4:	07bc 2040 07bc 2040 07c4 2040 07c4 2040     ..@ ..@ ..@ ..@ 
204007d4:	07cc 2040 07cc 2040 07d4 2040 07d4 2040     ..@ ..@ ..@ ..@ 
204007e4:	07dc 2040 07dc 2040 07e4 2040 07e4 2040     ..@ ..@ ..@ ..@ 
204007f4:	07ec 2040 07ec 2040 07f4 2040 07f4 2040     ..@ ..@ ..@ ..@ 
20400804:	07fc 2040 07fc 2040 0804 2040 0804 2040     ..@ ..@ ..@ ..@ 
20400814:	080c 2040 080c 2040 0814 2040 0814 2040     ..@ ..@ ..@ ..@ 
20400824:	081c 2040 081c 2040 0824 2040 0824 2040     ..@ ..@ $.@ $.@ 
20400834:	082c 2040 082c 2040 0834 2040 0834 2040     ,.@ ,.@ 4.@ 4.@ 
20400844:	083c 2040 083c 2040 0844 2040 0844 2040     <.@ <.@ D.@ D.@ 
20400854:	084c 2040 084c 2040 0854 2040 0854 2040     L.@ L.@ T.@ T.@ 

20400864 <__malloc_sbrk_base>:
20400864:	ffff ffff                                   ....

20400868 <__malloc_trim_threshold>:
20400868:	0000 0002                                   ....

2040086c <__global_locale>:
2040086c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040088c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ac:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008cc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ec:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040090c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040092c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040094c:	5a29 0040 55e9 0040 0000 0000 78bc 0040     )Z@..U@......x@.
2040095c:	78b8 0040 775c 0040 775c 0040 775c 0040     .x@.\w@.\w@.\w@.
2040096c:	775c 0040 775c 0040 775c 0040 775c 0040     \w@.\w@.\w@.\w@.
2040097c:	775c 0040 775c 0040 ffff ffff ffff ffff     \w@.\w@.........
2040098c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009b4:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
